{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/mock.ts"],"sourcesContent":["import { \r\n  Transaction, \r\n  MonthMetrics, \r\n  CopilotAdvice, \r\n  TransactionCategory,\r\n  TransactionType,\r\n  PaymentMethod,\r\n  TransactionQueryParams\r\n} from \"./types\"\r\n\r\n// ============================================================================\r\n// MOCK DATA GENERATORS\r\n// ============================================================================\r\n\r\n/**\r\n * Generate realistic student transactions for a given month\r\n * Simulates typical student spending patterns and income sources\r\n */\r\nexport function generateStudentTransactions(month: string): Transaction[] {\r\n  const [year, monthNum] = month.split('-').map(Number)\r\n  const endDate = new Date(year, monthNum, 0)\r\n  const daysInMonth = endDate.getDate()\r\n  \r\n  const transactions: Transaction[] = []\r\n  let transactionId = 1\r\n  \r\n  // Helper to create a transaction\r\n  const createTransaction = (\r\n    date: Date,\r\n    description: string,\r\n    amountCents: number,\r\n    category: TransactionCategory,\r\n    type: TransactionType,\r\n    paymentMethod: PaymentMethod,\r\n    merchant?: string,\r\n    tags: string[] = []\r\n  ): Transaction => ({\r\n    id: `txn_${transactionId++}`,\r\n    date: date.toISOString(),\r\n    description,\r\n    amount: { amount: amountCents, currency: \"USD\", symbol: \"$\" },\r\n    category,\r\n    type,\r\n    status: Math.random() > 0.1 ? \"cleared\" : \"pending\",\r\n    paymentMethod,\r\n    accountId: \"acc_student_checking\",\r\n    merchant,\r\n    location: Math.random() > 0.7 ? {\r\n      name: merchant || \"Unknown Location\",\r\n      address: \"123 University Ave, College Town, ST 12345\"\r\n    } : undefined,\r\n    tags,\r\n    notes: Math.random() > 0.8 ? \"Student transaction\" : undefined,\r\n    metadata: {\r\n      source: \"mock_data\",\r\n      generated: true\r\n    },\r\n    createdAt: date.toISOString(),\r\n    updatedAt: date.toISOString()\r\n  })\r\n  \r\n  // Generate transactions for each day\r\n  for (let day = 1; day <= daysInMonth; day++) {\r\n    const currentDate = new Date(year, monthNum - 1, day)\r\n    const dayOfWeek = currentDate.getDay()\r\n    const isWeekend = dayOfWeek === 0 || dayOfWeek === 6\r\n    \r\n    // Income transactions (bi-weekly paychecks, occasional refunds)\r\n    if (day === 1 || day === 15) {\r\n      // Bi-weekly paycheck from part-time job\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Part-time job paycheck\",\r\n        120000, // $1,200\r\n        \"income\",\r\n        \"income\",\r\n        \"bank_transfer\",\r\n        \"Campus Dining Services\"\r\n      ))\r\n    }\r\n    \r\n    if (day === 3 && Math.random() > 0.7) {\r\n      // Occasional refund\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Textbook refund\",\r\n        Math.floor(Math.random() * 50000) + 20000, // $200-700\r\n        \"refund\",\r\n        \"income\",\r\n        \"bank_transfer\",\r\n        \"University Bookstore\"\r\n      ))\r\n    }\r\n    \r\n    // Daily expenses\r\n    const dailyExpenseCount = isWeekend ? \r\n      Math.floor(Math.random() * 3) + 1 : // 1-3 on weekends\r\n      Math.floor(Math.random() * 2) + 1   // 1-2 on weekdays\r\n    \r\n    for (let i = 0; i < dailyExpenseCount; i++) {\r\n      const expenseTypes = getDailyExpenses(day, isWeekend)\r\n      const expense = expenseTypes[Math.floor(Math.random() * expenseTypes.length)]\r\n      \r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        expense.description,\r\n        expense.amount,\r\n        expense.category,\r\n        \"expense\",\r\n        expense.paymentMethod,\r\n        expense.merchant,\r\n        expense.tags\r\n      ))\r\n    }\r\n    \r\n    // Weekly recurring expenses\r\n    if (day % 7 === 0) {\r\n      // Weekly grocery shopping\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Weekly grocery shopping\",\r\n        Math.floor(Math.random() * 8000) + 4000, // $40-120\r\n        \"food\",\r\n        \"expense\",\r\n        \"debit_card\",\r\n        \"Campus Market\",\r\n        [\"groceries\", \"weekly\"]\r\n      ))\r\n    }\r\n    \r\n    // Monthly recurring expenses\r\n    if (day === 1) {\r\n      // Rent\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Monthly rent\",\r\n        120000, // $1,200\r\n        \"housing\",\r\n        \"expense\",\r\n        \"bank_transfer\",\r\n        \"University Housing\",\r\n        [\"rent\", \"monthly\"]\r\n      ))\r\n      \r\n      // Utilities\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Utilities\",\r\n        Math.floor(Math.random() * 3000) + 2000, // $20-50\r\n        \"utilities\",\r\n        \"expense\",\r\n        \"debit_card\",\r\n        \"Campus Utilities\",\r\n        [\"utilities\", \"monthly\"]\r\n      ))\r\n    }\r\n    \r\n    if (day === 5) {\r\n      // Tuition payment (if applicable)\r\n      if (Math.random() > 0.3) {\r\n        transactions.push(createTransaction(\r\n          currentDate,\r\n          \"Tuition payment\",\r\n          Math.floor(Math.random() * 200000) + 300000, // $3,000-5,000\r\n          \"tuition\",\r\n          \"expense\",\r\n          \"bank_transfer\",\r\n          \"University Bursar\",\r\n          [\"tuition\", \"education\"]\r\n        ))\r\n      }\r\n    }\r\n  }\r\n  \r\n  return transactions.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\r\n}\r\n\r\n/**\r\n * Get daily expense patterns based on day and weekend status\r\n */\r\nfunction getDailyExpenses(day: number, isWeekend: boolean): Array<{\r\n  description: string\r\n  amount: number\r\n  category: TransactionCategory\r\n  paymentMethod: PaymentMethod\r\n  merchant?: string\r\n  tags: string[]\r\n}> {\r\n  const baseExpenses = [\r\n    // Food expenses\r\n    {\r\n      description: \"Coffee\",\r\n      amount: Math.floor(Math.random() * 300) + 200, // $2-5\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Coffee Shop\",\r\n      tags: [\"coffee\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Lunch\",\r\n      amount: Math.floor(Math.random() * 800) + 500, // $5-13\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Dining Hall\",\r\n      tags: [\"lunch\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Dinner\",\r\n      amount: Math.floor(Math.random() * 1000) + 800, // $8-18\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Dining Hall\",\r\n      tags: [\"dinner\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Snacks\",\r\n      amount: Math.floor(Math.random() * 400) + 200, // $2-6\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Store\",\r\n      tags: [\"snacks\", \"daily\"]\r\n    },\r\n    \r\n    // Transportation\r\n    {\r\n      description: \"Bus fare\",\r\n      amount: 250, // $2.50\r\n      category: \"transportation\" as TransactionCategory,\r\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\r\n      merchant: \"City Transit\",\r\n      tags: [\"transport\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Uber ride\",\r\n      amount: Math.floor(Math.random() * 1500) + 800, // $8-23\r\n      category: \"transportation\" as TransactionCategory,\r\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\r\n      merchant: \"Uber\",\r\n      tags: [\"transport\", \"ride_share\"]\r\n    },\r\n    \r\n    // Entertainment\r\n    {\r\n      description: \"Movie ticket\",\r\n      amount: Math.floor(Math.random() * 500) + 800, // $8-13\r\n      category: \"entertainment\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Theater\",\r\n      tags: [\"entertainment\", \"movies\"]\r\n    },\r\n    {\r\n      description: \"Streaming subscription\",\r\n      amount: 1500, // $15\r\n      category: \"entertainment\" as TransactionCategory,\r\n      paymentMethod: \"credit_card\" as PaymentMethod,\r\n      merchant: \"Netflix\",\r\n      tags: [\"entertainment\", \"subscription\"]\r\n    },\r\n    \r\n    // Shopping\r\n    {\r\n      description: \"Textbook\",\r\n      amount: Math.floor(Math.random() * 15000) + 5000, // $50-200\r\n      category: \"books\" as TransactionCategory,\r\n      paymentMethod: \"credit_card\" as PaymentMethod,\r\n      merchant: \"University Bookstore\",\r\n      tags: [\"books\", \"education\"]\r\n    },\r\n    {\r\n      description: \"School supplies\",\r\n      amount: Math.floor(Math.random() * 2000) + 500, // $5-25\r\n      category: \"shopping\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Store\",\r\n      tags: [\"supplies\", \"education\"]\r\n    },\r\n    {\r\n      description: \"Clothing\",\r\n      amount: Math.floor(Math.random() * 8000) + 2000, // $20-100\r\n      category: \"shopping\" as TransactionCategory,\r\n      paymentMethod: \"credit_card\" as PaymentMethod,\r\n      merchant: \"Campus Clothing Store\",\r\n      tags: [\"clothing\", \"shopping\"]\r\n    },\r\n    \r\n    // Healthcare\r\n    {\r\n      description: \"Prescription\",\r\n      amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\r\n      category: \"healthcare\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Pharmacy\",\r\n      tags: [\"healthcare\", \"prescription\"]\r\n    },\r\n    {\r\n      description: \"Doctor visit\",\r\n      amount: Math.floor(Math.random() * 5000) + 2000, // $20-70\r\n      category: \"healthcare\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Health Center\",\r\n      tags: [\"healthcare\", \"medical\"]\r\n    }\r\n  ]\r\n  \r\n  if (isWeekend) {\r\n    // Weekend-specific expenses\r\n    baseExpenses.push(\r\n      {\r\n        description: \"Weekend brunch\",\r\n        amount: Math.floor(Math.random() * 1200) + 800, // $8-20\r\n        category: \"food\" as TransactionCategory,\r\n        paymentMethod: \"debit_card\" as PaymentMethod,\r\n        merchant: \"Campus Brunch Spot\",\r\n        tags: [\"food\", \"weekend\", \"brunch\"]\r\n      },\r\n      {\r\n        description: \"Party supplies\",\r\n        amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\r\n        category: \"entertainment\" as TransactionCategory,\r\n        paymentMethod: \"debit_card\" as PaymentMethod,\r\n        merchant: \"Campus Store\",\r\n        tags: [\"entertainment\", \"party\", \"weekend\"]\r\n      }\r\n    )\r\n  }\r\n  \r\n  return baseExpenses\r\n}\r\n\r\n/**\r\n * Generate monthly metrics based on transactions\r\n */\r\nexport function generateMonthMetrics(month: string, transactions: Transaction[]): MonthMetrics {\r\n  const incomeTransactions = transactions.filter(t => t.type === \"income\")\r\n  const expenseTransactions = transactions.filter(t => t.type === \"expense\")\r\n  \r\n  const totalIncome = incomeTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\r\n  const totalExpenses = expenseTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\r\n  const netIncome = totalIncome - totalExpenses\r\n  const savingsRate = totalIncome > 0 ? (netIncome / totalIncome) * 100 : 0\r\n  \r\n  // Category breakdown\r\n  const categoryMap = new Map<TransactionCategory, { amount: number; count: number }>()\r\n  expenseTransactions.forEach(t => {\r\n    const existing = categoryMap.get(t.category) || { amount: 0, count: 0 }\r\n    categoryMap.set(t.category, {\r\n      amount: existing.amount + t.amount.amount,\r\n      count: existing.count + 1\r\n    })\r\n  })\r\n  \r\n  const categoryBreakdown = Array.from(categoryMap.entries()).map(([category, data]) => ({\r\n    category,\r\n    amount: { amount: data.amount, currency: \"USD\", symbol: \"$\" },\r\n    percentage: totalExpenses > 0 ? (data.amount / totalExpenses) * 100 : 0,\r\n    transactionCount: data.count\r\n  })).sort((a, b) => b.amount.amount - a.amount.amount)\r\n  \r\n  // Spending patterns\r\n  const dailySpending = new Map<string, number>()\r\n  expenseTransactions.forEach(t => {\r\n    const date = t.date.split('T')[0]\r\n    dailySpending.set(date, (dailySpending.get(date) || 0) + t.amount.amount)\r\n  })\r\n  \r\n  const averageDailySpending = dailySpending.size > 0 ? \r\n    Array.from(dailySpending.values()).reduce((sum, amount) => sum + amount, 0) / dailySpending.size : 0\r\n  \r\n  const highestSpendingDay = Array.from(dailySpending.entries())\r\n    .sort((a, b) => b[1] - a[1])[0] || [\"\", 0]\r\n  \r\n  const mostFrequentCategory = categoryBreakdown\r\n    .sort((a, b) => b.transactionCount - a.transactionCount)[0]?.category || \"other\"\r\n  \r\n  const mostExpensiveCategory = categoryBreakdown[0]?.category || \"other\"\r\n  \r\n  // Generate alerts\r\n  const alerts = []\r\n  if (savingsRate < 10) {\r\n    alerts.push({\r\n      type: \"goal_missed\" as const,\r\n      category: \"general\" as TransactionCategory,\r\n      message: \"Your savings rate is below 10%. Consider reducing discretionary spending.\",\r\n      severity: \"medium\" as const\r\n    })\r\n  }\r\n  \r\n  if (totalExpenses > totalIncome * 0.9) {\r\n    alerts.push({\r\n      type: \"overspend\" as const,\r\n      category: \"general\" as TransactionCategory,\r\n      message: \"You're spending over 90% of your income. This leaves little room for savings.\",\r\n      severity: \"high\" as const\r\n    })\r\n  }\r\n  \r\n  const foodSpending = categoryBreakdown.find(c => c.category === \"food\")?.amount.amount || 0\r\n  if (foodSpending > totalExpenses * 0.4) {\r\n    alerts.push({\r\n      type: \"overspend\" as const,\r\n      category: \"food\" as TransactionCategory,\r\n      message: \"Food spending is over 40% of total expenses. Consider meal planning to reduce costs.\",\r\n      severity: \"medium\" as const\r\n    })\r\n  }\r\n  \r\n  return {\r\n    month,\r\n    totalIncome: { amount: totalIncome, currency: \"USD\", symbol: \"$\" },\r\n    totalExpenses: { amount: totalExpenses, currency: \"USD\", symbol: \"$\" },\r\n    netIncome: { amount: netIncome, currency: \"USD\", symbol: \"$\" },\r\n    savingsRate,\r\n    categoryBreakdown,\r\n    spendingPatterns: {\r\n      averageDailySpending: { amount: Math.round(averageDailySpending), currency: \"USD\", symbol: \"$\" },\r\n      highestSpendingDay: {\r\n        date: highestSpendingDay[0],\r\n        amount: { amount: highestSpendingDay[1], currency: \"USD\", symbol: \"$\" }\r\n      },\r\n      mostFrequentCategory,\r\n      mostExpensiveCategory\r\n    },\r\n    budgetComparison: [], // Would be populated with actual budget data\r\n    trends: {\r\n      weekOverWeek: {\r\n        incomeChange: Math.random() * 20 - 10, // -10% to +10%\r\n        expenseChange: Math.random() * 20 - 10\r\n      },\r\n      monthOverMonth: {\r\n        incomeChange: Math.random() * 30 - 15, // -15% to +15%\r\n        expenseChange: Math.random() * 30 - 15\r\n      }\r\n    },\r\n    alerts,\r\n    generatedAt: new Date().toISOString(),\r\n    trend_daily: [] // Will be populated by the calendar component\r\n  }\r\n}\r\n\r\n/**\r\n * Generate AI copilot advice based on metrics and transactions\r\n */\r\nexport function generateCopilotAdvice(\r\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\r\n  month: string,\r\n  metrics: MonthMetrics,\r\n  transactions: Transaction[]\r\n): CopilotAdvice {\r\n  const adviceTemplates = {\r\n    general: [\r\n      {\r\n        title: \"Financial Health Check\",\r\n        message: \"Your financial health looks good overall. Consider these small improvements to optimize your student budget.\",\r\n        priority: \"medium\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_1\",\r\n            title: \"Set up automatic savings\",\r\n            description: \"Transfer $50-100 to savings each month automatically\",\r\n            actionType: \"save_more\" as const,\r\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"easy\" as const,\r\n            timeframe: \"immediate\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    budget: [\r\n      {\r\n        title: \"Budget Optimization\",\r\n        message: \"Your current spending patterns show room for improvement. Here's how to optimize your budget.\",\r\n        priority: \"high\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_2\",\r\n            title: \"Reduce food spending\",\r\n            description: \"Meal prep on Sundays to cut food costs by 30%\",\r\n            actionType: \"reduce_spending\" as const,\r\n            estimatedImpact: { amount: 8000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"medium\" as const,\r\n            timeframe: \"short_term\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    savings: [\r\n      {\r\n        title: \"Boost Your Savings\",\r\n        message: \"Your savings rate could be improved. Here are some strategies to save more money.\",\r\n        priority: \"high\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_3\",\r\n            title: \"Open a high-yield savings account\",\r\n            description: \"Earn 4%+ interest on your emergency fund\",\r\n            actionType: \"save_more\" as const,\r\n            estimatedImpact: { amount: 2000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"easy\" as const,\r\n            timeframe: \"immediate\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    spending: [\r\n      {\r\n        title: \"Smart Spending Tips\",\r\n        message: \"You're spending more than necessary in some categories. Here's how to spend smarter.\",\r\n        priority: \"medium\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_4\",\r\n            title: \"Use student discounts\",\r\n            description: \"Take advantage of student pricing for software, transportation, and entertainment\",\r\n            actionType: \"reduce_spending\" as const,\r\n            estimatedImpact: { amount: 3000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"easy\" as const,\r\n            timeframe: \"immediate\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    debt: [\r\n      {\r\n        title: \"Debt Management\",\r\n        message: \"If you have student loans or credit card debt, here's how to manage it effectively.\",\r\n        priority: \"urgent\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_5\",\r\n            title: \"Pay more than minimum\",\r\n            description: \"Even $25 extra per month can save thousands in interest\",\r\n            actionType: \"pay_debt\" as const,\r\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"medium\" as const,\r\n            timeframe: \"long_term\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    investment: [\r\n      {\r\n        title: \"Start Investing Early\",\r\n        message: \"Even small amounts invested now can grow significantly over time.\",\r\n        priority: \"low\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_6\",\r\n            title: \"Open a Roth IRA\",\r\n            description: \"Start with $25/month in a low-cost index fund\",\r\n            actionType: \"save_more\" as const,\r\n            estimatedImpact: { amount: 10000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"hard\" as const,\r\n            timeframe: \"long_term\" as const\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n  \r\n  const template = adviceTemplates[mode][0]\r\n  const relevantTransactionIds = transactions\r\n    .filter(t => t.type === \"expense\")\r\n    .slice(0, 5)\r\n    .map(t => t.id)\r\n  \r\n  return {\r\n    id: `advice_${Date.now()}`,\r\n    mode,\r\n    title: template.title,\r\n    message: template.message,\r\n    priority: template.priority,\r\n    category: \"general\",\r\n    recommendations: template.recommendations,\r\n    insights: [\r\n      {\r\n        metric: \"Savings Rate\",\r\n        value: `${metrics.savingsRate.toFixed(1)}%`,\r\n        trend: metrics.savingsRate > 20 ? \"up\" : \"down\",\r\n        significance: \"high\"\r\n      },\r\n      {\r\n        metric: \"Monthly Expenses\",\r\n        value: `$${(metrics.totalExpenses.amount / 100).toFixed(0)}`,\r\n        trend: \"stable\",\r\n        significance: \"medium\"\r\n      }\r\n    ],\r\n    context: {\r\n      month,\r\n      relevantTransactions: relevantTransactionIds,\r\n      userProfile: {\r\n        studentType: \"undergraduate\",\r\n        incomeLevel: \"medium\",\r\n        spendingStyle: \"moderate\"\r\n      }\r\n    },\r\n    generatedAt: new Date().toISOString(),\r\n    expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString() // 7 days\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// MOCK DATA STORAGE\r\n// ============================================================================\r\n\r\n/**\r\n * In-memory storage for mock data\r\n * In production, this would be replaced with actual database calls\r\n */\r\nclass MockDataStore {\r\n  private transactions: Map<string, Transaction[]> = new Map()\r\n  private metrics: Map<string, MonthMetrics> = new Map()\r\n  private advice: Map<string, CopilotAdvice[]> = new Map()\r\n  \r\n  constructor() {\r\n    // Pre-generate data for current month and previous month\r\n    const currentMonth = new Date().toISOString().slice(0, 7)\r\n    const lastMonth = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().slice(0, 7)\r\n    \r\n    this.generateMonthData(currentMonth)\r\n    this.generateMonthData(lastMonth)\r\n    \r\n    // Also generate data for a few months back to ensure we have data\r\n    const monthsBack = ['2024-12', '2025-01', '2025-02', '2025-03', '2025-04', '2025-05', '2025-06', '2025-07', '2025-08']\r\n    monthsBack.forEach(month => this.generateMonthData(month))\r\n  }\r\n  \r\n  private generateMonthData(month: string) {\r\n    const transactions = generateStudentTransactions(month)\r\n    const metrics = generateMonthMetrics(month, transactions)\r\n    \r\n    this.transactions.set(month, transactions)\r\n    this.metrics.set(month, metrics)\r\n  }\r\n  \r\n  getTransactions(month: string): Transaction[] {\r\n    if (!this.transactions.has(month)) {\r\n      this.generateMonthData(month)\r\n    }\r\n    return this.transactions.get(month) || []\r\n  }\r\n  \r\n  getMetrics(month: string): MonthMetrics | null {\r\n    if (!this.metrics.has(month)) {\r\n      this.generateMonthData(month)\r\n    }\r\n    return this.metrics.get(month) || null\r\n  }\r\n  \r\n  getAdvice(mode: string, month: string): CopilotAdvice[] {\r\n    const key = `${mode}_${month}`\r\n    if (!this.advice.has(key)) {\r\n      const transactions = this.getTransactions(month)\r\n      const metrics = this.getMetrics(month)\r\n      if (metrics) {\r\n        const advice = generateCopilotAdvice(\r\n          mode as \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\r\n          month,\r\n          metrics,\r\n          transactions\r\n        )\r\n        this.advice.set(key, [advice])\r\n      }\r\n    }\r\n    return this.advice.get(key) || []\r\n  }\r\n}\r\n\r\n// Global mock data store instance\r\nexport const mockDataStore = new MockDataStore()\r\n\r\n// ============================================================================\r\n// UTILITY FUNCTIONS\r\n// ============================================================================\r\n\r\n/**\r\n * Filter transactions based on query parameters\r\n */\r\nexport function filterTransactions(\r\n  transactions: Transaction[],\r\n  params: TransactionQueryParams\r\n): Transaction[] {\r\n  let filtered = [...transactions]\r\n  \r\n  if (params.category) {\r\n    filtered = filtered.filter(t => t.category === params.category)\r\n  }\r\n  \r\n  if (params.type) {\r\n    filtered = filtered.filter(t => t.type === params.type)\r\n  }\r\n  \r\n  if (params.status) {\r\n    filtered = filtered.filter(t => t.status === params.status)\r\n  }\r\n  \r\n  if (params.minAmount !== undefined) {\r\n    filtered = filtered.filter(t => t.amount.amount >= params.minAmount!)\r\n  }\r\n  \r\n  if (params.maxAmount !== undefined) {\r\n    filtered = filtered.filter(t => t.amount.amount <= params.maxAmount!)\r\n  }\r\n  \r\n  if (params.search) {\r\n    const searchLower = params.search.toLowerCase()\r\n    filtered = filtered.filter(t => \r\n      t.description.toLowerCase().includes(searchLower) ||\r\n      t.merchant?.toLowerCase().includes(searchLower) ||\r\n      t.notes?.toLowerCase().includes(searchLower)\r\n    )\r\n  }\r\n  \r\n  if (params.tags && params.tags.length > 0) {\r\n    filtered = filtered.filter(t => \r\n      params.tags!.some(tag => t.tags.includes(tag))\r\n    )\r\n  }\r\n  \r\n  // Sorting\r\n  if (params.sortBy) {\r\n    filtered.sort((a, b) => {\r\n      let aVal: string | number, bVal: string | number\r\n      \r\n      switch (params.sortBy) {\r\n        case \"date\":\r\n          aVal = new Date(a.date).getTime()\r\n          bVal = new Date(b.date).getTime()\r\n          break\r\n        case \"amount\":\r\n          aVal = a.amount.amount\r\n          bVal = b.amount.amount\r\n          break\r\n        case \"description\":\r\n          aVal = a.description\r\n          bVal = b.description\r\n          break\r\n        default:\r\n          return 0\r\n      }\r\n      \r\n      if (params.sortOrder === \"desc\") {\r\n        return bVal > aVal ? 1 : -1\r\n      } else {\r\n        return aVal > bVal ? 1 : -1\r\n      }\r\n    })\r\n  }\r\n  \r\n  return filtered\r\n}\r\n\r\n/**\r\n * Paginate results\r\n */\r\nexport function paginateResults<T>(\r\n  items: T[],\r\n  page: number = 1,\r\n  limit: number = 20\r\n): { items: T[]; total: number; page: number; totalPages: number } {\r\n  const startIndex = (page - 1) * limit\r\n  const endIndex = startIndex + limit\r\n  const paginatedItems = items.slice(startIndex, endIndex)\r\n  \r\n  return {\r\n    items: paginatedItems,\r\n    total: items.length,\r\n    page,\r\n    totalPages: Math.ceil(items.length / limit)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/api.ts"],"sourcesContent":["import { \r\n  Transaction, \r\n  MonthMetrics, \r\n  CopilotAdvice, \r\n  ApiResponse, \r\n  TransactionQueryParams,\r\n  CurrencyFormatOptions,\r\n  User\r\n} from \"./types\"\r\nimport { mockDataStore, filterTransactions, paginateResults } from \"./mock\"\r\n\r\n// ============================================================================\r\n// API CONFIGURATION\r\n// ============================================================================\r\n\r\n/**\r\n * API Configuration\r\n * \r\n * To swap to real endpoints later:\r\n * 1. Update BASE_URL to your API server\r\n * 2. Replace mock data calls with actual HTTP requests\r\n * 3. Update error handling for network failures\r\n * 4. Add authentication headers if needed\r\n */\r\nconst API_CONFIG = {\r\n  BASE_URL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001/api\",\r\n  TIMEOUT: 10000, // 10 seconds\r\n  RETRY_ATTEMPTS: 3,\r\n  RETRY_DELAY: 1000, // 1 second\r\n}\r\n\r\n// ============================================================================\r\n// HTTP CLIENT\r\n// ============================================================================\r\n\r\n/**\r\n * Generic HTTP client with error handling and retries\r\n * \r\n * In production, replace with your preferred HTTP client (axios, fetch, etc.)\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nclass ApiClient {\r\n  private async request<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {}\r\n  ): Promise<ApiResponse<T>> {\r\n    const url = `${API_CONFIG.BASE_URL}${endpoint}`\r\n    \r\n    const defaultOptions: RequestInit = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Add authentication headers here if needed\r\n        // 'Authorization': `Bearer ${getAuthToken()}`,\r\n      },\r\n      ...options,\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(url, defaultOptions)\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n      }\r\n      \r\n      const data = await response.json()\r\n      return {\r\n        success: true,\r\n        data,\r\n        error: null\r\n      }\r\n    } catch (error) {\r\n      console.error(`API Error for ${endpoint}:`, error)\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'NETWORK_ERROR',\r\n          message: error instanceof Error ? error.message : 'Unknown error',\r\n          details: { endpoint, options },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  async get<T>(endpoint: string, params?: Record<string, string>): Promise<ApiResponse<T>> {\r\n    const url = params ? `${endpoint}?${new URLSearchParams(params)}` : endpoint\r\n    return this.request<T>(url, { method: 'GET' })\r\n  }\r\n  \r\n  async post<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      body: data ? JSON.stringify(data) : undefined\r\n    })\r\n  }\r\n  \r\n  async put<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PUT',\r\n      body: data ? JSON.stringify(data) : undefined\r\n    })\r\n  }\r\n  \r\n  async delete<T>(endpoint: string): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, { method: 'DELETE' })\r\n  }\r\n}\r\n\r\n// Global API client instance\r\n// const apiClient = new ApiClient() // Uncomment when switching to real API\r\n\r\n// ============================================================================\r\n// MOCK API IMPLEMENTATION\r\n// ============================================================================\r\n\r\n/**\r\n * Mock API implementation using in-memory data\r\n * \r\n * To replace with real API:\r\n * 1. Replace mockDataStore calls with apiClient calls\r\n * 2. Update response format to match your API\r\n * 3. Add proper error handling for network failures\r\n * 4. Implement caching if needed\r\n */\r\n\r\n/**\r\n * Fetch monthly metrics for a specific month\r\n * \r\n * @param month - Month in YYYY-MM format\r\n * @returns Promise<ApiResponse<MonthMetrics>>\r\n * \r\n * Real API endpoint: GET /api/metrics/{month}\r\n */\r\nexport async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\r\n  try {\r\n    console.log('Fetching metrics for month:', month)\r\n    \r\n    // Validate month format\r\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\r\n      console.error('Invalid month format:', month)\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'INVALID_MONTH_FORMAT',\r\n          message: 'Month must be in YYYY-MM format',\r\n          details: { month },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n    \r\n    // In production, replace with:\r\n    // return apiClient.get<MonthMetrics>(`/metrics/${month}`)\r\n    \r\n    const metrics = mockDataStore.getMetrics(month)\r\n    console.log('Retrieved metrics:', metrics ? 'Found' : 'Not found')\r\n    \r\n    if (!metrics) {\r\n      console.error('No metrics found for month:', month)\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'METRICS_NOT_FOUND',\r\n          message: `No metrics found for month ${month}`,\r\n          details: { month },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n    \r\n    console.log('Returning metrics successfully')\r\n    return {\r\n      success: true,\r\n      data: metrics,\r\n      error: null\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching month metrics:', error)\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'INTERNAL_ERROR',\r\n        message: 'Failed to fetch month metrics',\r\n        details: { month, error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch transactions with optional filtering and pagination\r\n * \r\n * @param params - Query parameters for filtering and pagination\r\n * @returns Promise<ApiResponse<Transaction[]>>\r\n * \r\n * Real API endpoint: GET /api/transactions?{params}\r\n */\r\nexport async function fetchTransactions(\r\n  params: TransactionQueryParams = {}\r\n): Promise<ApiResponse<Transaction[]>> {\r\n  try {\r\n    const { month = new Date().toISOString().slice(0, 7), page = 1, limit = 20, ...filters } = params\r\n    \r\n    // In production, replace with:\r\n    // const queryParams = new URLSearchParams()\r\n    // Object.entries(params).forEach(([key, value]) => {\r\n    //   if (value !== undefined) {\r\n    //     queryParams.append(key, String(value))\r\n    //   }\r\n    // })\r\n    // return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\r\n    \r\n    const allTransactions = mockDataStore.getTransactions(month)\r\n    const filteredTransactions = filterTransactions(allTransactions, filters)\r\n    const paginatedResult = paginateResults(filteredTransactions, page, limit)\r\n    \r\n    return {\r\n      success: true,\r\n      data: paginatedResult.items,\r\n      error: null,\r\n      metadata: {\r\n        total: paginatedResult.total,\r\n        page: paginatedResult.page,\r\n        limit,\r\n        hasMore: paginatedResult.page < paginatedResult.totalPages\r\n      }\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'INTERNAL_ERROR',\r\n        message: 'Failed to fetch transactions',\r\n        details: { params, error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch AI copilot advice for a specific mode and month\r\n * \r\n * @param mode - Advice mode (general, budget, savings, etc.)\r\n * @param month - Month in YYYY-MM format\r\n * @returns Promise<ApiResponse<CopilotAdvice[]>>\r\n * \r\n * Real API endpoint: GET /api/advice/{mode}?month={month}\r\n */\r\nexport async function fetchAdvice(\r\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\r\n  month: string = new Date().toISOString().slice(0, 7)\r\n): Promise<ApiResponse<CopilotAdvice[]>> {\r\n  try {\r\n    // Validate month format\r\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'INVALID_MONTH_FORMAT',\r\n          message: 'Month must be in YYYY-MM format',\r\n          details: { month },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n    \r\n    // In production, replace with:\r\n    // return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\r\n    \r\n    const advice = mockDataStore.getAdvice(mode, month)\r\n    \r\n    return {\r\n      success: true,\r\n      data: advice,\r\n      error: null\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'INTERNAL_ERROR',\r\n        message: 'Failed to fetch advice',\r\n        details: { mode, month, error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function fetchCurrentUser(): Promise<ApiResponse<User>> {\r\n  try {\r\n    // In production, replace with:\r\n    // return apiClient.get<User>(\"/user/me\")\r\n    \r\n    // Mock user data\r\n    const user: User = {\r\n      id: \"user_1\",\r\n      firstName: \"John\",\r\n      lastName: \"Doe\",\r\n      email: \"john.doe@example.com\",\r\n      avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=32&h=32&fit=crop&crop=face\",\r\n      preferences: {\r\n        currency: \"USD\",\r\n        dateFormat: \"MM/DD/YYYY\",\r\n        timezone: \"America/New_York\",\r\n        notifications: {\r\n          email: true,\r\n          push: true,\r\n          sms: false,\r\n        },\r\n      },\r\n      createdAt: \"2024-01-01T00:00:00Z\",\r\n      updatedAt: new Date().toISOString(),\r\n    }\r\n    \r\n    return {\r\n      success: true,\r\n      data: user,\r\n      error: null,\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching user:\", error)\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'USER_FETCH_ERROR',\r\n        message: \"Failed to fetch user\",\r\n        details: { error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// CURRENCY UTILITIES\r\n// ============================================================================\r\n\r\n/**\r\n * Format currency amount for display\r\n * \r\n * @param amount - Amount in cents\r\n * @param currency - Currency code (default: USD)\r\n * @param options - Formatting options\r\n * @returns Formatted currency string\r\n */\r\nexport function formatCurrency(\r\n  amount: number,\r\n  currency: string = \"USD\",\r\n  options: CurrencyFormatOptions = {}\r\n): string {\r\n  const {\r\n    showSymbol = true,\r\n    showCents = true,\r\n    locale = \"en-US\",\r\n    compact = false\r\n  } = options\r\n  \r\n  const amountInDollars = amount / 100\r\n  const currencySymbol = getCurrencySymbol(currency)\r\n  \r\n  const formatter = new Intl.NumberFormat(locale, {\r\n    style: \"currency\",\r\n    currency,\r\n    minimumFractionDigits: showCents ? 2 : 0,\r\n    maximumFractionDigits: showCents ? 2 : 0,\r\n    notation: compact ? \"compact\" : \"standard\"\r\n  })\r\n  \r\n  let formatted = formatter.format(amountInDollars)\r\n  \r\n  if (!showSymbol) {\r\n    formatted = formatted.replace(currencySymbol, \"\").trim()\r\n  }\r\n  \r\n  return formatted\r\n}\r\n\r\n/**\r\n * Get currency symbol for a given currency code\r\n */\r\nexport function getCurrencySymbol(currency: string): string {\r\n  const symbols: Record<string, string> = {\r\n    USD: \"$\",\r\n    EUR: \"€\",\r\n    GBP: \"£\",\r\n    JPY: \"¥\",\r\n    CAD: \"C$\",\r\n    AUD: \"A$\",\r\n    CHF: \"CHF\",\r\n    CNY: \"¥\",\r\n    INR: \"₹\",\r\n    BRL: \"R$\",\r\n    MXN: \"$\",\r\n    KRW: \"₩\",\r\n    SGD: \"S$\",\r\n    HKD: \"HK$\",\r\n    NOK: \"kr\",\r\n    SEK: \"kr\",\r\n    DKK: \"kr\",\r\n    PLN: \"zł\",\r\n    CZK: \"Kč\",\r\n    HUF: \"Ft\",\r\n    RON: \"lei\",\r\n    BGN: \"лв\",\r\n    HRK: \"kn\",\r\n    RUB: \"₽\",\r\n    TRY: \"₺\",\r\n    ZAR: \"R\",\r\n    ILS: \"₪\",\r\n    AED: \"د.إ\",\r\n    SAR: \"﷼\",\r\n    QAR: \"﷼\",\r\n    KWD: \"د.ك\",\r\n    BHD: \"د.ب\",\r\n    OMR: \"﷼\",\r\n    JOD: \"د.ا\",\r\n    LBP: \"ل.ل\",\r\n    EGP: \"£\",\r\n    MAD: \"د.م.\",\r\n    TND: \"د.ت\",\r\n    DZD: \"د.ج\",\r\n    LYD: \"ل.د\",\r\n    SDG: \"ج.س.\",\r\n    ETB: \"Br\",\r\n    KES: \"KSh\",\r\n    UGX: \"USh\",\r\n    TZS: \"TSh\",\r\n    ZMW: \"ZK\",\r\n    BWP: \"P\",\r\n    SZL: \"L\",\r\n    LSL: \"L\",\r\n    NAD: \"N$\",\r\n    AOA: \"Kz\",\r\n    MZN: \"MT\",\r\n    ZWL: \"Z$\",\r\n    GHS: \"₵\",\r\n    NGN: \"₦\",\r\n    XOF: \"CFA\",\r\n    XAF: \"FCFA\",\r\n    CDF: \"FC\",\r\n    RWF: \"RF\",\r\n    BIF: \"FBu\",\r\n    KMF: \"CF\",\r\n    DJF: \"Fdj\",\r\n    SOS: \"S\",\r\n    ERN: \"Nfk\",\r\n    SLL: \"Le\",\r\n    GMD: \"D\",\r\n    GNF: \"FG\",\r\n    LRD: \"L$\",\r\n    CVE: \"$\",\r\n    STN: \"Db\",\r\n    MRO: \"UM\",\r\n    MGA: \"Ar\",\r\n    SCR: \"₨\",\r\n    MUR: \"₨\",\r\n    YER: \"﷼\",\r\n    AFN: \"؋\",\r\n    PKR: \"₨\",\r\n    LKR: \"₨\",\r\n    NPR: \"₨\",\r\n    BDT: \"৳\",\r\n    MMK: \"K\",\r\n    THB: \"฿\",\r\n    LAK: \"₭\",\r\n    KHR: \"៛\",\r\n    VND: \"₫\",\r\n    IDR: \"Rp\",\r\n    MYR: \"RM\",\r\n    PHP: \"₱\",\r\n    TWD: \"NT$\",\r\n    MOP: \"MOP$\",\r\n    BND: \"B$\",\r\n    FJD: \"FJ$\",\r\n    PGK: \"K\",\r\n    WST: \"WS$\",\r\n    TOP: \"T$\",\r\n    VUV: \"Vt\",\r\n    SBD: \"SI$\",\r\n    NZD: \"NZ$\",\r\n    XPF: \"₣\",\r\n    ARS: \"$\",\r\n    BOB: \"Bs\",\r\n    CLP: \"$\",\r\n    COP: \"$\",\r\n    PYG: \"₲\",\r\n    PEN: \"S/\",\r\n    UYU: \"$U\",\r\n    VES: \"Bs.S\",\r\n    GYD: \"G$\",\r\n    SRD: \"$\",\r\n    TTD: \"TT$\",\r\n    BBD: \"Bds$\",\r\n    JMD: \"J$\",\r\n    BZD: \"BZ$\",\r\n    GTQ: \"Q\",\r\n    HNL: \"L\",\r\n    NIO: \"C$\",\r\n    CRC: \"₡\",\r\n    PAB: \"B/.\",\r\n    DOP: \"RD$\",\r\n    HTG: \"G\",\r\n    CUP: \"$\",\r\n    XCD: \"$\",\r\n    AWG: \"ƒ\",\r\n    BMD: \"$\",\r\n    KYD: \"$\",\r\n    FKP: \"£\",\r\n    SHP: \"£\",\r\n    GIP: \"£\",\r\n    JEP: \"£\",\r\n    GGP: \"£\",\r\n    IMP: \"£\",\r\n  }\r\n  \r\n  return symbols[currency] || currency\r\n}\r\n\r\n/**\r\n * Parse currency string to cents\r\n * \r\n * @param currencyString - Formatted currency string (e.g., \"$123.45\")\r\n * @returns Amount in cents\r\n */\r\nexport function parseCurrencyToCents(currencyString: string): number {\r\n  // Remove currency symbols and non-numeric characters except decimal point\r\n  const cleaned = currencyString.replace(/[^\\d.-]/g, \"\")\r\n  const amount = parseFloat(cleaned)\r\n  return Math.round(amount * 100)\r\n}\r\n\r\n/**\r\n * Convert cents to dollars\r\n */\r\nexport function centsToDollars(cents: number): number {\r\n  return cents / 100\r\n}\r\n\r\n/**\r\n * Convert dollars to cents\r\n */\r\nexport function dollarsToCents(dollars: number): number {\r\n  return Math.round(dollars * 100)\r\n}\r\n\r\n// ============================================================================\r\n// API MIGRATION GUIDE\r\n// ============================================================================\r\n\r\n/**\r\n * MIGRATION GUIDE: How to swap to real API endpoints\r\n * \r\n * 1. Update API_CONFIG.BASE_URL to your production API URL\r\n * 2. Replace mock data calls with actual HTTP requests:\r\n *    - mockDataStore.getMetrics() → apiClient.get('/metrics/{month}')\r\n *    - mockDataStore.getTransactions() → apiClient.get('/transactions')\r\n *    - mockDataStore.getAdvice() → apiClient.get('/advice/{mode}')\r\n * \r\n * 3. Update error handling for network failures\r\n * 4. Add authentication if needed:\r\n *    - Add auth token to headers\r\n *    - Implement token refresh logic\r\n *    - Handle 401/403 responses\r\n * \r\n * 5. Add caching if needed:\r\n *    - Implement response caching\r\n *    - Add cache invalidation\r\n *    - Handle stale data\r\n * \r\n * 6. Add request/response interceptors for:\r\n *    - Logging\r\n *    - Error reporting\r\n *    - Performance monitoring\r\n * \r\n * Example real API implementation:\r\n * \r\n * export async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\r\n *   return apiClient.get<MonthMetrics>(`/metrics/${month}`)\r\n * }\r\n * \r\n * export async function fetchTransactions(params: TransactionQueryParams): Promise<ApiResponse<Transaction[]>> {\r\n *   const queryParams = new URLSearchParams()\r\n *   Object.entries(params).forEach(([key, value]) => {\r\n *     if (value !== undefined) {\r\n *       queryParams.append(key, String(value))\r\n *     }\r\n *   })\r\n *   return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\r\n * }\r\n * \r\n * export async function fetchAdvice(mode: string, month: string): Promise<ApiResponse<CopilotAdvice[]>> {\r\n *   return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\r\n * }\r\n */\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1253, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-transactions.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchTransactions } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const transactionKeys = {\r\n  all: ['transactions'] as const,\r\n  lists: () => [...transactionKeys.all, 'list'] as const,\r\n  list: (page: number, limit: number) => [...transactionKeys.lists(), { page, limit }] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useTransactions(page = 1, limit = 10) {\r\n  return useQuery({\r\n    queryKey: transactionKeys.list(page, limit),\r\n    queryFn: () => fetchTransactions({ page, limit }),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,kBAAkB;IAC7B,KAAK;QAAC;KAAe;IACrB,OAAO,IAAM;eAAI,gBAAgB,GAAG;YAAE;SAAO;IAC7C,MAAM,CAAC,MAAc,QAAkB;eAAI,gBAAgB,KAAK;YAAI;gBAAE;gBAAM;YAAM;SAAE;AACtF;AAGO,SAAS;QAAgB,OAAA,iEAAO,GAAG,QAAA,iEAAQ;;IAChD,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,gBAAgB,IAAI,CAAC,MAAM;QACrC,OAAO;wCAAE,IAAM,IAAA,yIAAiB,EAAC;oBAAE;oBAAM;gBAAM;;QAC/C,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ","debugId":null}},
    {"offset": {"line": 1306, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-accounts.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchMonthMetrics } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const accountKeys = {\r\n  all: ['accounts'] as const,\r\n  lists: () => [...accountKeys.all, 'list'] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useAccounts() {\r\n  return useQuery({\r\n    queryKey: accountKeys.lists(),\r\n    queryFn: () => fetchMonthMetrics(new Date().toISOString().slice(0, 7)),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,cAAc;IACzB,KAAK;QAAC;KAAW;IACjB,OAAO,IAAM;eAAI,YAAY,GAAG;YAAE;SAAO;AAC3C;AAGO,SAAS;;IACd,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,YAAY,KAAK;QAC3B,OAAO;oCAAE,IAAM,IAAA,yIAAiB,EAAC,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;;QACnE,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ","debugId":null}},
    {"offset": {"line": 1348, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-budgets.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchMonthMetrics } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const budgetKeys = {\r\n  all: ['budgets'] as const,\r\n  lists: () => [...budgetKeys.all, 'list'] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useBudgets() {\r\n  return useQuery({\r\n    queryKey: budgetKeys.lists(),\r\n    queryFn: () => fetchMonthMetrics(new Date().toISOString().slice(0, 7)),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,aAAa;IACxB,KAAK;QAAC;KAAU;IAChB,OAAO,IAAM;eAAI,WAAW,GAAG;YAAE;SAAO;AAC1C;AAGO,SAAS;;IACd,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,WAAW,KAAK;QAC1B,OAAO;mCAAE,IAAM,IAAA,yIAAiB,EAAC,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;;QACnE,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ","debugId":null}},
    {"offset": {"line": 1390, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-user.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchCurrentUser } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const userKeys = {\r\n  all: ['user'] as const,\r\n  current: () => [...userKeys.all, 'current'] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useCurrentUser() {\r\n  return useQuery({\r\n    queryKey: userKeys.current(),\r\n    queryFn: () => fetchCurrentUser(),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,WAAW;IACtB,KAAK;QAAC;KAAO;IACb,SAAS,IAAM;eAAI,SAAS,GAAG;YAAE;SAAU;AAC7C;AAGO,SAAS;;IACd,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,SAAS,OAAO;QAC1B,OAAO;uCAAE,IAAM,IAAA,wIAAgB;;QAC/B,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ","debugId":null}},
    {"offset": {"line": 1432, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-month-metrics.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchMonthMetrics } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const monthMetricsKeys = {\r\n  all: ['monthMetrics'] as const,\r\n  byMonth: (month: string) => [...monthMetricsKeys.all, 'byMonth', month] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useMonthMetrics(month: string = new Date().toISOString().slice(0, 7)) {\r\n  console.log('useMonthMetrics called with month:', month)\r\n  \r\n  return useQuery({\r\n    queryKey: monthMetricsKeys.byMonth(month),\r\n    queryFn: () => {\r\n      console.log('Query function called for month:', month)\r\n      return fetchMonthMetrics(month)\r\n    },\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,mBAAmB;IAC9B,KAAK;QAAC;KAAe;IACrB,SAAS,CAAC,QAAkB;eAAI,iBAAiB,GAAG;YAAE;YAAW;SAAM;AACzE;AAGO,SAAS;QAAgB,QAAA,iEAAgB,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;;IAChF,QAAQ,GAAG,CAAC,sCAAsC;IAElD,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,iBAAiB,OAAO,CAAC;QACnC,OAAO;wCAAE;gBACP,QAAQ,GAAG,CAAC,oCAAoC;gBAChD,OAAO,IAAA,yIAAiB,EAAC;YAC3B;;QACA,WAAW,IAAI,KAAK;IACtB;AACF;GAXgB;;QAGP,0LAAQ","debugId":null}},
    {"offset": {"line": 1480, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-transaction-filters.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport { useCallback, useMemo } from \"react\"\r\nimport { useRouter, useSearchParams } from \"next/navigation\"\r\nimport { TransactionCategory } from \"@/lib/types\"\r\n\r\ninterface TransactionFilters {\r\n  categories: TransactionCategory[]\r\n  merchant: string\r\n  dateFrom: string\r\n  dateTo: string\r\n  sortBy: 'date' | 'amount' | 'merchant' | 'category'\r\n  sortOrder: 'asc' | 'desc'\r\n  density: 'comfortable' | 'compact'\r\n}\r\n\r\n// const DEFAULT_FILTERS: TransactionFilters = {\r\n//   categories: [],\r\n//   merchant: '',\r\n//   dateFrom: '',\r\n//   dateTo: '',\r\n//   sortBy: 'date',\r\n//   sortOrder: 'desc',\r\n//   density: 'comfortable'\r\n// }\r\n\r\nexport function useTransactionFilters() {\r\n  const router = useRouter()\r\n  const searchParams = useSearchParams()\r\n\r\n  const filters = useMemo(() => {\r\n    const categories = searchParams.get('categories')?.split(',').filter(Boolean) as TransactionCategory[] || []\r\n    const merchant = searchParams.get('merchant') || ''\r\n    const dateFrom = searchParams.get('from') || ''\r\n    const dateTo = searchParams.get('to') || ''\r\n    const sortBy = (searchParams.get('sortBy') as 'date' | 'amount' | 'merchant' | 'category') || 'date'\r\n    const sortOrder = (searchParams.get('sortOrder') as 'asc' | 'desc') || 'desc'\r\n    const density = (searchParams.get('density') as 'comfortable' | 'compact') || 'comfortable'\r\n\r\n    return {\r\n      categories,\r\n      merchant,\r\n      dateFrom,\r\n      dateTo,\r\n      sortBy,\r\n      sortOrder,\r\n      density\r\n    }\r\n  }, [searchParams])\r\n\r\n  const updateFilters = useCallback((updates: Partial<TransactionFilters>) => {\r\n    const params = new URLSearchParams(searchParams)\r\n    \r\n    // Update categories\r\n    if (updates.categories !== undefined) {\r\n      if (updates.categories.length > 0) {\r\n        params.set('categories', updates.categories.join(','))\r\n      } else {\r\n        params.delete('categories')\r\n      }\r\n    }\r\n\r\n    // Update merchant\r\n    if (updates.merchant !== undefined) {\r\n      if (updates.merchant) {\r\n        params.set('merchant', updates.merchant)\r\n      } else {\r\n        params.delete('merchant')\r\n      }\r\n    }\r\n\r\n    // Update date range\r\n    if (updates.dateFrom !== undefined) {\r\n      if (updates.dateFrom) {\r\n        params.set('from', updates.dateFrom)\r\n      } else {\r\n        params.delete('from')\r\n      }\r\n    }\r\n\r\n    if (updates.dateTo !== undefined) {\r\n      if (updates.dateTo) {\r\n        params.set('to', updates.dateTo)\r\n      } else {\r\n        params.delete('to')\r\n      }\r\n    }\r\n\r\n    // Update sorting\r\n    if (updates.sortBy !== undefined) {\r\n      params.set('sortBy', updates.sortBy)\r\n    }\r\n\r\n    if (updates.sortOrder !== undefined) {\r\n      params.set('sortOrder', updates.sortOrder)\r\n    }\r\n\r\n    // Update density\r\n    if (updates.density !== undefined) {\r\n      params.set('density', updates.density)\r\n    }\r\n\r\n    // Update URL\r\n    const newUrl = `${window.location.pathname}?${params.toString()}`\r\n    router.push(newUrl, { scroll: false })\r\n  }, [router, searchParams])\r\n\r\n  const toggleCategory = useCallback((category: TransactionCategory) => {\r\n    const currentCategories = filters.categories\r\n    const newCategories = currentCategories.includes(category)\r\n      ? currentCategories.filter(c => c !== category)\r\n      : [...currentCategories, category]\r\n    \r\n    updateFilters({ categories: newCategories })\r\n  }, [filters.categories, updateFilters])\r\n\r\n  const clearAllFilters = useCallback(() => {\r\n    updateFilters({\r\n      categories: [],\r\n      merchant: '',\r\n      dateFrom: '',\r\n      dateTo: ''\r\n    })\r\n  }, [updateFilters])\r\n\r\n  const hasActiveFilters = useMemo(() => {\r\n    return filters.categories.length > 0 || \r\n           filters.merchant.length > 0 || \r\n           filters.dateFrom.length > 0 || \r\n           filters.dateTo.length > 0\r\n  }, [filters.categories, filters.merchant, filters.dateFrom, filters.dateTo])\r\n\r\n  return {\r\n    filters,\r\n    updateFilters,\r\n    toggleCategory,\r\n    clearAllFilters,\r\n    hasActiveFilters\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1632, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-budget-mode.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { useRouter, useSearchParams } from \"next/navigation\"\r\n\r\nexport type BudgetMode = 'budget' | 'maintain'\r\n\r\nexport function useBudgetMode() {\r\n  const router = useRouter()\r\n  const searchParams = useSearchParams()\r\n  const [mode, setMode] = useState<BudgetMode>('budget')\r\n  \r\n  useEffect(() => {\r\n    const modeParam = searchParams.get('mode')\r\n    if (modeParam === 'budget' || modeParam === 'maintain') {\r\n      setMode(modeParam)\r\n    }\r\n  }, [searchParams])\r\n  \r\n  const updateMode = (newMode: BudgetMode) => {\r\n    setMode(newMode)\r\n    \r\n    const params = new URLSearchParams(searchParams.toString())\r\n    params.set('mode', newMode)\r\n    \r\n    router.push(`/budget?${params.toString()}`, { scroll: false })\r\n  }\r\n  \r\n  return {\r\n    mode,\r\n    updateMode\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;AAHA;;;AAOO,SAAS;;IACd,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,eAAe,IAAA,wJAAe;IACpC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAa;IAE7C,IAAA,0KAAS;mCAAC;YACR,MAAM,YAAY,aAAa,GAAG,CAAC;YACnC,IAAI,cAAc,YAAY,cAAc,YAAY;gBACtD,QAAQ;YACV;QACF;kCAAG;QAAC;KAAa;IAEjB,MAAM,aAAa,CAAC;QAClB,QAAQ;QAER,MAAM,SAAS,IAAI,gBAAgB,aAAa,QAAQ;QACxD,OAAO,GAAG,CAAC,QAAQ;QAEnB,OAAO,IAAI,CAAC,AAAC,WAA4B,OAAlB,OAAO,QAAQ,KAAM;YAAE,QAAQ;QAAM;IAC9D;IAEA,OAAO;QACL;QACA;IACF;AACF;GAzBgB;;QACC,kJAAS;QACH,wJAAe","debugId":null}},
    {"offset": {"line": 1683, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/index.ts"],"sourcesContent":["// Re-export all hooks for easier importing\r\nexport * from './use-transactions'\r\nexport * from './use-accounts'\r\nexport * from './use-budgets'\r\nexport * from './use-user'\r\nexport * from './use-month-metrics'\r\nexport * from './use-transaction-filters'\r\nexport * from './use-budget-mode'\r\n"],"names":[],"mappings":"AAAA,2CAA2C;;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 1706, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/calendar/CalendarGrid.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useMemo } from \"react\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Button } from \"@/components/ui/button\"\r\n// import { Card, CardContent } from \"@/components/ui/card\"\r\nimport { MonthMetrics } from \"@/lib/types\"\r\nimport { formatCurrency } from \"@/lib/api\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface CalendarGridProps {\r\n  monthMetrics: MonthMetrics\r\n  currentDate: Date\r\n  onDayClick: (date: string) => void\r\n  className?: string\r\n}\r\n\r\nconst DAY_NAMES = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\nconst MONTH_NAMES = [\r\n  \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport function CalendarGrid({\r\n  monthMetrics,\r\n  currentDate,\r\n  onDayClick,\r\n  className\r\n}: CalendarGridProps) {\r\n  const year = currentDate.getFullYear()\r\n  const month = currentDate.getMonth()\r\n  \r\n  // Calculate calendar grid data\r\n  const calendarData = useMemo(() => {\r\n    const firstDayOfMonth = new Date(year, month, 1)\r\n    const lastDayOfMonth = new Date(year, month + 1, 0)\r\n    const firstDayOfWeek = firstDayOfMonth.getDay()\r\n    const daysInMonth = lastDayOfMonth.getDate()\r\n    \r\n    // Create a map of daily spending data\r\n    const dailySpendingMap = new Map<string, number>()\r\n    monthMetrics.trend_daily.forEach(day => {\r\n      dailySpendingMap.set(day.date, day.totalSpending.amount)\r\n    })\r\n    \r\n    // Calculate spending quantiles for color mapping\r\n    const spendingAmounts = monthMetrics.trend_daily\r\n      .map(day => day.totalSpending.amount)\r\n      .filter(amount => amount > 0)\r\n      .sort((a, b) => a - b)\r\n    \r\n    const quantiles = {\r\n      q25: spendingAmounts[Math.floor(spendingAmounts.length * 0.25)] || 0,\r\n      q50: spendingAmounts[Math.floor(spendingAmounts.length * 0.5)] || 0,\r\n      q75: spendingAmounts[Math.floor(spendingAmounts.length * 0.75)] || 0,\r\n      q90: spendingAmounts[Math.floor(spendingAmounts.length * 0.9)] || 0,\r\n      max: spendingAmounts[spendingAmounts.length - 1] || 0\r\n    }\r\n    \r\n    // Generate calendar days\r\n    const days = []\r\n    \r\n    // Empty cells for days before the first day of the month\r\n    for (let i = 0; i < firstDayOfWeek; i++) {\r\n      days.push({\r\n        type: 'empty' as const,\r\n        key: `empty-${i}`\r\n      })\r\n    }\r\n    \r\n    // Days of the month\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      const date = new Date(year, month, day)\r\n      const dateString = date.toISOString().split('T')[0]\r\n      const spending = dailySpendingMap.get(dateString) || 0\r\n      const isToday = date.toDateString() === new Date().toDateString()\r\n      \r\n      // Determine color intensity based on spending quantiles\r\n      let colorIntensity = 0\r\n      if (spending > 0) {\r\n        if (spending <= quantiles.q25) colorIntensity = 1\r\n        else if (spending <= quantiles.q50) colorIntensity = 2\r\n        else if (spending <= quantiles.q75) colorIntensity = 3\r\n        else if (spending <= quantiles.q90) colorIntensity = 4\r\n        else colorIntensity = 5\r\n      }\r\n      \r\n      days.push({\r\n        type: 'day' as const,\r\n        key: day.toString(),\r\n        day,\r\n        date: dateString,\r\n        spending,\r\n        colorIntensity,\r\n        isToday\r\n      })\r\n    }\r\n    \r\n    return { days, quantiles }\r\n  }, [monthMetrics.trend_daily, year, month])\r\n  \r\n  const getColorClass = (intensity: number, isToday: boolean) => {\r\n    if (intensity === 0) {\r\n      return isToday \r\n        ? \"bg-primary/20 border-primary/40 hover:bg-primary/30\" \r\n        : \"bg-muted/30 border-muted/50 hover:bg-muted/40\"\r\n    }\r\n    \r\n    const baseClasses = isToday ? \"border-primary/60\" : \"border-muted/60\"\r\n    \r\n    switch (intensity) {\r\n      case 1: return `${baseClasses} bg-green-100 hover:bg-green-200`\r\n      case 2: return `${baseClasses} bg-green-200 hover:bg-green-300`\r\n      case 3: return `${baseClasses} bg-yellow-200 hover:bg-yellow-300`\r\n      case 4: return `${baseClasses} bg-orange-200 hover:bg-orange-300`\r\n      case 5: return `${baseClasses} bg-red-200 hover:bg-red-300`\r\n      default: return `${baseClasses} bg-muted/30 hover:bg-muted/40`\r\n    }\r\n  }\r\n  \r\n  const getIntensityLabel = (intensity: number) => {\r\n    switch (intensity) {\r\n      case 0: return \"No spending\"\r\n      case 1: return \"Very low spending\"\r\n      case 2: return \"Low spending\"\r\n      case 3: return \"Medium spending\"\r\n      case 4: return \"High spending\"\r\n      case 5: return \"Very high spending\"\r\n      default: return \"No data\"\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={cn(\"w-full\", className)}>\r\n      {/* Day headers */}\r\n      <div className=\"grid grid-cols-7 gap-px mb-2\">\r\n        {DAY_NAMES.map(day => (\r\n          <div \r\n            key={day} \r\n            className=\"p-2 text-center text-sm font-medium text-muted-foreground bg-muted/20 rounded-t-md\"\r\n          >\r\n            {day}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      {/* Calendar grid */}\r\n      <div className=\"grid grid-cols-7 gap-px bg-muted/20 rounded-md overflow-hidden\">\r\n        {calendarData.days.map((dayData, index) => {\r\n          if (dayData.type === 'empty') {\r\n            return (\r\n              <div \r\n                key={dayData.key} \r\n                className=\"aspect-square bg-muted/10\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            )\r\n          }\r\n          \r\n          const { day, date, spending, colorIntensity, isToday } = dayData\r\n          const formattedAmount = spending > 0 ? formatCurrency(spending, \"USD\", { showCents: false }) : \"$0\"\r\n          const intensityLabel = getIntensityLabel(colorIntensity)\r\n          \r\n          return (\r\n            <motion.div\r\n              key={dayData.key}\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.2, delay: index * 0.01 }}\r\n              className=\"relative\"\r\n            >\r\n              <Button\r\n                variant=\"ghost\"\r\n                className={cn(\r\n                  \"w-full h-full aspect-square p-1 rounded-none border-2 transition-all duration-200\",\r\n                  \"hover:scale-105 focus:scale-105 focus:ring-2 focus:ring-primary/50\",\r\n                  getColorClass(colorIntensity, isToday)\r\n                )}\r\n                onClick={() => onDayClick(date)}\r\n                aria-label={`${MONTH_NAMES[month]} ${day}, ${year}. ${intensityLabel}. Total spending: ${formattedAmount}`}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n              >\r\n                <div className=\"flex flex-col items-center justify-center h-full text-center\">\r\n                  <span className={cn(\r\n                    \"text-sm font-semibold\",\r\n                    isToday ? \"text-primary\" : \"text-foreground\"\r\n                  )}>\r\n                    {day}\r\n                  </span>\r\n                  {spending > 0 && (\r\n                    <span className=\"text-xs font-mono text-muted-foreground mt-1\">\r\n                      {formattedAmount}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </Button>\r\n            </motion.div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1979, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 2106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/calendar/CalendarHeader.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\n// import { motion } from \"framer-motion\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { ChevronLeft, ChevronRight, Calendar, RotateCcw } from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface CalendarHeaderProps {\r\n  currentDate: Date\r\n  onPreviousMonth: () => void\r\n  onNextMonth: () => void\r\n  onToday: () => void\r\n  className?: string\r\n}\r\n\r\nconst MONTH_NAMES = [\r\n  \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport function CalendarHeader({\r\n  currentDate,\r\n  onPreviousMonth,\r\n  onNextMonth,\r\n  onToday,\r\n  className\r\n}: CalendarHeaderProps) {\r\n  const month = currentDate.getMonth()\r\n  const year = currentDate.getFullYear()\r\n  const isCurrentMonth = currentDate.getMonth() === new Date().getMonth() && \r\n                        currentDate.getFullYear() === new Date().getFullYear()\r\n\r\n  return (\r\n    <Card className={cn(\"w-full\", className)}>\r\n      <CardHeader>\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <Calendar className=\"h-6 w-6 text-primary\" />\r\n            <div>\r\n              <CardTitle className=\"text-2xl font-bold\">\r\n                {MONTH_NAMES[month]} {year}\r\n              </CardTitle>\r\n              <p className=\"text-sm text-muted-foreground mt-1\">\r\n                Daily spending patterns and trends\r\n              </p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={onPreviousMonth}\r\n              className=\"h-9 px-3\"\r\n              aria-label=\"Previous month\"\r\n            >\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={onToday}\r\n              className={cn(\r\n                \"h-9 px-3\",\r\n                isCurrentMonth && \"bg-primary/10 border-primary/20 text-primary\"\r\n              )}\r\n              aria-label=\"Go to current month\"\r\n            >\r\n              <RotateCcw className=\"h-4 w-4 mr-1\" />\r\n              Today\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={onNextMonth}\r\n              className=\"h-9 px-3\"\r\n              aria-label=\"Next month\"\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n    </Card>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAGA,yCAAyC;AACzC;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAPA;;;;;;AAiBA,MAAM,cAAc;IAClB;IAAW;IAAY;IAAS;IAAS;IAAO;IAChD;IAAQ;IAAU;IAAa;IAAW;IAAY;CACvD;AAEM,SAAS,eAAe,KAMT;QANS,EAC7B,WAAW,EACX,eAAe,EACf,WAAW,EACX,OAAO,EACP,SAAS,EACW,GANS;IAO7B,MAAM,QAAQ,YAAY,QAAQ;IAClC,MAAM,OAAO,YAAY,WAAW;IACpC,MAAM,iBAAiB,YAAY,QAAQ,OAAO,IAAI,OAAO,QAAQ,MAC/C,YAAY,WAAW,OAAO,IAAI,OAAO,WAAW;IAE1E,qBACE,6LAAC,2IAAI;QAAC,WAAW,IAAA,4HAAE,EAAC,UAAU;kBAC5B,cAAA,6LAAC,iJAAU;sBACT,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,yNAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC;;kDACC,6LAAC,gJAAS;wCAAC,WAAU;;4CAClB,WAAW,CAAC,MAAM;4CAAC;4CAAE;;;;;;;kDAExB,6LAAC;wCAAE,WAAU;kDAAqC;;;;;;;;;;;;;;;;;;kCAMtD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+IAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,WAAU;gCACV,cAAW;0CAEX,cAAA,6LAAC,sOAAW;oCAAC,WAAU;;;;;;;;;;;0CAGzB,6LAAC,+IAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,WAAW,IAAA,4HAAE,EACX,YACA,kBAAkB;gCAEpB,cAAW;;kDAEX,6LAAC,gOAAS;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAIxC,6LAAC,+IAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,WAAU;gCACV,cAAW;0CAEX,cAAA,6LAAC,yOAAY;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOtC;KAnEgB","debugId":null}},
    {"offset": {"line": 2287, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/calendar/CalendarSummary.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useMemo } from \"react\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { MonthMetrics } from \"@/lib/types\"\r\nimport { formatCurrency } from \"@/lib/api\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { TrendingUp, TrendingDown, Calendar, DollarSign } from \"lucide-react\"\r\n\r\ninterface CalendarSummaryProps {\r\n  monthMetrics: MonthMetrics\r\n  // currentDate: Date\r\n  className?: string\r\n}\r\n\r\nexport function CalendarSummary({\r\n  monthMetrics,\r\n  // currentDate,\r\n  className\r\n}: CalendarSummaryProps) {\r\n  const summaryData = useMemo(() => {\r\n    const dailyData = monthMetrics.trend_daily\r\n    const totalDays = dailyData.length\r\n    const daysWithSpending = dailyData.filter(day => day.totalSpending.amount > 0).length\r\n    const totalSpending = dailyData.reduce((sum, day) => sum + day.totalSpending.amount, 0)\r\n    const averageDaily = totalDays > 0 ? totalSpending / totalDays : 0\r\n    const highestDay = dailyData.reduce((max, day) => \r\n      day.totalSpending.amount > max.totalSpending.amount ? day : max, \r\n      dailyData[0] || { totalSpending: { amount: 0 } }\r\n    )\r\n    \r\n    // Calculate spending trend (comparing first half vs second half of month)\r\n    const midMonth = Math.floor(totalDays / 2)\r\n    const firstHalf = dailyData.slice(0, midMonth).reduce((sum, day) => sum + day.totalSpending.amount, 0)\r\n    const secondHalf = dailyData.slice(midMonth).reduce((sum, day) => sum + day.totalSpending.amount, 0)\r\n    const trendDirection = secondHalf > firstHalf ? 'up' : 'down'\r\n    const trendPercentage = firstHalf > 0 ? Math.abs(((secondHalf - firstHalf) / firstHalf) * 100) : 0\r\n    \r\n    return {\r\n      totalDays,\r\n      daysWithSpending,\r\n      totalSpending,\r\n      averageDaily,\r\n      highestDay,\r\n      trendDirection,\r\n      trendPercentage\r\n    }\r\n  }, [monthMetrics.trend_daily])\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Total Spending\",\r\n      value: formatCurrency(summaryData.totalSpending, \"USD\", { showCents: false }),\r\n      icon: DollarSign,\r\n      color: \"text-red-600\",\r\n      bgColor: \"bg-red-50\",\r\n      description: \"this month\"\r\n    },\r\n    {\r\n      title: \"Daily Average\",\r\n      value: formatCurrency(summaryData.averageDaily, \"USD\", { showCents: false }),\r\n      icon: Calendar,\r\n      color: \"text-blue-600\",\r\n      bgColor: \"bg-blue-50\",\r\n      description: \"per day\"\r\n    },\r\n    {\r\n      title: \"Active Days\",\r\n      value: `${summaryData.daysWithSpending}/${summaryData.totalDays}`,\r\n      icon: TrendingUp,\r\n      color: \"text-green-600\",\r\n      bgColor: \"bg-green-50\",\r\n      description: \"with transactions\"\r\n    },\r\n    {\r\n      title: \"Highest Day\",\r\n      value: formatCurrency(summaryData.highestDay.totalSpending.amount, \"USD\", { showCents: false }),\r\n      icon: summaryData.trendDirection === 'up' ? TrendingUp : TrendingDown,\r\n      color: summaryData.trendDirection === 'up' ? \"text-orange-600\" : \"text-purple-600\",\r\n      bgColor: summaryData.trendDirection === 'up' ? \"bg-orange-50\" : \"bg-purple-50\",\r\n      description: summaryData.highestDay.date ? new Date(summaryData.highestDay.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) : \"N/A\"\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n        {stats.map((stat, index) => {\r\n          const Icon = stat.icon\r\n          return (\r\n            <motion.div\r\n              key={stat.title}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3, delay: index * 0.1 }}\r\n            >\r\n              <Card className=\"h-full\">\r\n                <CardHeader className=\"pb-2\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <CardTitle className=\"text-sm font-medium text-muted-foreground\">\r\n                      {stat.title}\r\n                    </CardTitle>\r\n                    <div className={cn(\"p-2 rounded-lg\", stat.bgColor)}>\r\n                      <Icon className={cn(\"h-4 w-4\", stat.color)} />\r\n                    </div>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className={cn(\"text-2xl font-bold mb-1\", stat.color)}>\r\n                    {stat.value}\r\n                  </div>\r\n                  <p className=\"text-xs text-muted-foreground\">\r\n                    {stat.description}\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            </motion.div>\r\n          )\r\n        })}\r\n      </div>\r\n      \r\n      {/* Trend indicator */}\r\n      {summaryData.trendPercentage > 0 && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.4 }}\r\n          className=\"mt-4\"\r\n        >\r\n          <Card>\r\n            <CardContent className=\"p-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                {summaryData.trendDirection === 'up' ? (\r\n                  <TrendingUp className=\"h-4 w-4 text-orange-600\" />\r\n                ) : (\r\n                  <TrendingDown className=\"h-4 w-4 text-purple-600\" />\r\n                )}\r\n                <span className=\"text-sm font-medium\">\r\n                  Spending trend: {summaryData.trendDirection === 'up' ? 'increasing' : 'decreasing'} by{' '}\r\n                  <span className={cn(\r\n                    \"font-semibold\",\r\n                    summaryData.trendDirection === 'up' ? \"text-orange-600\" : \"text-purple-600\"\r\n                  )}>\r\n                    {summaryData.trendPercentage.toFixed(1)}%\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2596, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/calendar/SpendingLegend.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { formatCurrency } from \"@/lib/api\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface SpendingLegendProps {\r\n  quantiles: {\r\n    q25: number\r\n    q50: number\r\n    q75: number\r\n    q90: number\r\n    max: number\r\n  }\r\n  className?: string\r\n}\r\n\r\nexport function SpendingLegend({ quantiles, className }: SpendingLegendProps) {\r\n  const legendItems = [\r\n    {\r\n      intensity: 0,\r\n      label: \"No spending\",\r\n      color: \"bg-muted/30\",\r\n      range: \"$0\"\r\n    },\r\n    {\r\n      intensity: 1,\r\n      label: \"Very low\",\r\n      color: \"bg-green-100\",\r\n      range: `$1 - ${formatCurrency(quantiles.q25, \"USD\", { showCents: false })}`\r\n    },\r\n    {\r\n      intensity: 2,\r\n      label: \"Low\",\r\n      color: \"bg-green-200\",\r\n      range: `${formatCurrency(quantiles.q25, \"USD\", { showCents: false })} - ${formatCurrency(quantiles.q50, \"USD\", { showCents: false })}`\r\n    },\r\n    {\r\n      intensity: 3,\r\n      label: \"Medium\",\r\n      color: \"bg-yellow-200\",\r\n      range: `${formatCurrency(quantiles.q50, \"USD\", { showCents: false })} - ${formatCurrency(quantiles.q75, \"USD\", { showCents: false })}`\r\n    },\r\n    {\r\n      intensity: 4,\r\n      label: \"High\",\r\n      color: \"bg-orange-200\",\r\n      range: `${formatCurrency(quantiles.q75, \"USD\", { showCents: false })} - ${formatCurrency(quantiles.q90, \"USD\", { showCents: false })}`\r\n    },\r\n    {\r\n      intensity: 5,\r\n      label: \"Very high\",\r\n      color: \"bg-red-200\",\r\n      range: `${formatCurrency(quantiles.q90, \"USD\", { showCents: false })}+`\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Card className={cn(\"w-full\", className)}>\r\n      <CardHeader className=\"pb-3\">\r\n        <CardTitle className=\"text-sm font-medium\">Spending Intensity</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-3\">\r\n        <div className=\"grid grid-cols-2 gap-2\">\r\n          {legendItems.map((item) => (\r\n            <div key={item.intensity} className=\"flex items-center gap-2\">\r\n              <div \r\n                className={cn(\r\n                  \"w-4 h-4 rounded border border-muted/60\",\r\n                  item.color\r\n                )}\r\n                aria-hidden=\"true\"\r\n              />\r\n              <div className=\"flex-1 min-w-0\">\r\n                <div className=\"text-xs font-medium text-foreground\">\r\n                  {item.label}\r\n                </div>\r\n                <div className=\"text-xs text-muted-foreground font-mono\">\r\n                  {item.range}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        <div className=\"pt-2 border-t border-muted/20\">\r\n          <p className=\"text-xs text-muted-foreground\">\r\n            Click any day to view detailed transactions\r\n          </p>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AALA;;;;;AAkBO,SAAS,eAAe,KAA6C;QAA7C,EAAE,SAAS,EAAE,SAAS,EAAuB,GAA7C;IAC7B,MAAM,cAAc;QAClB;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO;QACT;QACA;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO,AAAC,QAAkE,OAA3D,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM;QACzE;QACA;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO,AAAC,GAAkE,OAAhE,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM,IAAG,OAAgE,OAA3D,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM;QACpI;QACA;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO,AAAC,GAAkE,OAAhE,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM,IAAG,OAAgE,OAA3D,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM;QACpI;QACA;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO,AAAC,GAAkE,OAAhE,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM,IAAG,OAAgE,OAA3D,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM;QACpI;QACA;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO,AAAC,GAA6D,OAA3D,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM,IAAG;QACvE;KACD;IAED,qBACE,6LAAC,2IAAI;QAAC,WAAW,IAAA,4HAAE,EAAC,UAAU;;0BAC5B,6LAAC,iJAAU;gBAAC,WAAU;0BACpB,cAAA,6LAAC,gJAAS;oBAAC,WAAU;8BAAsB;;;;;;;;;;;0BAE7C,6LAAC,kJAAW;gBAAC,WAAU;;kCACrB,6LAAC;wBAAI,WAAU;kCACZ,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;gCAAyB,WAAU;;kDAClC,6LAAC;wCACC,WAAW,IAAA,4HAAE,EACX,0CACA,KAAK,KAAK;wCAEZ,eAAY;;;;;;kDAEd,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACZ,KAAK,KAAK;;;;;;0DAEb,6LAAC;gDAAI,WAAU;0DACZ,KAAK,KAAK;;;;;;;;;;;;;+BAbP,KAAK,SAAS;;;;;;;;;;kCAoB5B,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;;;;;;;;;;;;;AAOvD;KA5EgB","debugId":null}},
    {"offset": {"line": 2773, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/calendar/index.ts"],"sourcesContent":["export { CalendarGrid } from './CalendarGrid'\r\nexport { CalendarHeader } from './CalendarHeader'\r\nexport { CalendarSummary } from './CalendarSummary'\r\nexport { SpendingLegend } from './SpendingLegend'\r\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 2789, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/app/calendar/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useMemo } from \"react\"\r\nimport { motion } from \"framer-motion\"\r\nimport { useRouter, useSearchParams } from \"next/navigation\"\r\nimport { useMonthMetrics } from \"@/lib/hooks\"\r\nimport { \r\n  CalendarGrid,\r\n  CalendarHeader,\r\n  CalendarSummary,\r\n  SpendingLegend\r\n} from \"@/components/calendar\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { AlertCircle } from \"lucide-react\"\r\n\r\nexport default function CalendarPage() {\r\n  const router = useRouter()\r\n  const searchParams = useSearchParams()\r\n  const month = searchParams.get('month') || '2025-08'\r\n  const [currentDate, setCurrentDate] = useState(new Date())\r\n  const { data: monthMetrics, isLoading, error } = useMonthMetrics(month)\r\n\r\n  // Generate mock daily spending data if not available\r\n  const dailySpendingData = useMemo(() => {\r\n    if (!monthMetrics?.data) return []\r\n    \r\n    const year = currentDate.getFullYear()\r\n    const month = currentDate.getMonth()\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate()\r\n    \r\n    // Generate realistic daily spending data\r\n    const data = []\r\n    const baseAmount = monthMetrics.data.spendingPatterns.averageDailySpending.amount\r\n    \r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      const date = new Date(year, month, day)\r\n      const dateString = date.toISOString().split('T')[0]\r\n      \r\n      // Add some realistic variation\r\n      const variation = (Math.sin(day * 0.3) * 0.4 + Math.random() * 0.6 - 0.3)\r\n      const isWeekend = date.getDay() === 0 || date.getDay() === 6\r\n      const weekendMultiplier = isWeekend ? 1.3 : 0.8\r\n      \r\n      const amount = Math.max(0, baseAmount * (1 + variation) * weekendMultiplier)\r\n      \r\n      data.push({\r\n        date: dateString,\r\n        totalSpending: {\r\n          amount: amount,\r\n          currency: \"USD\",\r\n          symbol: \"$\"\r\n        },\r\n        transactionCount: Math.floor(Math.random() * 5) + 1,\r\n        categories: [\r\n          {\r\n            category: \"food\" as const,\r\n            amount: { amount: amount * 0.4, currency: \"USD\", symbol: \"$\" },\r\n            percentage: 40\r\n          },\r\n          {\r\n            category: \"transportation\" as const,\r\n            amount: { amount: amount * 0.3, currency: \"USD\", symbol: \"$\" },\r\n            percentage: 30\r\n          },\r\n          {\r\n            category: \"entertainment\" as const,\r\n            amount: { amount: amount * 0.3, currency: \"USD\", symbol: \"$\" },\r\n            percentage: 30\r\n          }\r\n        ]\r\n      })\r\n    }\r\n    \r\n    return data\r\n  }, [monthMetrics?.data, currentDate])\r\n\r\n  const handleDayClick = (date: string) => {\r\n    // Deep link to transactions page with date filter\r\n    router.push(`/transactions?from=${date}&to=${date}`)\r\n  }\r\n\r\n  const handlePreviousMonth = () => {\r\n    setCurrentDate(prev => {\r\n      const newDate = new Date(prev)\r\n      newDate.setMonth(prev.getMonth() - 1)\r\n      return newDate\r\n    })\r\n  }\r\n\r\n  const handleNextMonth = () => {\r\n    setCurrentDate(prev => {\r\n      const newDate = new Date(prev)\r\n      newDate.setMonth(prev.getMonth() + 1)\r\n      return newDate\r\n    })\r\n  }\r\n\r\n  const handleToday = () => {\r\n    setCurrentDate(new Date())\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <main className=\"container-5xl py-8\">\r\n        <Card>\r\n          <CardContent className=\"p-12 text-center\">\r\n            <AlertCircle className=\"h-12 w-12 text-destructive mx-auto mb-4\" />\r\n            <h2 className=\"text-xl font-semibold mb-2\">Error Loading Calendar</h2>\r\n            <p className=\"text-muted-foreground\">\r\n              There was a problem loading your calendar data. Please try again.\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </main>\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <main className=\"container-5xl py-8\">\r\n        <div className=\"space-y-6\">\r\n          <div className=\"h-8 bg-muted animate-pulse rounded w-64\" />\r\n          <div className=\"h-32 bg-muted animate-pulse rounded\" />\r\n          <div className=\"grid grid-cols-7 gap-px bg-muted/20 rounded-md overflow-hidden\">\r\n            {Array.from({ length: 35 }).map((_, i) => (\r\n              <div key={i} className=\"aspect-square bg-muted/10 animate-pulse\" />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n\r\n  // Create mock MonthMetrics with daily data\r\n  const mockMonthMetrics = {\r\n    month: currentDate.toISOString().slice(0, 7), // YYYY-MM format\r\n    totalIncome: { amount: 5000, currency: \"USD\", symbol: \"$\" },\r\n    totalExpenses: { amount: 3000, currency: \"USD\", symbol: \"$\" },\r\n    netIncome: { amount: 2000, currency: \"USD\", symbol: \"$\" },\r\n    savingsRate: 40,\r\n    categoryBreakdown: [],\r\n    spendingPatterns: {\r\n      averageDailySpending: { amount: 100, currency: \"USD\", symbol: \"$\" },\r\n      highestSpendingDay: { date: \"2024-01-15\", amount: { amount: 500, currency: \"USD\", symbol: \"$\" } },\r\n      mostFrequentCategory: \"food\" as const,\r\n      mostExpensiveCategory: \"housing\" as const\r\n    },\r\n    budgetComparison: [],\r\n    trends: {\r\n      weekOverWeek: { incomeChange: 5, expenseChange: -2 },\r\n      monthOverMonth: { incomeChange: 10, expenseChange: 3 }\r\n    },\r\n    alerts: [],\r\n    generatedAt: new Date().toISOString(),\r\n    trend_daily: dailySpendingData\r\n  }\r\n\r\n  return (\r\n    <main className=\"container-5xl py-8\">\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Financial Calendar</h1>\r\n          <p className=\"text-muted-foreground mt-2\">\r\n            Visualize your daily spending patterns and trends\r\n          </p>\r\n        </motion.div>\r\n\r\n        {/* Calendar Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.1 }}\r\n        >\r\n          <CalendarHeader\r\n            currentDate={currentDate}\r\n            onPreviousMonth={handlePreviousMonth}\r\n            onNextMonth={handleNextMonth}\r\n            onToday={handleToday}\r\n          />\r\n        </motion.div>\r\n\r\n        {/* Calendar Grid and Legend */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n          {/* Calendar Grid */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3, delay: 0.2 }}\r\n            className=\"lg:col-span-3\"\r\n          >\r\n            <Card>\r\n              <CardContent className=\"p-6\">\r\n                <CalendarGrid\r\n                  monthMetrics={mockMonthMetrics}\r\n                  currentDate={currentDate}\r\n                  onDayClick={handleDayClick}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </motion.div>\r\n\r\n          {/* Legend */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3, delay: 0.3 }}\r\n            className=\"lg:col-span-1\"\r\n          >\r\n            <SpendingLegend\r\n              quantiles={{\r\n                q25: 25,\r\n                q50: 50,\r\n                q75: 100,\r\n                q90: 200,\r\n                max: 500\r\n              }}\r\n            />\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Summary Stats */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.4 }}\r\n        >\r\n          <CalendarSummary\r\n            monthMetrics={mockMonthMetrics}\r\n          />\r\n        </motion.div>\r\n      </div>\r\n    </main>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}