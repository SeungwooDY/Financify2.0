{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/mock.ts"],"sourcesContent":["import { \n  Transaction, \n  MonthMetrics, \n  CopilotAdvice, \n  TransactionCategory,\n  TransactionType,\n  PaymentMethod,\n  TransactionQueryParams\n} from \"./types\"\n\n// ============================================================================\n// MOCK DATA GENERATORS\n// ============================================================================\n\n/**\n * Generate realistic student transactions for a given month\n * Simulates typical student spending patterns and income sources\n */\nexport function generateStudentTransactions(month: string): Transaction[] {\n  const [year, monthNum] = month.split('-').map(Number)\n  const endDate = new Date(year, monthNum, 0)\n  const daysInMonth = endDate.getDate()\n  \n  const transactions: Transaction[] = []\n  let transactionId = 1\n  \n  // Helper to create a transaction\n  const createTransaction = (\n    date: Date,\n    description: string,\n    amountCents: number,\n    category: TransactionCategory,\n    type: TransactionType,\n    paymentMethod: PaymentMethod,\n    merchant?: string,\n    tags: string[] = []\n  ): Transaction => ({\n    id: `txn_${transactionId++}`,\n    date: date.toISOString(),\n    description,\n    amount: { amount: amountCents, currency: \"USD\", symbol: \"$\" },\n    category,\n    type,\n    status: Math.random() > 0.1 ? \"cleared\" : \"pending\",\n    paymentMethod,\n    accountId: \"acc_student_checking\",\n    merchant,\n    location: Math.random() > 0.7 ? {\n      name: merchant || \"Unknown Location\",\n      address: \"123 University Ave, College Town, ST 12345\"\n    } : undefined,\n    tags,\n    notes: Math.random() > 0.8 ? \"Student transaction\" : undefined,\n    metadata: {\n      source: \"mock_data\",\n      generated: true\n    },\n    createdAt: date.toISOString(),\n    updatedAt: date.toISOString()\n  })\n  \n  // Generate transactions for each day\n  for (let day = 1; day <= daysInMonth; day++) {\n    const currentDate = new Date(year, monthNum - 1, day)\n    const dayOfWeek = currentDate.getDay()\n    const isWeekend = dayOfWeek === 0 || dayOfWeek === 6\n    \n    // Income transactions (bi-weekly paychecks, occasional refunds)\n    if (day === 1 || day === 15) {\n      // Bi-weekly paycheck from part-time job\n      transactions.push(createTransaction(\n        currentDate,\n        \"Part-time job paycheck\",\n        120000, // $1,200\n        \"income\",\n        \"income\",\n        \"bank_transfer\",\n        \"Campus Dining Services\"\n      ))\n    }\n    \n    if (day === 3 && Math.random() > 0.7) {\n      // Occasional refund\n      transactions.push(createTransaction(\n        currentDate,\n        \"Textbook refund\",\n        Math.floor(Math.random() * 50000) + 20000, // $200-700\n        \"refund\",\n        \"income\",\n        \"bank_transfer\",\n        \"University Bookstore\"\n      ))\n    }\n    \n    // Daily expenses\n    const dailyExpenseCount = isWeekend ? \n      Math.floor(Math.random() * 3) + 1 : // 1-3 on weekends\n      Math.floor(Math.random() * 2) + 1   // 1-2 on weekdays\n    \n    for (let i = 0; i < dailyExpenseCount; i++) {\n      const expenseTypes = getDailyExpenses(day, isWeekend)\n      const expense = expenseTypes[Math.floor(Math.random() * expenseTypes.length)]\n      \n      transactions.push(createTransaction(\n        currentDate,\n        expense.description,\n        expense.amount,\n        expense.category,\n        \"expense\",\n        expense.paymentMethod,\n        expense.merchant,\n        expense.tags\n      ))\n    }\n    \n    // Weekly recurring expenses\n    if (day % 7 === 0) {\n      // Weekly grocery shopping\n      transactions.push(createTransaction(\n        currentDate,\n        \"Weekly grocery shopping\",\n        Math.floor(Math.random() * 8000) + 4000, // $40-120\n        \"food\",\n        \"expense\",\n        \"debit_card\",\n        \"Campus Market\",\n        [\"groceries\", \"weekly\"]\n      ))\n    }\n    \n    // Monthly recurring expenses\n    if (day === 1) {\n      // Rent\n      transactions.push(createTransaction(\n        currentDate,\n        \"Monthly rent\",\n        120000, // $1,200\n        \"housing\",\n        \"expense\",\n        \"bank_transfer\",\n        \"University Housing\",\n        [\"rent\", \"monthly\"]\n      ))\n      \n      // Utilities\n      transactions.push(createTransaction(\n        currentDate,\n        \"Utilities\",\n        Math.floor(Math.random() * 3000) + 2000, // $20-50\n        \"utilities\",\n        \"expense\",\n        \"debit_card\",\n        \"Campus Utilities\",\n        [\"utilities\", \"monthly\"]\n      ))\n    }\n    \n    if (day === 5) {\n      // Tuition payment (if applicable)\n      if (Math.random() > 0.3) {\n        transactions.push(createTransaction(\n          currentDate,\n          \"Tuition payment\",\n          Math.floor(Math.random() * 200000) + 300000, // $3,000-5,000\n          \"tuition\",\n          \"expense\",\n          \"bank_transfer\",\n          \"University Bursar\",\n          [\"tuition\", \"education\"]\n        ))\n      }\n    }\n  }\n  \n  return transactions.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n}\n\n/**\n * Get daily expense patterns based on day and weekend status\n */\nfunction getDailyExpenses(day: number, isWeekend: boolean): Array<{\n  description: string\n  amount: number\n  category: TransactionCategory\n  paymentMethod: PaymentMethod\n  merchant?: string\n  tags: string[]\n}> {\n  const baseExpenses = [\n    // Food expenses\n    {\n      description: \"Coffee\",\n      amount: Math.floor(Math.random() * 300) + 200, // $2-5\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Coffee Shop\",\n      tags: [\"coffee\", \"daily\"]\n    },\n    {\n      description: \"Lunch\",\n      amount: Math.floor(Math.random() * 800) + 500, // $5-13\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Dining Hall\",\n      tags: [\"lunch\", \"daily\"]\n    },\n    {\n      description: \"Dinner\",\n      amount: Math.floor(Math.random() * 1000) + 800, // $8-18\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Dining Hall\",\n      tags: [\"dinner\", \"daily\"]\n    },\n    {\n      description: \"Snacks\",\n      amount: Math.floor(Math.random() * 400) + 200, // $2-6\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Store\",\n      tags: [\"snacks\", \"daily\"]\n    },\n    \n    // Transportation\n    {\n      description: \"Bus fare\",\n      amount: 250, // $2.50\n      category: \"transportation\" as TransactionCategory,\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\n      merchant: \"City Transit\",\n      tags: [\"transport\", \"daily\"]\n    },\n    {\n      description: \"Uber ride\",\n      amount: Math.floor(Math.random() * 1500) + 800, // $8-23\n      category: \"transportation\" as TransactionCategory,\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\n      merchant: \"Uber\",\n      tags: [\"transport\", \"ride_share\"]\n    },\n    \n    // Entertainment\n    {\n      description: \"Movie ticket\",\n      amount: Math.floor(Math.random() * 500) + 800, // $8-13\n      category: \"entertainment\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Theater\",\n      tags: [\"entertainment\", \"movies\"]\n    },\n    {\n      description: \"Streaming subscription\",\n      amount: 1500, // $15\n      category: \"entertainment\" as TransactionCategory,\n      paymentMethod: \"credit_card\" as PaymentMethod,\n      merchant: \"Netflix\",\n      tags: [\"entertainment\", \"subscription\"]\n    },\n    \n    // Shopping\n    {\n      description: \"Textbook\",\n      amount: Math.floor(Math.random() * 15000) + 5000, // $50-200\n      category: \"books\" as TransactionCategory,\n      paymentMethod: \"credit_card\" as PaymentMethod,\n      merchant: \"University Bookstore\",\n      tags: [\"books\", \"education\"]\n    },\n    {\n      description: \"School supplies\",\n      amount: Math.floor(Math.random() * 2000) + 500, // $5-25\n      category: \"shopping\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Store\",\n      tags: [\"supplies\", \"education\"]\n    },\n    {\n      description: \"Clothing\",\n      amount: Math.floor(Math.random() * 8000) + 2000, // $20-100\n      category: \"shopping\" as TransactionCategory,\n      paymentMethod: \"credit_card\" as PaymentMethod,\n      merchant: \"Campus Clothing Store\",\n      tags: [\"clothing\", \"shopping\"]\n    },\n    \n    // Healthcare\n    {\n      description: \"Prescription\",\n      amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\n      category: \"healthcare\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Pharmacy\",\n      tags: [\"healthcare\", \"prescription\"]\n    },\n    {\n      description: \"Doctor visit\",\n      amount: Math.floor(Math.random() * 5000) + 2000, // $20-70\n      category: \"healthcare\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Health Center\",\n      tags: [\"healthcare\", \"medical\"]\n    }\n  ]\n  \n  if (isWeekend) {\n    // Weekend-specific expenses\n    baseExpenses.push(\n      {\n        description: \"Weekend brunch\",\n        amount: Math.floor(Math.random() * 1200) + 800, // $8-20\n        category: \"food\" as TransactionCategory,\n        paymentMethod: \"debit_card\" as PaymentMethod,\n        merchant: \"Campus Brunch Spot\",\n        tags: [\"food\", \"weekend\", \"brunch\"]\n      },\n      {\n        description: \"Party supplies\",\n        amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\n        category: \"entertainment\" as TransactionCategory,\n        paymentMethod: \"debit_card\" as PaymentMethod,\n        merchant: \"Campus Store\",\n        tags: [\"entertainment\", \"party\", \"weekend\"]\n      }\n    )\n  }\n  \n  return baseExpenses\n}\n\n/**\n * Generate monthly metrics based on transactions\n */\nexport function generateMonthMetrics(month: string, transactions: Transaction[]): MonthMetrics {\n  const incomeTransactions = transactions.filter(t => t.type === \"income\")\n  const expenseTransactions = transactions.filter(t => t.type === \"expense\")\n  \n  const totalIncome = incomeTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\n  const totalExpenses = expenseTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\n  const netIncome = totalIncome - totalExpenses\n  const savingsRate = totalIncome > 0 ? (netIncome / totalIncome) * 100 : 0\n  \n  // Category breakdown\n  const categoryMap = new Map<TransactionCategory, { amount: number; count: number }>()\n  expenseTransactions.forEach(t => {\n    const existing = categoryMap.get(t.category) || { amount: 0, count: 0 }\n    categoryMap.set(t.category, {\n      amount: existing.amount + t.amount.amount,\n      count: existing.count + 1\n    })\n  })\n  \n  const categoryBreakdown = Array.from(categoryMap.entries()).map(([category, data]) => ({\n    category,\n    amount: { amount: data.amount, currency: \"USD\", symbol: \"$\" },\n    percentage: totalExpenses > 0 ? (data.amount / totalExpenses) * 100 : 0,\n    transactionCount: data.count\n  })).sort((a, b) => b.amount.amount - a.amount.amount)\n  \n  // Spending patterns\n  const dailySpending = new Map<string, number>()\n  expenseTransactions.forEach(t => {\n    const date = t.date.split('T')[0]\n    dailySpending.set(date, (dailySpending.get(date) || 0) + t.amount.amount)\n  })\n  \n  const averageDailySpending = dailySpending.size > 0 ? \n    Array.from(dailySpending.values()).reduce((sum, amount) => sum + amount, 0) / dailySpending.size : 0\n  \n  const highestSpendingDay = Array.from(dailySpending.entries())\n    .sort((a, b) => b[1] - a[1])[0] || [\"\", 0]\n  \n  const mostFrequentCategory = categoryBreakdown\n    .sort((a, b) => b.transactionCount - a.transactionCount)[0]?.category || \"other\"\n  \n  const mostExpensiveCategory = categoryBreakdown[0]?.category || \"other\"\n  \n  // Generate alerts\n  const alerts = []\n  if (savingsRate < 10) {\n    alerts.push({\n      type: \"goal_missed\" as const,\n      category: \"general\" as TransactionCategory,\n      message: \"Your savings rate is below 10%. Consider reducing discretionary spending.\",\n      severity: \"medium\" as const\n    })\n  }\n  \n  if (totalExpenses > totalIncome * 0.9) {\n    alerts.push({\n      type: \"overspend\" as const,\n      category: \"general\" as TransactionCategory,\n      message: \"You're spending over 90% of your income. This leaves little room for savings.\",\n      severity: \"high\" as const\n    })\n  }\n  \n  const foodSpending = categoryBreakdown.find(c => c.category === \"food\")?.amount.amount || 0\n  if (foodSpending > totalExpenses * 0.4) {\n    alerts.push({\n      type: \"overspend\" as const,\n      category: \"food\" as TransactionCategory,\n      message: \"Food spending is over 40% of total expenses. Consider meal planning to reduce costs.\",\n      severity: \"medium\" as const\n    })\n  }\n  \n  return {\n    month,\n    totalIncome: { amount: totalIncome, currency: \"USD\", symbol: \"$\" },\n    totalExpenses: { amount: totalExpenses, currency: \"USD\", symbol: \"$\" },\n    netIncome: { amount: netIncome, currency: \"USD\", symbol: \"$\" },\n    savingsRate,\n    categoryBreakdown,\n    spendingPatterns: {\n      averageDailySpending: { amount: Math.round(averageDailySpending), currency: \"USD\", symbol: \"$\" },\n      highestSpendingDay: {\n        date: highestSpendingDay[0],\n        amount: { amount: highestSpendingDay[1], currency: \"USD\", symbol: \"$\" }\n      },\n      mostFrequentCategory,\n      mostExpensiveCategory\n    },\n    budgetComparison: [], // Would be populated with actual budget data\n    trends: {\n      weekOverWeek: {\n        incomeChange: Math.random() * 20 - 10, // -10% to +10%\n        expenseChange: Math.random() * 20 - 10\n      },\n      monthOverMonth: {\n        incomeChange: Math.random() * 30 - 15, // -15% to +15%\n        expenseChange: Math.random() * 30 - 15\n      }\n    },\n    alerts,\n    generatedAt: new Date().toISOString(),\n    trend_daily: [] // Will be populated by the calendar component\n  }\n}\n\n/**\n * Generate AI copilot advice based on metrics and transactions\n */\nexport function generateCopilotAdvice(\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\n  month: string,\n  metrics: MonthMetrics,\n  transactions: Transaction[]\n): CopilotAdvice {\n  const adviceTemplates = {\n    general: [\n      {\n        title: \"Financial Health Check\",\n        message: \"Your financial health looks good overall. Consider these small improvements to optimize your student budget.\",\n        priority: \"medium\" as const,\n        recommendations: [\n          {\n            id: \"rec_1\",\n            title: \"Set up automatic savings\",\n            description: \"Transfer $50-100 to savings each month automatically\",\n            actionType: \"save_more\" as const,\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"easy\" as const,\n            timeframe: \"immediate\" as const\n          }\n        ]\n      }\n    ],\n    budget: [\n      {\n        title: \"Budget Optimization\",\n        message: \"Your current spending patterns show room for improvement. Here's how to optimize your budget.\",\n        priority: \"high\" as const,\n        recommendations: [\n          {\n            id: \"rec_2\",\n            title: \"Reduce food spending\",\n            description: \"Meal prep on Sundays to cut food costs by 30%\",\n            actionType: \"reduce_spending\" as const,\n            estimatedImpact: { amount: 8000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"medium\" as const,\n            timeframe: \"short_term\" as const\n          }\n        ]\n      }\n    ],\n    savings: [\n      {\n        title: \"Boost Your Savings\",\n        message: \"Your savings rate could be improved. Here are some strategies to save more money.\",\n        priority: \"high\" as const,\n        recommendations: [\n          {\n            id: \"rec_3\",\n            title: \"Open a high-yield savings account\",\n            description: \"Earn 4%+ interest on your emergency fund\",\n            actionType: \"save_more\" as const,\n            estimatedImpact: { amount: 2000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"easy\" as const,\n            timeframe: \"immediate\" as const\n          }\n        ]\n      }\n    ],\n    spending: [\n      {\n        title: \"Smart Spending Tips\",\n        message: \"You're spending more than necessary in some categories. Here's how to spend smarter.\",\n        priority: \"medium\" as const,\n        recommendations: [\n          {\n            id: \"rec_4\",\n            title: \"Use student discounts\",\n            description: \"Take advantage of student pricing for software, transportation, and entertainment\",\n            actionType: \"reduce_spending\" as const,\n            estimatedImpact: { amount: 3000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"easy\" as const,\n            timeframe: \"immediate\" as const\n          }\n        ]\n      }\n    ],\n    debt: [\n      {\n        title: \"Debt Management\",\n        message: \"If you have student loans or credit card debt, here's how to manage it effectively.\",\n        priority: \"urgent\" as const,\n        recommendations: [\n          {\n            id: \"rec_5\",\n            title: \"Pay more than minimum\",\n            description: \"Even $25 extra per month can save thousands in interest\",\n            actionType: \"pay_debt\" as const,\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"medium\" as const,\n            timeframe: \"long_term\" as const\n          }\n        ]\n      }\n    ],\n    investment: [\n      {\n        title: \"Start Investing Early\",\n        message: \"Even small amounts invested now can grow significantly over time.\",\n        priority: \"low\" as const,\n        recommendations: [\n          {\n            id: \"rec_6\",\n            title: \"Open a Roth IRA\",\n            description: \"Start with $25/month in a low-cost index fund\",\n            actionType: \"save_more\" as const,\n            estimatedImpact: { amount: 10000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"hard\" as const,\n            timeframe: \"long_term\" as const\n          }\n        ]\n      }\n    ]\n  }\n  \n  const template = adviceTemplates[mode][0]\n  const relevantTransactionIds = transactions\n    .filter(t => t.type === \"expense\")\n    .slice(0, 5)\n    .map(t => t.id)\n  \n  return {\n    id: `advice_${Date.now()}`,\n    mode,\n    title: template.title,\n    message: template.message,\n    priority: template.priority,\n    category: \"general\",\n    recommendations: template.recommendations,\n    insights: [\n      {\n        metric: \"Savings Rate\",\n        value: `${metrics.savingsRate.toFixed(1)}%`,\n        trend: metrics.savingsRate > 20 ? \"up\" : \"down\",\n        significance: \"high\"\n      },\n      {\n        metric: \"Monthly Expenses\",\n        value: `$${(metrics.totalExpenses.amount / 100).toFixed(0)}`,\n        trend: \"stable\",\n        significance: \"medium\"\n      }\n    ],\n    context: {\n      month,\n      relevantTransactions: relevantTransactionIds,\n      userProfile: {\n        studentType: \"undergraduate\",\n        incomeLevel: \"medium\",\n        spendingStyle: \"moderate\"\n      }\n    },\n    generatedAt: new Date().toISOString(),\n    expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString() // 7 days\n  }\n}\n\n// ============================================================================\n// MOCK DATA STORAGE\n// ============================================================================\n\n/**\n * In-memory storage for mock data\n * In production, this would be replaced with actual database calls\n */\nclass MockDataStore {\n  private transactions: Map<string, Transaction[]> = new Map()\n  private metrics: Map<string, MonthMetrics> = new Map()\n  private advice: Map<string, CopilotAdvice[]> = new Map()\n  \n  constructor() {\n    // Pre-generate data for current month and previous month\n    const currentMonth = new Date().toISOString().slice(0, 7)\n    const lastMonth = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().slice(0, 7)\n    \n    this.generateMonthData(currentMonth)\n    this.generateMonthData(lastMonth)\n    \n    // Also generate data for a few months back to ensure we have data\n    const monthsBack = ['2024-12', '2025-01', '2025-02', '2025-03', '2025-04', '2025-05', '2025-06', '2025-07', '2025-08']\n    monthsBack.forEach(month => this.generateMonthData(month))\n  }\n  \n  private generateMonthData(month: string) {\n    const transactions = generateStudentTransactions(month)\n    const metrics = generateMonthMetrics(month, transactions)\n    \n    this.transactions.set(month, transactions)\n    this.metrics.set(month, metrics)\n  }\n  \n  getTransactions(month: string): Transaction[] {\n    if (!this.transactions.has(month)) {\n      this.generateMonthData(month)\n    }\n    return this.transactions.get(month) || []\n  }\n  \n  getMetrics(month: string): MonthMetrics | null {\n    if (!this.metrics.has(month)) {\n      this.generateMonthData(month)\n    }\n    return this.metrics.get(month) || null\n  }\n  \n  getAdvice(mode: string, month: string): CopilotAdvice[] {\n    const key = `${mode}_${month}`\n    if (!this.advice.has(key)) {\n      const transactions = this.getTransactions(month)\n      const metrics = this.getMetrics(month)\n      if (metrics) {\n        const advice = generateCopilotAdvice(\n          mode as \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\n          month,\n          metrics,\n          transactions\n        )\n        this.advice.set(key, [advice])\n      }\n    }\n    return this.advice.get(key) || []\n  }\n}\n\n// Global mock data store instance\nexport const mockDataStore = new MockDataStore()\n\n// ============================================================================\n// UTILITY FUNCTIONS\n// ============================================================================\n\n/**\n * Filter transactions based on query parameters\n */\nexport function filterTransactions(\n  transactions: Transaction[],\n  params: TransactionQueryParams\n): Transaction[] {\n  let filtered = [...transactions]\n  \n  if (params.category) {\n    filtered = filtered.filter(t => t.category === params.category)\n  }\n  \n  if (params.type) {\n    filtered = filtered.filter(t => t.type === params.type)\n  }\n  \n  if (params.status) {\n    filtered = filtered.filter(t => t.status === params.status)\n  }\n  \n  if (params.minAmount !== undefined) {\n    filtered = filtered.filter(t => t.amount.amount >= params.minAmount!)\n  }\n  \n  if (params.maxAmount !== undefined) {\n    filtered = filtered.filter(t => t.amount.amount <= params.maxAmount!)\n  }\n  \n  if (params.search) {\n    const searchLower = params.search.toLowerCase()\n    filtered = filtered.filter(t => \n      t.description.toLowerCase().includes(searchLower) ||\n      t.merchant?.toLowerCase().includes(searchLower) ||\n      t.notes?.toLowerCase().includes(searchLower)\n    )\n  }\n  \n  if (params.tags && params.tags.length > 0) {\n    filtered = filtered.filter(t => \n      params.tags!.some(tag => t.tags.includes(tag))\n    )\n  }\n  \n  // Sorting\n  if (params.sortBy) {\n    filtered.sort((a, b) => {\n      let aVal: string | number, bVal: string | number\n      \n      switch (params.sortBy) {\n        case \"date\":\n          aVal = new Date(a.date).getTime()\n          bVal = new Date(b.date).getTime()\n          break\n        case \"amount\":\n          aVal = a.amount.amount\n          bVal = b.amount.amount\n          break\n        case \"description\":\n          aVal = a.description\n          bVal = b.description\n          break\n        default:\n          return 0\n      }\n      \n      if (params.sortOrder === \"desc\") {\n        return bVal > aVal ? 1 : -1\n      } else {\n        return aVal > bVal ? 1 : -1\n      }\n    })\n  }\n  \n  return filtered\n}\n\n/**\n * Paginate results\n */\nexport function paginateResults<T>(\n  items: T[],\n  page: number = 1,\n  limit: number = 20\n): { items: T[]; total: number; page: number; totalPages: number } {\n  const startIndex = (page - 1) * limit\n  const endIndex = startIndex + limit\n  const paginatedItems = items.slice(startIndex, endIndex)\n  \n  return {\n    items: paginatedItems,\n    total: items.length,\n    page,\n    totalPages: Math.ceil(items.length / limit)\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/api.ts"],"sourcesContent":["import { \n  Transaction, \n  MonthMetrics, \n  CopilotAdvice, \n  ApiResponse, \n  TransactionQueryParams,\n  CurrencyFormatOptions,\n  User\n} from \"./types\"\nimport { mockDataStore, filterTransactions, paginateResults } from \"./mock\"\n\n// ============================================================================\n// API CONFIGURATION\n// ============================================================================\n\n/**\n * API Configuration\n * \n * To swap to real endpoints later:\n * 1. Update BASE_URL to your API server\n * 2. Replace mock data calls with actual HTTP requests\n * 3. Update error handling for network failures\n * 4. Add authentication headers if needed\n */\nconst API_CONFIG = {\n  BASE_URL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001/api\",\n  TIMEOUT: 10000, // 10 seconds\n  RETRY_ATTEMPTS: 3,\n  RETRY_DELAY: 1000, // 1 second\n}\n\n// ============================================================================\n// HTTP CLIENT\n// ============================================================================\n\n/**\n * Generic HTTP client with error handling and retries\n * \n * In production, replace with your preferred HTTP client (axios, fetch, etc.)\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass ApiClient {\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    const url = `${API_CONFIG.BASE_URL}${endpoint}`\n    \n    const defaultOptions: RequestInit = {\n      headers: {\n        'Content-Type': 'application/json',\n        // Add authentication headers here if needed\n        // 'Authorization': `Bearer ${getAuthToken()}`,\n      },\n      ...options,\n    }\n    \n    try {\n      const response = await fetch(url, defaultOptions)\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n      }\n      \n      const data = await response.json()\n      return {\n        success: true,\n        data,\n        error: null\n      }\n    } catch (error) {\n      console.error(`API Error for ${endpoint}:`, error)\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'NETWORK_ERROR',\n          message: error instanceof Error ? error.message : 'Unknown error',\n          details: { endpoint, options },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n  }\n  \n  async get<T>(endpoint: string, params?: Record<string, string>): Promise<ApiResponse<T>> {\n    const url = params ? `${endpoint}?${new URLSearchParams(params)}` : endpoint\n    return this.request<T>(url, { method: 'GET' })\n  }\n  \n  async post<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, {\n      method: 'POST',\n      body: data ? JSON.stringify(data) : undefined\n    })\n  }\n  \n  async put<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, {\n      method: 'PUT',\n      body: data ? JSON.stringify(data) : undefined\n    })\n  }\n  \n  async delete<T>(endpoint: string): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, { method: 'DELETE' })\n  }\n}\n\n// Global API client instance\n// const apiClient = new ApiClient() // Uncomment when switching to real API\n\n// ============================================================================\n// MOCK API IMPLEMENTATION\n// ============================================================================\n\n/**\n * Mock API implementation using in-memory data\n * \n * To replace with real API:\n * 1. Replace mockDataStore calls with apiClient calls\n * 2. Update response format to match your API\n * 3. Add proper error handling for network failures\n * 4. Implement caching if needed\n */\n\n/**\n * Fetch monthly metrics for a specific month\n * \n * @param month - Month in YYYY-MM format\n * @returns Promise<ApiResponse<MonthMetrics>>\n * \n * Real API endpoint: GET /api/metrics/{month}\n */\nexport async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\n  try {\n    console.log('Fetching metrics for month:', month)\n    \n    // Validate month format\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\n      console.error('Invalid month format:', month)\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'INVALID_MONTH_FORMAT',\n          message: 'Month must be in YYYY-MM format',\n          details: { month },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n    \n    // In production, replace with:\n    // return apiClient.get<MonthMetrics>(`/metrics/${month}`)\n    \n    const metrics = mockDataStore.getMetrics(month)\n    console.log('Retrieved metrics:', metrics ? 'Found' : 'Not found')\n    \n    if (!metrics) {\n      console.error('No metrics found for month:', month)\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'METRICS_NOT_FOUND',\n          message: `No metrics found for month ${month}`,\n          details: { month },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n    \n    console.log('Returning metrics successfully')\n    return {\n      success: true,\n      data: metrics,\n      error: null\n    }\n  } catch (error) {\n    console.error('Error fetching month metrics:', error)\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'INTERNAL_ERROR',\n        message: 'Failed to fetch month metrics',\n        details: { month, error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      }\n    }\n  }\n}\n\n/**\n * Fetch transactions with optional filtering and pagination\n * \n * @param params - Query parameters for filtering and pagination\n * @returns Promise<ApiResponse<Transaction[]>>\n * \n * Real API endpoint: GET /api/transactions?{params}\n */\nexport async function fetchTransactions(\n  params: TransactionQueryParams = {}\n): Promise<ApiResponse<Transaction[]>> {\n  try {\n    const { month = new Date().toISOString().slice(0, 7), page = 1, limit = 20, ...filters } = params\n    \n    // In production, replace with:\n    // const queryParams = new URLSearchParams()\n    // Object.entries(params).forEach(([key, value]) => {\n    //   if (value !== undefined) {\n    //     queryParams.append(key, String(value))\n    //   }\n    // })\n    // return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\n    \n    const allTransactions = mockDataStore.getTransactions(month)\n    const filteredTransactions = filterTransactions(allTransactions, filters)\n    const paginatedResult = paginateResults(filteredTransactions, page, limit)\n    \n    return {\n      success: true,\n      data: paginatedResult.items,\n      error: null,\n      metadata: {\n        total: paginatedResult.total,\n        page: paginatedResult.page,\n        limit,\n        hasMore: paginatedResult.page < paginatedResult.totalPages\n      }\n    }\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'INTERNAL_ERROR',\n        message: 'Failed to fetch transactions',\n        details: { params, error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      }\n    }\n  }\n}\n\n/**\n * Fetch AI copilot advice for a specific mode and month\n * \n * @param mode - Advice mode (general, budget, savings, etc.)\n * @param month - Month in YYYY-MM format\n * @returns Promise<ApiResponse<CopilotAdvice[]>>\n * \n * Real API endpoint: GET /api/advice/{mode}?month={month}\n */\nexport async function fetchAdvice(\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\n  month: string = new Date().toISOString().slice(0, 7)\n): Promise<ApiResponse<CopilotAdvice[]>> {\n  try {\n    // Validate month format\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'INVALID_MONTH_FORMAT',\n          message: 'Month must be in YYYY-MM format',\n          details: { month },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n    \n    // In production, replace with:\n    // return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\n    \n    const advice = mockDataStore.getAdvice(mode, month)\n    \n    return {\n      success: true,\n      data: advice,\n      error: null\n    }\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'INTERNAL_ERROR',\n        message: 'Failed to fetch advice',\n        details: { mode, month, error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      }\n    }\n  }\n}\n\nexport async function fetchCurrentUser(): Promise<ApiResponse<User>> {\n  try {\n    // In production, replace with:\n    // return apiClient.get<User>(\"/user/me\")\n    \n    // Mock user data\n    const user: User = {\n      id: \"user_1\",\n      firstName: \"John\",\n      lastName: \"Doe\",\n      email: \"john.doe@example.com\",\n      avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=32&h=32&fit=crop&crop=face\",\n      preferences: {\n        currency: \"USD\",\n        dateFormat: \"MM/DD/YYYY\",\n        timezone: \"America/New_York\",\n        notifications: {\n          email: true,\n          push: true,\n          sms: false,\n        },\n      },\n      createdAt: \"2024-01-01T00:00:00Z\",\n      updatedAt: new Date().toISOString(),\n    }\n    \n    return {\n      success: true,\n      data: user,\n      error: null,\n    }\n  } catch (error) {\n    console.error(\"Error fetching user:\", error)\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'USER_FETCH_ERROR',\n        message: \"Failed to fetch user\",\n        details: { error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      },\n    }\n  }\n}\n\n// ============================================================================\n// CURRENCY UTILITIES\n// ============================================================================\n\n/**\n * Format currency amount for display\n * \n * @param amount - Amount in cents\n * @param currency - Currency code (default: USD)\n * @param options - Formatting options\n * @returns Formatted currency string\n */\nexport function formatCurrency(\n  amount: number,\n  currency: string = \"USD\",\n  options: CurrencyFormatOptions = {}\n): string {\n  const {\n    showSymbol = true,\n    showCents = true,\n    locale = \"en-US\",\n    compact = false\n  } = options\n  \n  const amountInDollars = amount / 100\n  const currencySymbol = getCurrencySymbol(currency)\n  \n  const formatter = new Intl.NumberFormat(locale, {\n    style: \"currency\",\n    currency,\n    minimumFractionDigits: showCents ? 2 : 0,\n    maximumFractionDigits: showCents ? 2 : 0,\n    notation: compact ? \"compact\" : \"standard\"\n  })\n  \n  let formatted = formatter.format(amountInDollars)\n  \n  if (!showSymbol) {\n    formatted = formatted.replace(currencySymbol, \"\").trim()\n  }\n  \n  return formatted\n}\n\n/**\n * Get currency symbol for a given currency code\n */\nexport function getCurrencySymbol(currency: string): string {\n  const symbols: Record<string, string> = {\n    USD: \"$\",\n    EUR: \"€\",\n    GBP: \"£\",\n    JPY: \"¥\",\n    CAD: \"C$\",\n    AUD: \"A$\",\n    CHF: \"CHF\",\n    CNY: \"¥\",\n    INR: \"₹\",\n    BRL: \"R$\",\n    MXN: \"$\",\n    KRW: \"₩\",\n    SGD: \"S$\",\n    HKD: \"HK$\",\n    NOK: \"kr\",\n    SEK: \"kr\",\n    DKK: \"kr\",\n    PLN: \"zł\",\n    CZK: \"Kč\",\n    HUF: \"Ft\",\n    RON: \"lei\",\n    BGN: \"лв\",\n    HRK: \"kn\",\n    RUB: \"₽\",\n    TRY: \"₺\",\n    ZAR: \"R\",\n    ILS: \"₪\",\n    AED: \"د.إ\",\n    SAR: \"﷼\",\n    QAR: \"﷼\",\n    KWD: \"د.ك\",\n    BHD: \"د.ب\",\n    OMR: \"﷼\",\n    JOD: \"د.ا\",\n    LBP: \"ل.ل\",\n    EGP: \"£\",\n    MAD: \"د.م.\",\n    TND: \"د.ت\",\n    DZD: \"د.ج\",\n    LYD: \"ل.د\",\n    SDG: \"ج.س.\",\n    ETB: \"Br\",\n    KES: \"KSh\",\n    UGX: \"USh\",\n    TZS: \"TSh\",\n    ZMW: \"ZK\",\n    BWP: \"P\",\n    SZL: \"L\",\n    LSL: \"L\",\n    NAD: \"N$\",\n    AOA: \"Kz\",\n    MZN: \"MT\",\n    ZWL: \"Z$\",\n    GHS: \"₵\",\n    NGN: \"₦\",\n    XOF: \"CFA\",\n    XAF: \"FCFA\",\n    CDF: \"FC\",\n    RWF: \"RF\",\n    BIF: \"FBu\",\n    KMF: \"CF\",\n    DJF: \"Fdj\",\n    SOS: \"S\",\n    ERN: \"Nfk\",\n    SLL: \"Le\",\n    GMD: \"D\",\n    GNF: \"FG\",\n    LRD: \"L$\",\n    CVE: \"$\",\n    STN: \"Db\",\n    MRO: \"UM\",\n    MGA: \"Ar\",\n    SCR: \"₨\",\n    MUR: \"₨\",\n    YER: \"﷼\",\n    AFN: \"؋\",\n    PKR: \"₨\",\n    LKR: \"₨\",\n    NPR: \"₨\",\n    BDT: \"৳\",\n    MMK: \"K\",\n    THB: \"฿\",\n    LAK: \"₭\",\n    KHR: \"៛\",\n    VND: \"₫\",\n    IDR: \"Rp\",\n    MYR: \"RM\",\n    PHP: \"₱\",\n    TWD: \"NT$\",\n    MOP: \"MOP$\",\n    BND: \"B$\",\n    FJD: \"FJ$\",\n    PGK: \"K\",\n    WST: \"WS$\",\n    TOP: \"T$\",\n    VUV: \"Vt\",\n    SBD: \"SI$\",\n    NZD: \"NZ$\",\n    XPF: \"₣\",\n    ARS: \"$\",\n    BOB: \"Bs\",\n    CLP: \"$\",\n    COP: \"$\",\n    PYG: \"₲\",\n    PEN: \"S/\",\n    UYU: \"$U\",\n    VES: \"Bs.S\",\n    GYD: \"G$\",\n    SRD: \"$\",\n    TTD: \"TT$\",\n    BBD: \"Bds$\",\n    JMD: \"J$\",\n    BZD: \"BZ$\",\n    GTQ: \"Q\",\n    HNL: \"L\",\n    NIO: \"C$\",\n    CRC: \"₡\",\n    PAB: \"B/.\",\n    DOP: \"RD$\",\n    HTG: \"G\",\n    CUP: \"$\",\n    XCD: \"$\",\n    AWG: \"ƒ\",\n    BMD: \"$\",\n    KYD: \"$\",\n    FKP: \"£\",\n    SHP: \"£\",\n    GIP: \"£\",\n    JEP: \"£\",\n    GGP: \"£\",\n    IMP: \"£\",\n  }\n  \n  return symbols[currency] || currency\n}\n\n/**\n * Parse currency string to cents\n * \n * @param currencyString - Formatted currency string (e.g., \"$123.45\")\n * @returns Amount in cents\n */\nexport function parseCurrencyToCents(currencyString: string): number {\n  // Remove currency symbols and non-numeric characters except decimal point\n  const cleaned = currencyString.replace(/[^\\d.-]/g, \"\")\n  const amount = parseFloat(cleaned)\n  return Math.round(amount * 100)\n}\n\n/**\n * Convert cents to dollars\n */\nexport function centsToDollars(cents: number): number {\n  return cents / 100\n}\n\n/**\n * Convert dollars to cents\n */\nexport function dollarsToCents(dollars: number): number {\n  return Math.round(dollars * 100)\n}\n\n// ============================================================================\n// API MIGRATION GUIDE\n// ============================================================================\n\n/**\n * MIGRATION GUIDE: How to swap to real API endpoints\n * \n * 1. Update API_CONFIG.BASE_URL to your production API URL\n * 2. Replace mock data calls with actual HTTP requests:\n *    - mockDataStore.getMetrics() → apiClient.get('/metrics/{month}')\n *    - mockDataStore.getTransactions() → apiClient.get('/transactions')\n *    - mockDataStore.getAdvice() → apiClient.get('/advice/{mode}')\n * \n * 3. Update error handling for network failures\n * 4. Add authentication if needed:\n *    - Add auth token to headers\n *    - Implement token refresh logic\n *    - Handle 401/403 responses\n * \n * 5. Add caching if needed:\n *    - Implement response caching\n *    - Add cache invalidation\n *    - Handle stale data\n * \n * 6. Add request/response interceptors for:\n *    - Logging\n *    - Error reporting\n *    - Performance monitoring\n * \n * Example real API implementation:\n * \n * export async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\n *   return apiClient.get<MonthMetrics>(`/metrics/${month}`)\n * }\n * \n * export async function fetchTransactions(params: TransactionQueryParams): Promise<ApiResponse<Transaction[]>> {\n *   const queryParams = new URLSearchParams()\n *   Object.entries(params).forEach(([key, value]) => {\n *     if (value !== undefined) {\n *       queryParams.append(key, String(value))\n *     }\n *   })\n *   return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\n * }\n * \n * export async function fetchAdvice(mode: string, month: string): Promise<ApiResponse<CopilotAdvice[]>> {\n *   return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\n * }\n */\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1253, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-transactions.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchTransactions } from \"@/lib/api\"\n\n// Query keys\nexport const transactionKeys = {\n  all: ['transactions'] as const,\n  lists: () => [...transactionKeys.all, 'list'] as const,\n  list: (page: number, limit: number) => [...transactionKeys.lists(), { page, limit }] as const,\n}\n\n// Hooks\nexport function useTransactions(page = 1, limit = 10) {\n  return useQuery({\n    queryKey: transactionKeys.list(page, limit),\n    queryFn: () => fetchTransactions({ page, limit }),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,kBAAkB;IAC7B,KAAK;QAAC;KAAe;IACrB,OAAO,IAAM;eAAI,gBAAgB,GAAG;YAAE;SAAO;IAC7C,MAAM,CAAC,MAAc,QAAkB;eAAI,gBAAgB,KAAK;YAAI;gBAAE;gBAAM;YAAM;SAAE;AACtF;AAGO,SAAS;QAAgB,OAAA,iEAAO,GAAG,QAAA,iEAAQ;;IAChD,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,gBAAgB,IAAI,CAAC,MAAM;QACrC,OAAO;wCAAE,IAAM,IAAA,yIAAiB,EAAC;oBAAE;oBAAM;gBAAM;;QAC/C,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ","debugId":null}},
    {"offset": {"line": 1306, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-accounts.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchMonthMetrics } from \"@/lib/api\"\n\n// Query keys\nexport const accountKeys = {\n  all: ['accounts'] as const,\n  lists: () => [...accountKeys.all, 'list'] as const,\n}\n\n// Hooks\nexport function useAccounts() {\n  return useQuery({\n    queryKey: accountKeys.lists(),\n    queryFn: () => fetchMonthMetrics(new Date().toISOString().slice(0, 7)),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,cAAc;IACzB,KAAK;QAAC;KAAW;IACjB,OAAO,IAAM;eAAI,YAAY,GAAG;YAAE;SAAO;AAC3C;AAGO,SAAS;;IACd,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,YAAY,KAAK;QAC3B,OAAO;oCAAE,IAAM,IAAA,yIAAiB,EAAC,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;;QACnE,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ","debugId":null}},
    {"offset": {"line": 1348, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-budgets.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchMonthMetrics } from \"@/lib/api\"\n\n// Query keys\nexport const budgetKeys = {\n  all: ['budgets'] as const,\n  lists: () => [...budgetKeys.all, 'list'] as const,\n}\n\n// Hooks\nexport function useBudgets() {\n  return useQuery({\n    queryKey: budgetKeys.lists(),\n    queryFn: () => fetchMonthMetrics(new Date().toISOString().slice(0, 7)),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,aAAa;IACxB,KAAK;QAAC;KAAU;IAChB,OAAO,IAAM;eAAI,WAAW,GAAG;YAAE;SAAO;AAC1C;AAGO,SAAS;;IACd,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,WAAW,KAAK;QAC1B,OAAO;mCAAE,IAAM,IAAA,yIAAiB,EAAC,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;;QACnE,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ","debugId":null}},
    {"offset": {"line": 1390, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-user.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchCurrentUser } from \"@/lib/api\"\n\n// Query keys\nexport const userKeys = {\n  all: ['user'] as const,\n  current: () => [...userKeys.all, 'current'] as const,\n}\n\n// Hooks\nexport function useCurrentUser() {\n  return useQuery({\n    queryKey: userKeys.current(),\n    queryFn: () => fetchCurrentUser(),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,WAAW;IACtB,KAAK;QAAC;KAAO;IACb,SAAS,IAAM;eAAI,SAAS,GAAG;YAAE;SAAU;AAC7C;AAGO,SAAS;;IACd,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,SAAS,OAAO;QAC1B,OAAO;uCAAE,IAAM,IAAA,wIAAgB;;QAC/B,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ","debugId":null}},
    {"offset": {"line": 1432, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-month-metrics.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchMonthMetrics } from \"@/lib/api\"\n\n// Query keys\nexport const monthMetricsKeys = {\n  all: ['monthMetrics'] as const,\n  byMonth: (month: string) => [...monthMetricsKeys.all, 'byMonth', month] as const,\n}\n\n// Hooks\nexport function useMonthMetrics(month: string = new Date().toISOString().slice(0, 7)) {\n  console.log('useMonthMetrics called with month:', month)\n  \n  return useQuery({\n    queryKey: monthMetricsKeys.byMonth(month),\n    queryFn: () => {\n      console.log('Query function called for month:', month)\n      return fetchMonthMetrics(month)\n    },\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,mBAAmB;IAC9B,KAAK;QAAC;KAAe;IACrB,SAAS,CAAC,QAAkB;eAAI,iBAAiB,GAAG;YAAE;YAAW;SAAM;AACzE;AAGO,SAAS;QAAgB,QAAA,iEAAgB,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;;IAChF,QAAQ,GAAG,CAAC,sCAAsC;IAElD,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,iBAAiB,OAAO,CAAC;QACnC,OAAO;wCAAE;gBACP,QAAQ,GAAG,CAAC,oCAAoC;gBAChD,OAAO,IAAA,yIAAiB,EAAC;YAC3B;;QACA,WAAW,IAAI,KAAK;IACtB;AACF;GAXgB;;QAGP,0LAAQ","debugId":null}},
    {"offset": {"line": 1480, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-transaction-filters.ts"],"sourcesContent":["\"use client\"\n\nimport { useCallback, useMemo } from \"react\"\nimport { useRouter, useSearchParams } from \"next/navigation\"\nimport { TransactionCategory } from \"@/lib/types\"\n\ninterface TransactionFilters {\n  categories: TransactionCategory[]\n  merchant: string\n  dateFrom: string\n  dateTo: string\n  sortBy: 'date' | 'amount' | 'merchant' | 'category'\n  sortOrder: 'asc' | 'desc'\n  density: 'comfortable' | 'compact'\n}\n\n// const DEFAULT_FILTERS: TransactionFilters = {\n//   categories: [],\n//   merchant: '',\n//   dateFrom: '',\n//   dateTo: '',\n//   sortBy: 'date',\n//   sortOrder: 'desc',\n//   density: 'comfortable'\n// }\n\nexport function useTransactionFilters() {\n  const router = useRouter()\n  const searchParams = useSearchParams()\n\n  const filters = useMemo(() => {\n    const categories = searchParams.get('categories')?.split(',').filter(Boolean) as TransactionCategory[] || []\n    const merchant = searchParams.get('merchant') || ''\n    const dateFrom = searchParams.get('from') || ''\n    const dateTo = searchParams.get('to') || ''\n    const sortBy = (searchParams.get('sortBy') as 'date' | 'amount' | 'merchant' | 'category') || 'date'\n    const sortOrder = (searchParams.get('sortOrder') as 'asc' | 'desc') || 'desc'\n    const density = (searchParams.get('density') as 'comfortable' | 'compact') || 'comfortable'\n\n    return {\n      categories,\n      merchant,\n      dateFrom,\n      dateTo,\n      sortBy,\n      sortOrder,\n      density\n    }\n  }, [searchParams])\n\n  const updateFilters = useCallback((updates: Partial<TransactionFilters>) => {\n    const params = new URLSearchParams(searchParams)\n    \n    // Update categories\n    if (updates.categories !== undefined) {\n      if (updates.categories.length > 0) {\n        params.set('categories', updates.categories.join(','))\n      } else {\n        params.delete('categories')\n      }\n    }\n\n    // Update merchant\n    if (updates.merchant !== undefined) {\n      if (updates.merchant) {\n        params.set('merchant', updates.merchant)\n      } else {\n        params.delete('merchant')\n      }\n    }\n\n    // Update date range\n    if (updates.dateFrom !== undefined) {\n      if (updates.dateFrom) {\n        params.set('from', updates.dateFrom)\n      } else {\n        params.delete('from')\n      }\n    }\n\n    if (updates.dateTo !== undefined) {\n      if (updates.dateTo) {\n        params.set('to', updates.dateTo)\n      } else {\n        params.delete('to')\n      }\n    }\n\n    // Update sorting\n    if (updates.sortBy !== undefined) {\n      params.set('sortBy', updates.sortBy)\n    }\n\n    if (updates.sortOrder !== undefined) {\n      params.set('sortOrder', updates.sortOrder)\n    }\n\n    // Update density\n    if (updates.density !== undefined) {\n      params.set('density', updates.density)\n    }\n\n    // Update URL\n    const newUrl = `${window.location.pathname}?${params.toString()}`\n    router.push(newUrl, { scroll: false })\n  }, [router, searchParams])\n\n  const toggleCategory = useCallback((category: TransactionCategory) => {\n    const currentCategories = filters.categories\n    const newCategories = currentCategories.includes(category)\n      ? currentCategories.filter(c => c !== category)\n      : [...currentCategories, category]\n    \n    updateFilters({ categories: newCategories })\n  }, [filters.categories, updateFilters])\n\n  const clearAllFilters = useCallback(() => {\n    updateFilters({\n      categories: [],\n      merchant: '',\n      dateFrom: '',\n      dateTo: ''\n    })\n  }, [updateFilters])\n\n  const hasActiveFilters = useMemo(() => {\n    return filters.categories.length > 0 || \n           filters.merchant.length > 0 || \n           filters.dateFrom.length > 0 || \n           filters.dateTo.length > 0\n  }, [filters.categories, filters.merchant, filters.dateFrom, filters.dateTo])\n\n  return {\n    filters,\n    updateFilters,\n    toggleCategory,\n    clearAllFilters,\n    hasActiveFilters\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1632, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-budget-mode.ts"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useRouter, useSearchParams } from \"next/navigation\"\n\nexport type BudgetMode = 'budget' | 'maintain'\n\nexport function useBudgetMode() {\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  const [mode, setMode] = useState<BudgetMode>('budget')\n  \n  useEffect(() => {\n    const modeParam = searchParams.get('mode')\n    if (modeParam === 'budget' || modeParam === 'maintain') {\n      setMode(modeParam)\n    }\n  }, [searchParams])\n  \n  const updateMode = (newMode: BudgetMode) => {\n    setMode(newMode)\n    \n    const params = new URLSearchParams(searchParams.toString())\n    params.set('mode', newMode)\n    \n    router.push(`/budget?${params.toString()}`, { scroll: false })\n  }\n  \n  return {\n    mode,\n    updateMode\n  }\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;AAHA;;;AAOO,SAAS;;IACd,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,eAAe,IAAA,wJAAe;IACpC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAa;IAE7C,IAAA,0KAAS;mCAAC;YACR,MAAM,YAAY,aAAa,GAAG,CAAC;YACnC,IAAI,cAAc,YAAY,cAAc,YAAY;gBACtD,QAAQ;YACV;QACF;kCAAG;QAAC;KAAa;IAEjB,MAAM,aAAa,CAAC;QAClB,QAAQ;QAER,MAAM,SAAS,IAAI,gBAAgB,aAAa,QAAQ;QACxD,OAAO,GAAG,CAAC,QAAQ;QAEnB,OAAO,IAAI,CAAC,AAAC,WAA4B,OAAlB,OAAO,QAAQ,KAAM;YAAE,QAAQ;QAAM;IAC9D;IAEA,OAAO;QACL;QACA;IACF;AACF;GAzBgB;;QACC,kJAAS;QACH,wJAAe","debugId":null}},
    {"offset": {"line": 1683, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/index.ts"],"sourcesContent":["// Re-export all hooks for easier importing\nexport * from './use-transactions'\nexport * from './use-accounts'\nexport * from './use-budgets'\nexport * from './use-user'\nexport * from './use-month-metrics'\nexport * from './use-transaction-filters'\nexport * from './use-budget-mode'\n"],"names":[],"mappings":"AAAA,2CAA2C;;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 1706, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/calendar/CalendarGrid.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useMemo } from \"react\"\nimport { motion } from \"framer-motion\"\nimport { Button } from \"@/components/ui/button\"\n// import { Card, CardContent } from \"@/components/ui/card\"\nimport { MonthMetrics } from \"@/lib/types\"\nimport { formatCurrency } from \"@/lib/api\"\nimport { cn } from \"@/lib/utils\"\n\ninterface CalendarGridProps {\n  monthMetrics: MonthMetrics\n  currentDate: Date\n  onDayClick: (date: string) => void\n  className?: string\n}\n\nconst DAY_NAMES = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\nconst MONTH_NAMES = [\n  \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n]\n\nexport function CalendarGrid({\n  monthMetrics,\n  currentDate,\n  onDayClick,\n  className\n}: CalendarGridProps) {\n  const year = currentDate.getFullYear()\n  const month = currentDate.getMonth()\n  \n  // Calculate calendar grid data\n  const calendarData = useMemo(() => {\n    const firstDayOfMonth = new Date(year, month, 1)\n    const lastDayOfMonth = new Date(year, month + 1, 0)\n    const firstDayOfWeek = firstDayOfMonth.getDay()\n    const daysInMonth = lastDayOfMonth.getDate()\n    \n    // Create a map of daily spending data\n    const dailySpendingMap = new Map<string, number>()\n    monthMetrics.trend_daily.forEach(day => {\n      dailySpendingMap.set(day.date, day.totalSpending.amount)\n    })\n    \n    // Calculate spending quantiles for color mapping\n    const spendingAmounts = monthMetrics.trend_daily\n      .map(day => day.totalSpending.amount)\n      .filter(amount => amount > 0)\n      .sort((a, b) => a - b)\n    \n    const quantiles = {\n      q25: spendingAmounts[Math.floor(spendingAmounts.length * 0.25)] || 0,\n      q50: spendingAmounts[Math.floor(spendingAmounts.length * 0.5)] || 0,\n      q75: spendingAmounts[Math.floor(spendingAmounts.length * 0.75)] || 0,\n      q90: spendingAmounts[Math.floor(spendingAmounts.length * 0.9)] || 0,\n      max: spendingAmounts[spendingAmounts.length - 1] || 0\n    }\n    \n    // Generate calendar days\n    const days = []\n    \n    // Empty cells for days before the first day of the month\n    for (let i = 0; i < firstDayOfWeek; i++) {\n      days.push({\n        type: 'empty' as const,\n        key: `empty-${i}`\n      })\n    }\n    \n    // Days of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(year, month, day)\n      const dateString = date.toISOString().split('T')[0]\n      const spending = dailySpendingMap.get(dateString) || 0\n      const isToday = date.toDateString() === new Date().toDateString()\n      \n      // Determine color intensity based on spending quantiles\n      let colorIntensity = 0\n      if (spending > 0) {\n        if (spending <= quantiles.q25) colorIntensity = 1\n        else if (spending <= quantiles.q50) colorIntensity = 2\n        else if (spending <= quantiles.q75) colorIntensity = 3\n        else if (spending <= quantiles.q90) colorIntensity = 4\n        else colorIntensity = 5\n      }\n      \n      days.push({\n        type: 'day' as const,\n        key: day.toString(),\n        day,\n        date: dateString,\n        spending,\n        colorIntensity,\n        isToday\n      })\n    }\n    \n    return { days, quantiles }\n  }, [monthMetrics.trend_daily, year, month])\n  \n  const getColorClass = (intensity: number, isToday: boolean) => {\n    if (intensity === 0) {\n      return isToday \n        ? \"bg-primary/20 border-primary/40 hover:bg-primary/30\" \n        : \"bg-muted/30 border-muted/50 hover:bg-muted/40\"\n    }\n    \n    const baseClasses = isToday ? \"border-primary/60\" : \"border-muted/60\"\n    \n    switch (intensity) {\n      case 1: return `${baseClasses} bg-green-100 hover:bg-green-200`\n      case 2: return `${baseClasses} bg-green-200 hover:bg-green-300`\n      case 3: return `${baseClasses} bg-yellow-200 hover:bg-yellow-300`\n      case 4: return `${baseClasses} bg-orange-200 hover:bg-orange-300`\n      case 5: return `${baseClasses} bg-red-200 hover:bg-red-300`\n      default: return `${baseClasses} bg-muted/30 hover:bg-muted/40`\n    }\n  }\n  \n  const getIntensityLabel = (intensity: number) => {\n    switch (intensity) {\n      case 0: return \"No spending\"\n      case 1: return \"Very low spending\"\n      case 2: return \"Low spending\"\n      case 3: return \"Medium spending\"\n      case 4: return \"High spending\"\n      case 5: return \"Very high spending\"\n      default: return \"No data\"\n    }\n  }\n  \n  return (\n    <div className={cn(\"w-full\", className)}>\n      {/* Day headers */}\n      <div className=\"grid grid-cols-7 gap-px mb-2\">\n        {DAY_NAMES.map(day => (\n          <div \n            key={day} \n            className=\"p-2 text-center text-sm font-medium text-muted-foreground bg-muted/20 rounded-t-md\"\n          >\n            {day}\n          </div>\n        ))}\n      </div>\n      \n      {/* Calendar grid */}\n      <div className=\"grid grid-cols-7 gap-px bg-muted/20 rounded-md overflow-hidden\">\n        {calendarData.days.map((dayData, index) => {\n          if (dayData.type === 'empty') {\n            return (\n              <div \n                key={dayData.key} \n                className=\"aspect-square bg-muted/10\"\n                aria-hidden=\"true\"\n              />\n            )\n          }\n          \n          const { day, date, spending, colorIntensity, isToday } = dayData\n          const formattedAmount = spending > 0 ? formatCurrency(spending, \"USD\", { showCents: false }) : \"$0\"\n          const intensityLabel = getIntensityLabel(colorIntensity)\n          \n          return (\n            <motion.div\n              key={dayData.key}\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.2, delay: index * 0.01 }}\n              className=\"relative\"\n            >\n              <Button\n                variant=\"ghost\"\n                className={cn(\n                  \"w-full h-full aspect-square p-1 rounded-none border-2 transition-all duration-200\",\n                  \"hover:scale-105 focus:scale-105 focus:ring-2 focus:ring-primary/50\",\n                  getColorClass(colorIntensity, isToday)\n                )}\n                onClick={() => onDayClick(date)}\n                aria-label={`${MONTH_NAMES[month]} ${day}, ${year}. ${intensityLabel}. Total spending: ${formattedAmount}`}\n                role=\"button\"\n                tabIndex={0}\n              >\n                <div className=\"flex flex-col items-center justify-center h-full text-center\">\n                  <span className={cn(\n                    \"text-sm font-semibold\",\n                    isToday ? \"text-primary\" : \"text-foreground\"\n                  )}>\n                    {day}\n                  </span>\n                  {spending > 0 && (\n                    <span className=\"text-xs font-mono text-muted-foreground mt-1\">\n                      {formattedAmount}\n                    </span>\n                  )}\n                </div>\n              </Button>\n            </motion.div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1979, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 2106, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/calendar/CalendarHeader.tsx"],"sourcesContent":["\"use client\"\n\nimport React from \"react\"\n// import { motion } from \"framer-motion\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { ChevronLeft, ChevronRight, Calendar, RotateCcw } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface CalendarHeaderProps {\n  currentDate: Date\n  onPreviousMonth: () => void\n  onNextMonth: () => void\n  onToday: () => void\n  className?: string\n}\n\nconst MONTH_NAMES = [\n  \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n]\n\nexport function CalendarHeader({\n  currentDate,\n  onPreviousMonth,\n  onNextMonth,\n  onToday,\n  className\n}: CalendarHeaderProps) {\n  const month = currentDate.getMonth()\n  const year = currentDate.getFullYear()\n  const isCurrentMonth = currentDate.getMonth() === new Date().getMonth() && \n                        currentDate.getFullYear() === new Date().getFullYear()\n\n  return (\n    <Card className={cn(\"w-full\", className)}>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <Calendar className=\"h-6 w-6 text-primary\" />\n            <div>\n              <CardTitle className=\"text-2xl font-bold\">\n                {MONTH_NAMES[month]} {year}\n              </CardTitle>\n              <p className=\"text-sm text-muted-foreground mt-1\">\n                Daily spending patterns and trends\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={onPreviousMonth}\n              className=\"h-9 px-3\"\n              aria-label=\"Previous month\"\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n            \n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={onToday}\n              className={cn(\n                \"h-9 px-3\",\n                isCurrentMonth && \"bg-primary/10 border-primary/20 text-primary\"\n              )}\n              aria-label=\"Go to current month\"\n            >\n              <RotateCcw className=\"h-4 w-4 mr-1\" />\n              Today\n            </Button>\n            \n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={onNextMonth}\n              className=\"h-9 px-3\"\n              aria-label=\"Next month\"\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </CardHeader>\n    </Card>\n  )\n}\n"],"names":[],"mappings":";;;;;AAGA,yCAAyC;AACzC;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAPA;;;;;;AAiBA,MAAM,cAAc;IAClB;IAAW;IAAY;IAAS;IAAS;IAAO;IAChD;IAAQ;IAAU;IAAa;IAAW;IAAY;CACvD;AAEM,SAAS,eAAe,KAMT;QANS,EAC7B,WAAW,EACX,eAAe,EACf,WAAW,EACX,OAAO,EACP,SAAS,EACW,GANS;IAO7B,MAAM,QAAQ,YAAY,QAAQ;IAClC,MAAM,OAAO,YAAY,WAAW;IACpC,MAAM,iBAAiB,YAAY,QAAQ,OAAO,IAAI,OAAO,QAAQ,MAC/C,YAAY,WAAW,OAAO,IAAI,OAAO,WAAW;IAE1E,qBACE,6LAAC,2IAAI;QAAC,WAAW,IAAA,4HAAE,EAAC,UAAU;kBAC5B,cAAA,6LAAC,iJAAU;sBACT,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,yNAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC;;kDACC,6LAAC,gJAAS;wCAAC,WAAU;;4CAClB,WAAW,CAAC,MAAM;4CAAC;4CAAE;;;;;;;kDAExB,6LAAC;wCAAE,WAAU;kDAAqC;;;;;;;;;;;;;;;;;;kCAMtD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+IAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,WAAU;gCACV,cAAW;0CAEX,cAAA,6LAAC,sOAAW;oCAAC,WAAU;;;;;;;;;;;0CAGzB,6LAAC,+IAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,WAAW,IAAA,4HAAE,EACX,YACA,kBAAkB;gCAEpB,cAAW;;kDAEX,6LAAC,gOAAS;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAIxC,6LAAC,+IAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,WAAU;gCACV,cAAW;0CAEX,cAAA,6LAAC,yOAAY;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOtC;KAnEgB","debugId":null}},
    {"offset": {"line": 2287, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/calendar/CalendarSummary.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useMemo } from \"react\"\nimport { motion } from \"framer-motion\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { MonthMetrics } from \"@/lib/types\"\nimport { formatCurrency } from \"@/lib/api\"\nimport { cn } from \"@/lib/utils\"\nimport { TrendingUp, TrendingDown, Calendar, DollarSign } from \"lucide-react\"\n\ninterface CalendarSummaryProps {\n  monthMetrics: MonthMetrics\n  // currentDate: Date\n  className?: string\n}\n\nexport function CalendarSummary({\n  monthMetrics,\n  // currentDate,\n  className\n}: CalendarSummaryProps) {\n  const summaryData = useMemo(() => {\n    const dailyData = monthMetrics.trend_daily\n    const totalDays = dailyData.length\n    const daysWithSpending = dailyData.filter(day => day.totalSpending.amount > 0).length\n    const totalSpending = dailyData.reduce((sum, day) => sum + day.totalSpending.amount, 0)\n    const averageDaily = totalDays > 0 ? totalSpending / totalDays : 0\n    const highestDay = dailyData.reduce((max, day) => \n      day.totalSpending.amount > max.totalSpending.amount ? day : max, \n      dailyData[0] || { totalSpending: { amount: 0 } }\n    )\n    \n    // Calculate spending trend (comparing first half vs second half of month)\n    const midMonth = Math.floor(totalDays / 2)\n    const firstHalf = dailyData.slice(0, midMonth).reduce((sum, day) => sum + day.totalSpending.amount, 0)\n    const secondHalf = dailyData.slice(midMonth).reduce((sum, day) => sum + day.totalSpending.amount, 0)\n    const trendDirection = secondHalf > firstHalf ? 'up' : 'down'\n    const trendPercentage = firstHalf > 0 ? Math.abs(((secondHalf - firstHalf) / firstHalf) * 100) : 0\n    \n    return {\n      totalDays,\n      daysWithSpending,\n      totalSpending,\n      averageDaily,\n      highestDay,\n      trendDirection,\n      trendPercentage\n    }\n  }, [monthMetrics.trend_daily])\n\n  const stats = [\n    {\n      title: \"Total Spending\",\n      value: formatCurrency(summaryData.totalSpending, \"USD\", { showCents: false }),\n      icon: DollarSign,\n      color: \"text-red-600\",\n      bgColor: \"bg-red-50\",\n      description: \"this month\"\n    },\n    {\n      title: \"Daily Average\",\n      value: formatCurrency(summaryData.averageDaily, \"USD\", { showCents: false }),\n      icon: Calendar,\n      color: \"text-blue-600\",\n      bgColor: \"bg-blue-50\",\n      description: \"per day\"\n    },\n    {\n      title: \"Active Days\",\n      value: `${summaryData.daysWithSpending}/${summaryData.totalDays}`,\n      icon: TrendingUp,\n      color: \"text-green-600\",\n      bgColor: \"bg-green-50\",\n      description: \"with transactions\"\n    },\n    {\n      title: \"Highest Day\",\n      value: formatCurrency(summaryData.highestDay.totalSpending.amount, \"USD\", { showCents: false }),\n      icon: summaryData.trendDirection === 'up' ? TrendingUp : TrendingDown,\n      color: summaryData.trendDirection === 'up' ? \"text-orange-600\" : \"text-purple-600\",\n      bgColor: summaryData.trendDirection === 'up' ? \"bg-orange-50\" : \"bg-purple-50\",\n      description: summaryData.highestDay.date ? new Date(summaryData.highestDay.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) : \"N/A\"\n    }\n  ]\n\n  return (\n    <div className={className}>\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {stats.map((stat, index) => {\n          const Icon = stat.icon\n          return (\n            <motion.div\n              key={stat.title}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3, delay: index * 0.1 }}\n            >\n              <Card className=\"h-full\">\n                <CardHeader className=\"pb-2\">\n                  <div className=\"flex items-center justify-between\">\n                    <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                      {stat.title}\n                    </CardTitle>\n                    <div className={cn(\"p-2 rounded-lg\", stat.bgColor)}>\n                      <Icon className={cn(\"h-4 w-4\", stat.color)} />\n                    </div>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className={cn(\"text-2xl font-bold mb-1\", stat.color)}>\n                    {stat.value}\n                  </div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {stat.description}\n                  </p>\n                </CardContent>\n              </Card>\n            </motion.div>\n          )\n        })}\n      </div>\n      \n      {/* Trend indicator */}\n      {summaryData.trendPercentage > 0 && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3, delay: 0.4 }}\n          className=\"mt-4\"\n        >\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-2\">\n                {summaryData.trendDirection === 'up' ? (\n                  <TrendingUp className=\"h-4 w-4 text-orange-600\" />\n                ) : (\n                  <TrendingDown className=\"h-4 w-4 text-purple-600\" />\n                )}\n                <span className=\"text-sm font-medium\">\n                  Spending trend: {summaryData.trendDirection === 'up' ? 'increasing' : 'decreasing'} by{' '}\n                  <span className={cn(\n                    \"font-semibold\",\n                    summaryData.trendDirection === 'up' ? \"text-orange-600\" : \"text-purple-600\"\n                  )}>\n                    {summaryData.trendPercentage.toFixed(1)}%\n                  </span>\n                </span>\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2596, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/calendar/SpendingLegend.tsx"],"sourcesContent":["\"use client\"\n\nimport React from \"react\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { formatCurrency } from \"@/lib/api\"\nimport { cn } from \"@/lib/utils\"\n\ninterface SpendingLegendProps {\n  quantiles: {\n    q25: number\n    q50: number\n    q75: number\n    q90: number\n    max: number\n  }\n  className?: string\n}\n\nexport function SpendingLegend({ quantiles, className }: SpendingLegendProps) {\n  const legendItems = [\n    {\n      intensity: 0,\n      label: \"No spending\",\n      color: \"bg-muted/30\",\n      range: \"$0\"\n    },\n    {\n      intensity: 1,\n      label: \"Very low\",\n      color: \"bg-green-100\",\n      range: `$1 - ${formatCurrency(quantiles.q25, \"USD\", { showCents: false })}`\n    },\n    {\n      intensity: 2,\n      label: \"Low\",\n      color: \"bg-green-200\",\n      range: `${formatCurrency(quantiles.q25, \"USD\", { showCents: false })} - ${formatCurrency(quantiles.q50, \"USD\", { showCents: false })}`\n    },\n    {\n      intensity: 3,\n      label: \"Medium\",\n      color: \"bg-yellow-200\",\n      range: `${formatCurrency(quantiles.q50, \"USD\", { showCents: false })} - ${formatCurrency(quantiles.q75, \"USD\", { showCents: false })}`\n    },\n    {\n      intensity: 4,\n      label: \"High\",\n      color: \"bg-orange-200\",\n      range: `${formatCurrency(quantiles.q75, \"USD\", { showCents: false })} - ${formatCurrency(quantiles.q90, \"USD\", { showCents: false })}`\n    },\n    {\n      intensity: 5,\n      label: \"Very high\",\n      color: \"bg-red-200\",\n      range: `${formatCurrency(quantiles.q90, \"USD\", { showCents: false })}+`\n    }\n  ]\n\n  return (\n    <Card className={cn(\"w-full text-content\", className)}>\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"text-sm font-medium force-normal-wrap\">Spending Intensity</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-3 text-content\">\n        <div className=\"grid grid-cols-2 gap-2\">\n          {legendItems.map((item) => (\n            <div key={item.intensity} className=\"flex items-center gap-2\">\n              <div \n                className={cn(\n                  \"w-4 h-4 rounded border border-muted/60\",\n                  item.color\n                )}\n                aria-hidden=\"true\"\n              />\n              <div className=\"flex-1 min-w-0 w-full\">\n                <div className=\"text-xs font-medium text-foreground w-full force-normal-wrap\">\n                  {item.label}\n                </div>\n                <div className=\"text-xs text-muted-foreground font-mono w-full force-normal-wrap\">\n                  {item.range}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"pt-2 border-t border-muted/20\">\n          <p className=\"text-xs text-muted-foreground w-full force-normal-wrap\">\n            Click any day to view detailed transactions\n          </p>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AALA;;;;;AAkBO,SAAS,eAAe,KAA6C;QAA7C,EAAE,SAAS,EAAE,SAAS,EAAuB,GAA7C;IAC7B,MAAM,cAAc;QAClB;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO;QACT;QACA;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO,AAAC,QAAkE,OAA3D,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM;QACzE;QACA;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO,AAAC,GAAkE,OAAhE,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM,IAAG,OAAgE,OAA3D,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM;QACpI;QACA;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO,AAAC,GAAkE,OAAhE,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM,IAAG,OAAgE,OAA3D,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM;QACpI;QACA;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO,AAAC,GAAkE,OAAhE,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM,IAAG,OAAgE,OAA3D,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM;QACpI;QACA;YACE,WAAW;YACX,OAAO;YACP,OAAO;YACP,OAAO,AAAC,GAA6D,OAA3D,IAAA,sIAAc,EAAC,UAAU,GAAG,EAAE,OAAO;gBAAE,WAAW;YAAM,IAAG;QACvE;KACD;IAED,qBACE,6LAAC,2IAAI;QAAC,WAAW,IAAA,4HAAE,EAAC,uBAAuB;;0BACzC,6LAAC,iJAAU;gBAAC,WAAU;0BACpB,cAAA,6LAAC,gJAAS;oBAAC,WAAU;8BAAwC;;;;;;;;;;;0BAE/D,6LAAC,kJAAW;gBAAC,WAAU;;kCACrB,6LAAC;wBAAI,WAAU;kCACZ,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;gCAAyB,WAAU;;kDAClC,6LAAC;wCACC,WAAW,IAAA,4HAAE,EACX,0CACA,KAAK,KAAK;wCAEZ,eAAY;;;;;;kDAEd,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACZ,KAAK,KAAK;;;;;;0DAEb,6LAAC;gDAAI,WAAU;0DACZ,KAAK,KAAK;;;;;;;;;;;;;+BAbP,KAAK,SAAS;;;;;;;;;;kCAoB5B,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAE,WAAU;sCAAyD;;;;;;;;;;;;;;;;;;;;;;;AAOhF;KA5EgB","debugId":null}},
    {"offset": {"line": 2773, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/calendar/index.ts"],"sourcesContent":["export { CalendarGrid } from './CalendarGrid'\nexport { CalendarHeader } from './CalendarHeader'\nexport { CalendarSummary } from './CalendarSummary'\nexport { SpendingLegend } from './SpendingLegend'\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 2789, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/ui/typography.tsx"],"sourcesContent":["\"use client\"\n\nimport React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface HeadingProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"\n  size?: \"xs\" | \"sm\" | \"base\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\" | \"5xl\"\n  weight?: \"normal\" | \"medium\" | \"semibold\" | \"bold\"\n  balance?: boolean\n  children: React.ReactNode\n}\n\nexport function Heading({\n  as: Component = \"h2\",\n  size = \"2xl\",\n  weight = \"semibold\",\n  balance = true,\n  className,\n  children,\n  ...props\n}: HeadingProps) {\n  const sizeClasses = {\n    xs: \"text-xs\",\n    sm: \"text-sm\",\n    base: \"text-base\",\n    lg: \"text-lg\",\n    xl: \"text-xl\",\n    \"2xl\": \"text-2xl md:text-3xl\",\n    \"3xl\": \"text-3xl md:text-4xl\",\n    \"4xl\": \"text-4xl md:text-5xl\",\n    \"5xl\": \"text-5xl md:text-6xl\"\n  }\n\n  const weightClasses = {\n    normal: \"font-normal\",\n    medium: \"font-medium\",\n    semibold: \"font-semibold\",\n    bold: \"font-bold\"\n  }\n\n  return (\n    <Component\n      className={cn(\n        sizeClasses[size],\n        weightClasses[weight],\n        balance && \"text-balance\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </Component>\n  )\n}\n\ninterface TextProps extends React.HTMLAttributes<HTMLElement> {\n  as?: \"p\" | \"span\" | \"div\" | \"label\"\n  size?: \"xs\" | \"sm\" | \"base\" | \"lg\"\n  weight?: \"normal\" | \"medium\" | \"semibold\"\n  color?: \"default\" | \"muted\" | \"primary\" | \"destructive\"\n  pretty?: boolean\n  hyphens?: boolean\n  truncate?: boolean\n  children: React.ReactNode\n}\n\nexport function Text({\n  as: Component = \"p\",\n  size = \"base\",\n  weight = \"normal\",\n  color = \"default\",\n  pretty = false,\n  hyphens = false,\n  truncate = false,\n  className,\n  children,\n  ...props\n}: TextProps) {\n  const sizeClasses = {\n    xs: \"text-xs\",\n    sm: \"text-sm md:text-base\",\n    base: \"text-sm md:text-base\",\n    lg: \"text-base md:text-lg\"\n  }\n\n  const weightClasses = {\n    normal: \"font-normal\",\n    medium: \"font-medium\",\n    semibold: \"font-semibold\"\n  }\n\n  const colorClasses = {\n    default: \"text-foreground\",\n    muted: \"text-muted-foreground\",\n    primary: \"text-primary\",\n    destructive: \"text-destructive\"\n  }\n\n  return (\n    <Component\n      className={cn(\n        sizeClasses[size],\n        weightClasses[weight],\n        colorClasses[color],\n        pretty && \"text-pretty\",\n        hyphens && \"text-hyphens\",\n        truncate && \"truncate-safe\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </Component>\n  )\n}\n\ninterface ProseProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode\n}\n\nexport function Prose({ className, children, ...props }: ProseProps) {\n  return (\n    <div\n      className={cn(\n        \"prose-optimal text-pretty leading-relaxed\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\ninterface MoneyProps extends React.HTMLAttributes<HTMLSpanElement> {\n  amount: number\n  currency?: string\n  showCents?: boolean\n  className?: string\n}\n\nexport function Money({ \n  amount, \n  currency = \"USD\", \n  showCents = false, \n  className,\n  ...props \n}: MoneyProps) {\n  const formatted = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: showCents ? 2 : 0,\n    maximumFractionDigits: showCents ? 2 : 0,\n  }).format(amount)\n\n  return (\n    <span\n      className={cn(\n        \"tabular-nums font-mono\",\n        className\n      )}\n      {...props}\n    >\n      {formatted}\n    </span>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;AAHA;;;AAaO,SAAS,QAAQ,KAQT;QARS,EACtB,IAAI,YAAY,IAAI,EACpB,OAAO,KAAK,EACZ,SAAS,UAAU,EACnB,UAAU,IAAI,EACd,SAAS,EACT,QAAQ,EACR,GAAG,OACU,GARS;IAStB,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,MAAM;QACN,IAAI;QACJ,IAAI;QACJ,OAAO;QACP,OAAO;QACP,OAAO;QACP,OAAO;IACT;IAEA,MAAM,gBAAgB;QACpB,QAAQ;QACR,QAAQ;QACR,UAAU;QACV,MAAM;IACR;IAEA,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,WAAW,CAAC,KAAK,EACjB,aAAa,CAAC,OAAO,EACrB,WAAW,gBACX;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;KAzCgB;AAsDT,SAAS,KAAK,KAWT;QAXS,EACnB,IAAI,YAAY,GAAG,EACnB,OAAO,MAAM,EACb,SAAS,QAAQ,EACjB,QAAQ,SAAS,EACjB,SAAS,KAAK,EACd,UAAU,KAAK,EACf,WAAW,KAAK,EAChB,SAAS,EACT,QAAQ,EACR,GAAG,OACO,GAXS;IAYnB,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,MAAM;QACN,IAAI;IACN;IAEA,MAAM,gBAAgB;QACpB,QAAQ;QACR,QAAQ;QACR,UAAU;IACZ;IAEA,MAAM,eAAe;QACnB,SAAS;QACT,OAAO;QACP,SAAS;QACT,aAAa;IACf;IAEA,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,WAAW,CAAC,KAAK,EACjB,aAAa,CAAC,OAAO,EACrB,YAAY,CAAC,MAAM,EACnB,UAAU,eACV,WAAW,gBACX,YAAY,iBACZ;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;MAhDgB;AAsDT,SAAS,MAAM,KAA6C;QAA7C,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAmB,GAA7C;IACpB,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,6CACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;MAZgB;AAqBT,SAAS,MAAM,KAMT;QANS,EACpB,MAAM,EACN,WAAW,KAAK,EAChB,YAAY,KAAK,EACjB,SAAS,EACT,GAAG,OACQ,GANS;IAOpB,MAAM,YAAY,IAAI,KAAK,YAAY,CAAC,SAAS;QAC/C,OAAO;QACP;QACA,uBAAuB,YAAY,IAAI;QACvC,uBAAuB,YAAY,IAAI;IACzC,GAAG,MAAM,CAAC;IAEV,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,0BACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;MAzBgB","debugId":null}},
    {"offset": {"line": 2908, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/app/calendar/page.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useMemo, Suspense } from \"react\"\n\nexport const dynamic = 'force-dynamic'\nimport { motion } from \"framer-motion\"\nimport { useRouter, useSearchParams } from \"next/navigation\"\nimport { useMonthMetrics } from \"@/lib/hooks\"\nimport { \n  CalendarGrid,\n  CalendarHeader,\n  CalendarSummary,\n  SpendingLegend\n} from \"@/components/calendar\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Heading, Text } from \"@/components/ui/typography\"\nimport { AlertCircle } from \"lucide-react\"\n\nfunction CalendarContent() {\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  const month = searchParams.get('month') || '2025-08'\n  const [currentDate, setCurrentDate] = useState(new Date())\n  const { data: monthMetrics, isLoading, error } = useMonthMetrics(month)\n\n  // Generate mock daily spending data if not available\n  const dailySpendingData = useMemo(() => {\n    if (!monthMetrics?.data) return []\n    \n    const year = currentDate.getFullYear()\n    const month = currentDate.getMonth()\n    const daysInMonth = new Date(year, month + 1, 0).getDate()\n    \n    // Generate realistic daily spending data\n    const data = []\n    const baseAmount = monthMetrics.data.spendingPatterns.averageDailySpending.amount\n    \n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(year, month, day)\n      const dateString = date.toISOString().split('T')[0]\n      \n      // Add some realistic variation\n      const variation = (Math.sin(day * 0.3) * 0.4 + Math.random() * 0.6 - 0.3)\n      const isWeekend = date.getDay() === 0 || date.getDay() === 6\n      const weekendMultiplier = isWeekend ? 1.3 : 0.8\n      \n      const amount = Math.max(0, baseAmount * (1 + variation) * weekendMultiplier)\n      \n      data.push({\n        date: dateString,\n        totalSpending: {\n          amount: amount,\n          currency: \"USD\",\n          symbol: \"$\"\n        },\n        transactionCount: Math.floor(Math.random() * 5) + 1,\n        categories: [\n          {\n            category: \"food\" as const,\n            amount: { amount: amount * 0.4, currency: \"USD\", symbol: \"$\" },\n            percentage: 40\n          },\n          {\n            category: \"transportation\" as const,\n            amount: { amount: amount * 0.3, currency: \"USD\", symbol: \"$\" },\n            percentage: 30\n          },\n          {\n            category: \"entertainment\" as const,\n            amount: { amount: amount * 0.3, currency: \"USD\", symbol: \"$\" },\n            percentage: 30\n          }\n        ]\n      })\n    }\n    \n    return data\n  }, [monthMetrics?.data, currentDate])\n\n  const handleDayClick = (date: string) => {\n    // Deep link to transactions page with date filter\n    router.push(`/transactions?from=${date}&to=${date}`)\n  }\n\n  const handlePreviousMonth = () => {\n    setCurrentDate(prev => {\n      const newDate = new Date(prev)\n      newDate.setMonth(prev.getMonth() - 1)\n      return newDate\n    })\n  }\n\n  const handleNextMonth = () => {\n    setCurrentDate(prev => {\n      const newDate = new Date(prev)\n      newDate.setMonth(prev.getMonth() + 1)\n      return newDate\n    })\n  }\n\n  const handleToday = () => {\n    setCurrentDate(new Date())\n  }\n\n  if (error) {\n    return (\n      <Card className=\"card-standard\">\n        <CardContent className=\"p-12 text-center\">\n          <AlertCircle className=\"h-12 w-12 text-destructive mx-auto mb-4\" />\n          <Heading as=\"h2\" size=\"xl\" className=\"mb-2\">Error Loading Calendar</Heading>\n          <Text color=\"muted\">\n            There was a problem loading your calendar data. Please try again.\n          </Text>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  if (isLoading) {\n    return (\n      <main className=\"container-5xl py-8\">\n        <div className=\"space-y-6\">\n          <div className=\"h-8 bg-muted animate-pulse rounded w-64\" />\n          <div className=\"h-32 bg-muted animate-pulse rounded\" />\n          <div className=\"grid grid-cols-7 gap-px bg-muted/20 rounded-md overflow-hidden\">\n            {Array.from({ length: 35 }).map((_, i) => (\n              <div key={i} className=\"aspect-square bg-muted/10 animate-pulse\" />\n            ))}\n          </div>\n        </div>\n      </main>\n    )\n  }\n\n  // Create mock MonthMetrics with daily data\n  const mockMonthMetrics = {\n    month: currentDate.toISOString().slice(0, 7), // YYYY-MM format\n    totalIncome: { amount: 5000, currency: \"USD\", symbol: \"$\" },\n    totalExpenses: { amount: 3000, currency: \"USD\", symbol: \"$\" },\n    netIncome: { amount: 2000, currency: \"USD\", symbol: \"$\" },\n    savingsRate: 40,\n    categoryBreakdown: [],\n    spendingPatterns: {\n      averageDailySpending: { amount: 100, currency: \"USD\", symbol: \"$\" },\n      highestSpendingDay: { date: \"2024-01-15\", amount: { amount: 500, currency: \"USD\", symbol: \"$\" } },\n      mostFrequentCategory: \"food\" as const,\n      mostExpensiveCategory: \"housing\" as const\n    },\n    budgetComparison: [],\n    trends: {\n      weekOverWeek: { incomeChange: 5, expenseChange: -2 },\n      monthOverMonth: { incomeChange: 10, expenseChange: 3 }\n    },\n    alerts: [],\n    generatedAt: new Date().toISOString(),\n    trend_daily: dailySpendingData\n  }\n\n  return (\n    <main className=\"min-h-screen\">\n      <div className=\"max-w-[1264px] mx-auto px-6 py-12\">\n        <div className=\"mb-8\">\n          <Heading as=\"h1\" size=\"4xl\" className=\"mb-4 text-balance\">Spending Heatmap</Heading>\n          <Text size=\"lg\" color=\"muted\" className=\"max-w-2xl\">\n            Visualize your daily spending patterns and trends with an interactive calendar\n          </Text>\n        </div>\n\n        {/* Month header with mini legend */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n          className=\"mb-8\"\n        >\n          <CalendarHeader\n            currentDate={currentDate}\n            onPreviousMonth={handlePreviousMonth}\n            onNextMonth={handleNextMonth}\n            onToday={handleToday}\n          />\n        </motion.div>\n\n        {/* Calendar Grid 7×5/6 */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3, delay: 0.1 }}\n          className=\"mb-8\"\n        >\n          <Card className=\"card-elevated\">\n            <CardContent className=\"p-6\">\n              <CalendarGrid\n                monthMetrics={mockMonthMetrics}\n                currentDate={currentDate}\n                onDayClick={handleDayClick}\n              />\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Summary Stats */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3, delay: 0.2 }}\n        >\n          <CalendarSummary\n            monthMetrics={mockMonthMetrics}\n          />\n        </motion.div>\n      </div>\n    </main>\n  )\n}\n\nexport default function CalendarPage() {\n  return (\n    <Suspense fallback={\n      <main className=\"container-5xl py-8\">\n        <div className=\"space-y-6\">\n          <div className=\"h-8 bg-muted animate-pulse rounded w-64\" />\n          <div className=\"h-32 bg-muted animate-pulse rounded\" />\n          <div className=\"grid grid-cols-7 gap-px bg-muted/20 rounded-md overflow-hidden\">\n            {Array.from({ length: 35 }).map((_, i) => (\n              <div key={i} className=\"aspect-square bg-muted/10 animate-pulse\" />\n            ))}\n          </div>\n        </div>\n      </main>\n    }>\n      <CalendarContent />\n    </Suspense>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}