{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/ui/typography.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface HeadingProps extends React.HTMLAttributes<HTMLHeadingElement> {\r\n  as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"\r\n  size?: \"xs\" | \"sm\" | \"base\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\" | \"5xl\"\r\n  weight?: \"normal\" | \"medium\" | \"semibold\" | \"bold\"\r\n  balance?: boolean\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function Heading({\r\n  as: Component = \"h2\",\r\n  size = \"2xl\",\r\n  weight = \"semibold\",\r\n  balance = true,\r\n  className,\r\n  children,\r\n  ...props\r\n}: HeadingProps) {\r\n  const sizeClasses = {\r\n    xs: \"text-xs\",\r\n    sm: \"text-sm\",\r\n    base: \"text-base\",\r\n    lg: \"text-lg\",\r\n    xl: \"text-xl\",\r\n    \"2xl\": \"text-2xl md:text-3xl\",\r\n    \"3xl\": \"text-3xl md:text-4xl\",\r\n    \"4xl\": \"text-4xl md:text-5xl\",\r\n    \"5xl\": \"text-5xl md:text-6xl\"\r\n  }\r\n\r\n  const weightClasses = {\r\n    normal: \"font-normal\",\r\n    medium: \"font-medium\",\r\n    semibold: \"font-semibold\",\r\n    bold: \"font-bold\"\r\n  }\r\n\r\n  return (\r\n    <Component\r\n      className={cn(\r\n        sizeClasses[size],\r\n        weightClasses[weight],\r\n        balance && \"text-balance\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Component>\r\n  )\r\n}\r\n\r\ninterface TextProps extends React.HTMLAttributes<HTMLElement> {\r\n  as?: \"p\" | \"span\" | \"div\" | \"label\"\r\n  size?: \"xs\" | \"sm\" | \"base\" | \"lg\"\r\n  weight?: \"normal\" | \"medium\" | \"semibold\"\r\n  color?: \"default\" | \"muted\" | \"primary\" | \"destructive\"\r\n  pretty?: boolean\r\n  hyphens?: boolean\r\n  truncate?: boolean\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function Text({\r\n  as: Component = \"p\",\r\n  size = \"base\",\r\n  weight = \"normal\",\r\n  color = \"default\",\r\n  pretty = false,\r\n  hyphens = false,\r\n  truncate = false,\r\n  className,\r\n  children,\r\n  ...props\r\n}: TextProps) {\r\n  const sizeClasses = {\r\n    xs: \"text-xs\",\r\n    sm: \"text-sm md:text-base\",\r\n    base: \"text-sm md:text-base\",\r\n    lg: \"text-base md:text-lg\"\r\n  }\r\n\r\n  const weightClasses = {\r\n    normal: \"font-normal\",\r\n    medium: \"font-medium\",\r\n    semibold: \"font-semibold\"\r\n  }\r\n\r\n  const colorClasses = {\r\n    default: \"text-foreground\",\r\n    muted: \"text-muted-foreground\",\r\n    primary: \"text-primary\",\r\n    destructive: \"text-destructive\"\r\n  }\r\n\r\n  return (\r\n    <Component\r\n      className={cn(\r\n        sizeClasses[size],\r\n        weightClasses[weight],\r\n        colorClasses[color],\r\n        pretty && \"text-pretty\",\r\n        hyphens && \"text-hyphens\",\r\n        truncate && \"truncate-safe\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Component>\r\n  )\r\n}\r\n\r\ninterface ProseProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function Prose({ className, children, ...props }: ProseProps) {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"prose-optimal text-pretty leading-relaxed\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface MoneyProps extends React.HTMLAttributes<HTMLSpanElement> {\r\n  amount: number\r\n  currency?: string\r\n  showCents?: boolean\r\n  className?: string\r\n}\r\n\r\nexport function Money({ \r\n  amount, \r\n  currency = \"USD\", \r\n  showCents = false, \r\n  className,\r\n  ...props \r\n}: MoneyProps) {\r\n  const formatted = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency,\r\n    minimumFractionDigits: showCents ? 2 : 0,\r\n    maximumFractionDigits: showCents ? 2 : 0,\r\n  }).format(amount)\r\n\r\n  return (\r\n    <span\r\n      className={cn(\r\n        \"tabular-nums font-mono\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {formatted}\r\n    </span>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;AAHA;;;AAaO,SAAS,QAAQ,KAQT;QARS,EACtB,IAAI,YAAY,IAAI,EACpB,OAAO,KAAK,EACZ,SAAS,UAAU,EACnB,UAAU,IAAI,EACd,SAAS,EACT,QAAQ,EACR,GAAG,OACU,GARS;IAStB,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,MAAM;QACN,IAAI;QACJ,IAAI;QACJ,OAAO;QACP,OAAO;QACP,OAAO;QACP,OAAO;IACT;IAEA,MAAM,gBAAgB;QACpB,QAAQ;QACR,QAAQ;QACR,UAAU;QACV,MAAM;IACR;IAEA,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,WAAW,CAAC,KAAK,EACjB,aAAa,CAAC,OAAO,EACrB,WAAW,gBACX;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;KAzCgB;AAsDT,SAAS,KAAK,KAWT;QAXS,EACnB,IAAI,YAAY,GAAG,EACnB,OAAO,MAAM,EACb,SAAS,QAAQ,EACjB,QAAQ,SAAS,EACjB,SAAS,KAAK,EACd,UAAU,KAAK,EACf,WAAW,KAAK,EAChB,SAAS,EACT,QAAQ,EACR,GAAG,OACO,GAXS;IAYnB,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,MAAM;QACN,IAAI;IACN;IAEA,MAAM,gBAAgB;QACpB,QAAQ;QACR,QAAQ;QACR,UAAU;IACZ;IAEA,MAAM,eAAe;QACnB,SAAS;QACT,OAAO;QACP,SAAS;QACT,aAAa;IACf;IAEA,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,WAAW,CAAC,KAAK,EACjB,aAAa,CAAC,OAAO,EACrB,YAAY,CAAC,MAAM,EACnB,UAAU,eACV,WAAW,gBACX,YAAY,iBACZ;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;MAhDgB;AAsDT,SAAS,MAAM,KAA6C;QAA7C,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAmB,GAA7C;IACpB,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,6CACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;MAZgB;AAqBT,SAAS,MAAM,KAMT;QANS,EACpB,MAAM,EACN,WAAW,KAAK,EAChB,YAAY,KAAK,EACjB,SAAS,EACT,GAAG,OACQ,GANS;IAOpB,MAAM,YAAY,IAAI,KAAK,YAAY,CAAC,SAAS;QAC/C,OAAO;QACP;QACA,uBAAuB,YAAY,IAAI;QACvC,uBAAuB,YAAY,IAAI;IACzC,GAAG,MAAM,CAAC;IAEV,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,0BACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;MAzBgB","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/mock.ts"],"sourcesContent":["import { \r\n  Transaction, \r\n  MonthMetrics, \r\n  CopilotAdvice, \r\n  TransactionCategory,\r\n  TransactionType,\r\n  PaymentMethod,\r\n  TransactionQueryParams\r\n} from \"./types\"\r\n\r\n// ============================================================================\r\n// MOCK DATA GENERATORS\r\n// ============================================================================\r\n\r\n/**\r\n * Generate realistic student transactions for a given month\r\n * Simulates typical student spending patterns and income sources\r\n */\r\nexport function generateStudentTransactions(month: string): Transaction[] {\r\n  const [year, monthNum] = month.split('-').map(Number)\r\n  const endDate = new Date(year, monthNum, 0)\r\n  const daysInMonth = endDate.getDate()\r\n  \r\n  const transactions: Transaction[] = []\r\n  let transactionId = 1\r\n  \r\n  // Helper to create a transaction\r\n  const createTransaction = (\r\n    date: Date,\r\n    description: string,\r\n    amountCents: number,\r\n    category: TransactionCategory,\r\n    type: TransactionType,\r\n    paymentMethod: PaymentMethod,\r\n    merchant?: string,\r\n    tags: string[] = []\r\n  ): Transaction => ({\r\n    id: `txn_${transactionId++}`,\r\n    date: date.toISOString(),\r\n    description,\r\n    amount: { amount: amountCents, currency: \"USD\", symbol: \"$\" },\r\n    category,\r\n    type,\r\n    status: Math.random() > 0.1 ? \"cleared\" : \"pending\",\r\n    paymentMethod,\r\n    accountId: \"acc_student_checking\",\r\n    merchant,\r\n    location: Math.random() > 0.7 ? {\r\n      name: merchant || \"Unknown Location\",\r\n      address: \"123 University Ave, College Town, ST 12345\"\r\n    } : undefined,\r\n    tags,\r\n    notes: Math.random() > 0.8 ? \"Student transaction\" : undefined,\r\n    metadata: {\r\n      source: \"mock_data\",\r\n      generated: true\r\n    },\r\n    createdAt: date.toISOString(),\r\n    updatedAt: date.toISOString()\r\n  })\r\n  \r\n  // Generate transactions for each day\r\n  for (let day = 1; day <= daysInMonth; day++) {\r\n    const currentDate = new Date(year, monthNum - 1, day)\r\n    const dayOfWeek = currentDate.getDay()\r\n    const isWeekend = dayOfWeek === 0 || dayOfWeek === 6\r\n    \r\n    // Income transactions (bi-weekly paychecks, occasional refunds)\r\n    if (day === 1 || day === 15) {\r\n      // Bi-weekly paycheck from part-time job\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Part-time job paycheck\",\r\n        120000, // $1,200\r\n        \"income\",\r\n        \"income\",\r\n        \"bank_transfer\",\r\n        \"Campus Dining Services\"\r\n      ))\r\n    }\r\n    \r\n    if (day === 3 && Math.random() > 0.7) {\r\n      // Occasional refund\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Textbook refund\",\r\n        Math.floor(Math.random() * 50000) + 20000, // $200-700\r\n        \"refund\",\r\n        \"income\",\r\n        \"bank_transfer\",\r\n        \"University Bookstore\"\r\n      ))\r\n    }\r\n    \r\n    // Daily expenses\r\n    const dailyExpenseCount = isWeekend ? \r\n      Math.floor(Math.random() * 3) + 1 : // 1-3 on weekends\r\n      Math.floor(Math.random() * 2) + 1   // 1-2 on weekdays\r\n    \r\n    for (let i = 0; i < dailyExpenseCount; i++) {\r\n      const expenseTypes = getDailyExpenses(day, isWeekend)\r\n      const expense = expenseTypes[Math.floor(Math.random() * expenseTypes.length)]\r\n      \r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        expense.description,\r\n        expense.amount,\r\n        expense.category,\r\n        \"expense\",\r\n        expense.paymentMethod,\r\n        expense.merchant,\r\n        expense.tags\r\n      ))\r\n    }\r\n    \r\n    // Weekly recurring expenses\r\n    if (day % 7 === 0) {\r\n      // Weekly grocery shopping\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Weekly grocery shopping\",\r\n        Math.floor(Math.random() * 8000) + 4000, // $40-120\r\n        \"food\",\r\n        \"expense\",\r\n        \"debit_card\",\r\n        \"Campus Market\",\r\n        [\"groceries\", \"weekly\"]\r\n      ))\r\n    }\r\n    \r\n    // Monthly recurring expenses\r\n    if (day === 1) {\r\n      // Rent\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Monthly rent\",\r\n        120000, // $1,200\r\n        \"housing\",\r\n        \"expense\",\r\n        \"bank_transfer\",\r\n        \"University Housing\",\r\n        [\"rent\", \"monthly\"]\r\n      ))\r\n      \r\n      // Utilities\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Utilities\",\r\n        Math.floor(Math.random() * 3000) + 2000, // $20-50\r\n        \"utilities\",\r\n        \"expense\",\r\n        \"debit_card\",\r\n        \"Campus Utilities\",\r\n        [\"utilities\", \"monthly\"]\r\n      ))\r\n    }\r\n    \r\n    if (day === 5) {\r\n      // Tuition payment (if applicable)\r\n      if (Math.random() > 0.3) {\r\n        transactions.push(createTransaction(\r\n          currentDate,\r\n          \"Tuition payment\",\r\n          Math.floor(Math.random() * 200000) + 300000, // $3,000-5,000\r\n          \"tuition\",\r\n          \"expense\",\r\n          \"bank_transfer\",\r\n          \"University Bursar\",\r\n          [\"tuition\", \"education\"]\r\n        ))\r\n      }\r\n    }\r\n  }\r\n  \r\n  return transactions.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\r\n}\r\n\r\n/**\r\n * Get daily expense patterns based on day and weekend status\r\n */\r\nfunction getDailyExpenses(day: number, isWeekend: boolean): Array<{\r\n  description: string\r\n  amount: number\r\n  category: TransactionCategory\r\n  paymentMethod: PaymentMethod\r\n  merchant?: string\r\n  tags: string[]\r\n}> {\r\n  const baseExpenses = [\r\n    // Food expenses\r\n    {\r\n      description: \"Coffee\",\r\n      amount: Math.floor(Math.random() * 300) + 200, // $2-5\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Coffee Shop\",\r\n      tags: [\"coffee\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Lunch\",\r\n      amount: Math.floor(Math.random() * 800) + 500, // $5-13\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Dining Hall\",\r\n      tags: [\"lunch\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Dinner\",\r\n      amount: Math.floor(Math.random() * 1000) + 800, // $8-18\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Dining Hall\",\r\n      tags: [\"dinner\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Snacks\",\r\n      amount: Math.floor(Math.random() * 400) + 200, // $2-6\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Store\",\r\n      tags: [\"snacks\", \"daily\"]\r\n    },\r\n    \r\n    // Transportation\r\n    {\r\n      description: \"Bus fare\",\r\n      amount: 250, // $2.50\r\n      category: \"transportation\" as TransactionCategory,\r\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\r\n      merchant: \"City Transit\",\r\n      tags: [\"transport\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Uber ride\",\r\n      amount: Math.floor(Math.random() * 1500) + 800, // $8-23\r\n      category: \"transportation\" as TransactionCategory,\r\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\r\n      merchant: \"Uber\",\r\n      tags: [\"transport\", \"ride_share\"]\r\n    },\r\n    \r\n    // Entertainment\r\n    {\r\n      description: \"Movie ticket\",\r\n      amount: Math.floor(Math.random() * 500) + 800, // $8-13\r\n      category: \"entertainment\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Theater\",\r\n      tags: [\"entertainment\", \"movies\"]\r\n    },\r\n    {\r\n      description: \"Streaming subscription\",\r\n      amount: 1500, // $15\r\n      category: \"entertainment\" as TransactionCategory,\r\n      paymentMethod: \"credit_card\" as PaymentMethod,\r\n      merchant: \"Netflix\",\r\n      tags: [\"entertainment\", \"subscription\"]\r\n    },\r\n    \r\n    // Shopping\r\n    {\r\n      description: \"Textbook\",\r\n      amount: Math.floor(Math.random() * 15000) + 5000, // $50-200\r\n      category: \"books\" as TransactionCategory,\r\n      paymentMethod: \"credit_card\" as PaymentMethod,\r\n      merchant: \"University Bookstore\",\r\n      tags: [\"books\", \"education\"]\r\n    },\r\n    {\r\n      description: \"School supplies\",\r\n      amount: Math.floor(Math.random() * 2000) + 500, // $5-25\r\n      category: \"shopping\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Store\",\r\n      tags: [\"supplies\", \"education\"]\r\n    },\r\n    {\r\n      description: \"Clothing\",\r\n      amount: Math.floor(Math.random() * 8000) + 2000, // $20-100\r\n      category: \"shopping\" as TransactionCategory,\r\n      paymentMethod: \"credit_card\" as PaymentMethod,\r\n      merchant: \"Campus Clothing Store\",\r\n      tags: [\"clothing\", \"shopping\"]\r\n    },\r\n    \r\n    // Healthcare\r\n    {\r\n      description: \"Prescription\",\r\n      amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\r\n      category: \"healthcare\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Pharmacy\",\r\n      tags: [\"healthcare\", \"prescription\"]\r\n    },\r\n    {\r\n      description: \"Doctor visit\",\r\n      amount: Math.floor(Math.random() * 5000) + 2000, // $20-70\r\n      category: \"healthcare\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Health Center\",\r\n      tags: [\"healthcare\", \"medical\"]\r\n    }\r\n  ]\r\n  \r\n  if (isWeekend) {\r\n    // Weekend-specific expenses\r\n    baseExpenses.push(\r\n      {\r\n        description: \"Weekend brunch\",\r\n        amount: Math.floor(Math.random() * 1200) + 800, // $8-20\r\n        category: \"food\" as TransactionCategory,\r\n        paymentMethod: \"debit_card\" as PaymentMethod,\r\n        merchant: \"Campus Brunch Spot\",\r\n        tags: [\"food\", \"weekend\", \"brunch\"]\r\n      },\r\n      {\r\n        description: \"Party supplies\",\r\n        amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\r\n        category: \"entertainment\" as TransactionCategory,\r\n        paymentMethod: \"debit_card\" as PaymentMethod,\r\n        merchant: \"Campus Store\",\r\n        tags: [\"entertainment\", \"party\", \"weekend\"]\r\n      }\r\n    )\r\n  }\r\n  \r\n  return baseExpenses\r\n}\r\n\r\n/**\r\n * Generate monthly metrics based on transactions\r\n */\r\nexport function generateMonthMetrics(month: string, transactions: Transaction[]): MonthMetrics {\r\n  const incomeTransactions = transactions.filter(t => t.type === \"income\")\r\n  const expenseTransactions = transactions.filter(t => t.type === \"expense\")\r\n  \r\n  const totalIncome = incomeTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\r\n  const totalExpenses = expenseTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\r\n  const netIncome = totalIncome - totalExpenses\r\n  const savingsRate = totalIncome > 0 ? (netIncome / totalIncome) * 100 : 0\r\n  \r\n  // Category breakdown\r\n  const categoryMap = new Map<TransactionCategory, { amount: number; count: number }>()\r\n  expenseTransactions.forEach(t => {\r\n    const existing = categoryMap.get(t.category) || { amount: 0, count: 0 }\r\n    categoryMap.set(t.category, {\r\n      amount: existing.amount + t.amount.amount,\r\n      count: existing.count + 1\r\n    })\r\n  })\r\n  \r\n  const categoryBreakdown = Array.from(categoryMap.entries()).map(([category, data]) => ({\r\n    category,\r\n    amount: { amount: data.amount, currency: \"USD\", symbol: \"$\" },\r\n    percentage: totalExpenses > 0 ? (data.amount / totalExpenses) * 100 : 0,\r\n    transactionCount: data.count\r\n  })).sort((a, b) => b.amount.amount - a.amount.amount)\r\n  \r\n  // Spending patterns\r\n  const dailySpending = new Map<string, number>()\r\n  expenseTransactions.forEach(t => {\r\n    const date = t.date.split('T')[0]\r\n    dailySpending.set(date, (dailySpending.get(date) || 0) + t.amount.amount)\r\n  })\r\n  \r\n  const averageDailySpending = dailySpending.size > 0 ? \r\n    Array.from(dailySpending.values()).reduce((sum, amount) => sum + amount, 0) / dailySpending.size : 0\r\n  \r\n  const highestSpendingDay = Array.from(dailySpending.entries())\r\n    .sort((a, b) => b[1] - a[1])[0] || [\"\", 0]\r\n  \r\n  const mostFrequentCategory = categoryBreakdown\r\n    .sort((a, b) => b.transactionCount - a.transactionCount)[0]?.category || \"other\"\r\n  \r\n  const mostExpensiveCategory = categoryBreakdown[0]?.category || \"other\"\r\n  \r\n  // Generate alerts\r\n  const alerts = []\r\n  if (savingsRate < 10) {\r\n    alerts.push({\r\n      type: \"goal_missed\" as const,\r\n      category: \"general\" as TransactionCategory,\r\n      message: \"Your savings rate is below 10%. Consider reducing discretionary spending.\",\r\n      severity: \"medium\" as const\r\n    })\r\n  }\r\n  \r\n  if (totalExpenses > totalIncome * 0.9) {\r\n    alerts.push({\r\n      type: \"overspend\" as const,\r\n      category: \"general\" as TransactionCategory,\r\n      message: \"You're spending over 90% of your income. This leaves little room for savings.\",\r\n      severity: \"high\" as const\r\n    })\r\n  }\r\n  \r\n  const foodSpending = categoryBreakdown.find(c => c.category === \"food\")?.amount.amount || 0\r\n  if (foodSpending > totalExpenses * 0.4) {\r\n    alerts.push({\r\n      type: \"overspend\" as const,\r\n      category: \"food\" as TransactionCategory,\r\n      message: \"Food spending is over 40% of total expenses. Consider meal planning to reduce costs.\",\r\n      severity: \"medium\" as const\r\n    })\r\n  }\r\n  \r\n  return {\r\n    month,\r\n    totalIncome: { amount: totalIncome, currency: \"USD\", symbol: \"$\" },\r\n    totalExpenses: { amount: totalExpenses, currency: \"USD\", symbol: \"$\" },\r\n    netIncome: { amount: netIncome, currency: \"USD\", symbol: \"$\" },\r\n    savingsRate,\r\n    categoryBreakdown,\r\n    spendingPatterns: {\r\n      averageDailySpending: { amount: Math.round(averageDailySpending), currency: \"USD\", symbol: \"$\" },\r\n      highestSpendingDay: {\r\n        date: highestSpendingDay[0],\r\n        amount: { amount: highestSpendingDay[1], currency: \"USD\", symbol: \"$\" }\r\n      },\r\n      mostFrequentCategory,\r\n      mostExpensiveCategory\r\n    },\r\n    budgetComparison: [], // Would be populated with actual budget data\r\n    trends: {\r\n      weekOverWeek: {\r\n        incomeChange: Math.random() * 20 - 10, // -10% to +10%\r\n        expenseChange: Math.random() * 20 - 10\r\n      },\r\n      monthOverMonth: {\r\n        incomeChange: Math.random() * 30 - 15, // -15% to +15%\r\n        expenseChange: Math.random() * 30 - 15\r\n      }\r\n    },\r\n    alerts,\r\n    generatedAt: new Date().toISOString(),\r\n    trend_daily: [] // Will be populated by the calendar component\r\n  }\r\n}\r\n\r\n/**\r\n * Generate AI copilot advice based on metrics and transactions\r\n */\r\nexport function generateCopilotAdvice(\r\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\r\n  month: string,\r\n  metrics: MonthMetrics,\r\n  transactions: Transaction[]\r\n): CopilotAdvice {\r\n  const adviceTemplates = {\r\n    general: [\r\n      {\r\n        title: \"Financial Health Check\",\r\n        message: \"Your financial health looks good overall. Consider these small improvements to optimize your student budget.\",\r\n        priority: \"medium\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_1\",\r\n            title: \"Set up automatic savings\",\r\n            description: \"Transfer $50-100 to savings each month automatically\",\r\n            actionType: \"save_more\" as const,\r\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"easy\" as const,\r\n            timeframe: \"immediate\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    budget: [\r\n      {\r\n        title: \"Budget Optimization\",\r\n        message: \"Your current spending patterns show room for improvement. Here's how to optimize your budget.\",\r\n        priority: \"high\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_2\",\r\n            title: \"Reduce food spending\",\r\n            description: \"Meal prep on Sundays to cut food costs by 30%\",\r\n            actionType: \"reduce_spending\" as const,\r\n            estimatedImpact: { amount: 8000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"medium\" as const,\r\n            timeframe: \"short_term\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    savings: [\r\n      {\r\n        title: \"Boost Your Savings\",\r\n        message: \"Your savings rate could be improved. Here are some strategies to save more money.\",\r\n        priority: \"high\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_3\",\r\n            title: \"Open a high-yield savings account\",\r\n            description: \"Earn 4%+ interest on your emergency fund\",\r\n            actionType: \"save_more\" as const,\r\n            estimatedImpact: { amount: 2000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"easy\" as const,\r\n            timeframe: \"immediate\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    spending: [\r\n      {\r\n        title: \"Smart Spending Tips\",\r\n        message: \"You're spending more than necessary in some categories. Here's how to spend smarter.\",\r\n        priority: \"medium\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_4\",\r\n            title: \"Use student discounts\",\r\n            description: \"Take advantage of student pricing for software, transportation, and entertainment\",\r\n            actionType: \"reduce_spending\" as const,\r\n            estimatedImpact: { amount: 3000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"easy\" as const,\r\n            timeframe: \"immediate\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    debt: [\r\n      {\r\n        title: \"Debt Management\",\r\n        message: \"If you have student loans or credit card debt, here's how to manage it effectively.\",\r\n        priority: \"urgent\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_5\",\r\n            title: \"Pay more than minimum\",\r\n            description: \"Even $25 extra per month can save thousands in interest\",\r\n            actionType: \"pay_debt\" as const,\r\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"medium\" as const,\r\n            timeframe: \"long_term\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    investment: [\r\n      {\r\n        title: \"Start Investing Early\",\r\n        message: \"Even small amounts invested now can grow significantly over time.\",\r\n        priority: \"low\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_6\",\r\n            title: \"Open a Roth IRA\",\r\n            description: \"Start with $25/month in a low-cost index fund\",\r\n            actionType: \"save_more\" as const,\r\n            estimatedImpact: { amount: 10000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"hard\" as const,\r\n            timeframe: \"long_term\" as const\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n  \r\n  const template = adviceTemplates[mode][0]\r\n  const relevantTransactionIds = transactions\r\n    .filter(t => t.type === \"expense\")\r\n    .slice(0, 5)\r\n    .map(t => t.id)\r\n  \r\n  return {\r\n    id: `advice_${Date.now()}`,\r\n    mode,\r\n    title: template.title,\r\n    message: template.message,\r\n    priority: template.priority,\r\n    category: \"general\",\r\n    recommendations: template.recommendations,\r\n    insights: [\r\n      {\r\n        metric: \"Savings Rate\",\r\n        value: `${metrics.savingsRate.toFixed(1)}%`,\r\n        trend: metrics.savingsRate > 20 ? \"up\" : \"down\",\r\n        significance: \"high\"\r\n      },\r\n      {\r\n        metric: \"Monthly Expenses\",\r\n        value: `$${(metrics.totalExpenses.amount / 100).toFixed(0)}`,\r\n        trend: \"stable\",\r\n        significance: \"medium\"\r\n      }\r\n    ],\r\n    context: {\r\n      month,\r\n      relevantTransactions: relevantTransactionIds,\r\n      userProfile: {\r\n        studentType: \"undergraduate\",\r\n        incomeLevel: \"medium\",\r\n        spendingStyle: \"moderate\"\r\n      }\r\n    },\r\n    generatedAt: new Date().toISOString(),\r\n    expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString() // 7 days\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// MOCK DATA STORAGE\r\n// ============================================================================\r\n\r\n/**\r\n * In-memory storage for mock data\r\n * In production, this would be replaced with actual database calls\r\n */\r\nclass MockDataStore {\r\n  private transactions: Map<string, Transaction[]> = new Map()\r\n  private metrics: Map<string, MonthMetrics> = new Map()\r\n  private advice: Map<string, CopilotAdvice[]> = new Map()\r\n  \r\n  constructor() {\r\n    // Pre-generate data for current month and previous month\r\n    const currentMonth = new Date().toISOString().slice(0, 7)\r\n    const lastMonth = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().slice(0, 7)\r\n    \r\n    this.generateMonthData(currentMonth)\r\n    this.generateMonthData(lastMonth)\r\n    \r\n    // Also generate data for a few months back to ensure we have data\r\n    const monthsBack = ['2024-12', '2025-01', '2025-02', '2025-03', '2025-04', '2025-05', '2025-06', '2025-07', '2025-08']\r\n    monthsBack.forEach(month => this.generateMonthData(month))\r\n  }\r\n  \r\n  private generateMonthData(month: string) {\r\n    const transactions = generateStudentTransactions(month)\r\n    const metrics = generateMonthMetrics(month, transactions)\r\n    \r\n    this.transactions.set(month, transactions)\r\n    this.metrics.set(month, metrics)\r\n  }\r\n  \r\n  getTransactions(month: string): Transaction[] {\r\n    if (!this.transactions.has(month)) {\r\n      this.generateMonthData(month)\r\n    }\r\n    return this.transactions.get(month) || []\r\n  }\r\n  \r\n  getMetrics(month: string): MonthMetrics | null {\r\n    if (!this.metrics.has(month)) {\r\n      this.generateMonthData(month)\r\n    }\r\n    return this.metrics.get(month) || null\r\n  }\r\n  \r\n  getAdvice(mode: string, month: string): CopilotAdvice[] {\r\n    const key = `${mode}_${month}`\r\n    if (!this.advice.has(key)) {\r\n      const transactions = this.getTransactions(month)\r\n      const metrics = this.getMetrics(month)\r\n      if (metrics) {\r\n        const advice = generateCopilotAdvice(\r\n          mode as \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\r\n          month,\r\n          metrics,\r\n          transactions\r\n        )\r\n        this.advice.set(key, [advice])\r\n      }\r\n    }\r\n    return this.advice.get(key) || []\r\n  }\r\n}\r\n\r\n// Global mock data store instance\r\nexport const mockDataStore = new MockDataStore()\r\n\r\n// ============================================================================\r\n// UTILITY FUNCTIONS\r\n// ============================================================================\r\n\r\n/**\r\n * Filter transactions based on query parameters\r\n */\r\nexport function filterTransactions(\r\n  transactions: Transaction[],\r\n  params: TransactionQueryParams\r\n): Transaction[] {\r\n  let filtered = [...transactions]\r\n  \r\n  if (params.category) {\r\n    filtered = filtered.filter(t => t.category === params.category)\r\n  }\r\n  \r\n  if (params.type) {\r\n    filtered = filtered.filter(t => t.type === params.type)\r\n  }\r\n  \r\n  if (params.status) {\r\n    filtered = filtered.filter(t => t.status === params.status)\r\n  }\r\n  \r\n  if (params.minAmount !== undefined) {\r\n    filtered = filtered.filter(t => t.amount.amount >= params.minAmount!)\r\n  }\r\n  \r\n  if (params.maxAmount !== undefined) {\r\n    filtered = filtered.filter(t => t.amount.amount <= params.maxAmount!)\r\n  }\r\n  \r\n  if (params.search) {\r\n    const searchLower = params.search.toLowerCase()\r\n    filtered = filtered.filter(t => \r\n      t.description.toLowerCase().includes(searchLower) ||\r\n      t.merchant?.toLowerCase().includes(searchLower) ||\r\n      t.notes?.toLowerCase().includes(searchLower)\r\n    )\r\n  }\r\n  \r\n  if (params.tags && params.tags.length > 0) {\r\n    filtered = filtered.filter(t => \r\n      params.tags!.some(tag => t.tags.includes(tag))\r\n    )\r\n  }\r\n  \r\n  // Sorting\r\n  if (params.sortBy) {\r\n    filtered.sort((a, b) => {\r\n      let aVal: string | number, bVal: string | number\r\n      \r\n      switch (params.sortBy) {\r\n        case \"date\":\r\n          aVal = new Date(a.date).getTime()\r\n          bVal = new Date(b.date).getTime()\r\n          break\r\n        case \"amount\":\r\n          aVal = a.amount.amount\r\n          bVal = b.amount.amount\r\n          break\r\n        case \"description\":\r\n          aVal = a.description\r\n          bVal = b.description\r\n          break\r\n        default:\r\n          return 0\r\n      }\r\n      \r\n      if (params.sortOrder === \"desc\") {\r\n        return bVal > aVal ? 1 : -1\r\n      } else {\r\n        return aVal > bVal ? 1 : -1\r\n      }\r\n    })\r\n  }\r\n  \r\n  return filtered\r\n}\r\n\r\n/**\r\n * Paginate results\r\n */\r\nexport function paginateResults<T>(\r\n  items: T[],\r\n  page: number = 1,\r\n  limit: number = 20\r\n): { items: T[]; total: number; page: number; totalPages: number } {\r\n  const startIndex = (page - 1) * limit\r\n  const endIndex = startIndex + limit\r\n  const paginatedItems = items.slice(startIndex, endIndex)\r\n  \r\n  return {\r\n    items: paginatedItems,\r\n    total: items.length,\r\n    page,\r\n    totalPages: Math.ceil(items.length / limit)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 978, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/api.ts"],"sourcesContent":["import { \r\n  Transaction, \r\n  MonthMetrics, \r\n  CopilotAdvice, \r\n  ApiResponse, \r\n  TransactionQueryParams,\r\n  CurrencyFormatOptions,\r\n  User\r\n} from \"./types\"\r\nimport { mockDataStore, filterTransactions, paginateResults } from \"./mock\"\r\n\r\n// ============================================================================\r\n// API CONFIGURATION\r\n// ============================================================================\r\n\r\n/**\r\n * API Configuration\r\n * \r\n * To swap to real endpoints later:\r\n * 1. Update BASE_URL to your API server\r\n * 2. Replace mock data calls with actual HTTP requests\r\n * 3. Update error handling for network failures\r\n * 4. Add authentication headers if needed\r\n */\r\nconst API_CONFIG = {\r\n  BASE_URL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001/api\",\r\n  TIMEOUT: 10000, // 10 seconds\r\n  RETRY_ATTEMPTS: 3,\r\n  RETRY_DELAY: 1000, // 1 second\r\n}\r\n\r\n// ============================================================================\r\n// HTTP CLIENT\r\n// ============================================================================\r\n\r\n/**\r\n * Generic HTTP client with error handling and retries\r\n * \r\n * In production, replace with your preferred HTTP client (axios, fetch, etc.)\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nclass ApiClient {\r\n  private async request<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {}\r\n  ): Promise<ApiResponse<T>> {\r\n    const url = `${API_CONFIG.BASE_URL}${endpoint}`\r\n    \r\n    const defaultOptions: RequestInit = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Add authentication headers here if needed\r\n        // 'Authorization': `Bearer ${getAuthToken()}`,\r\n      },\r\n      ...options,\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(url, defaultOptions)\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n      }\r\n      \r\n      const data = await response.json()\r\n      return {\r\n        success: true,\r\n        data,\r\n        error: null\r\n      }\r\n    } catch (error) {\r\n      console.error(`API Error for ${endpoint}:`, error)\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'NETWORK_ERROR',\r\n          message: error instanceof Error ? error.message : 'Unknown error',\r\n          details: { endpoint, options },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  async get<T>(endpoint: string, params?: Record<string, string>): Promise<ApiResponse<T>> {\r\n    const url = params ? `${endpoint}?${new URLSearchParams(params)}` : endpoint\r\n    return this.request<T>(url, { method: 'GET' })\r\n  }\r\n  \r\n  async post<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      body: data ? JSON.stringify(data) : undefined\r\n    })\r\n  }\r\n  \r\n  async put<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PUT',\r\n      body: data ? JSON.stringify(data) : undefined\r\n    })\r\n  }\r\n  \r\n  async delete<T>(endpoint: string): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, { method: 'DELETE' })\r\n  }\r\n}\r\n\r\n// Global API client instance\r\n// const apiClient = new ApiClient() // Uncomment when switching to real API\r\n\r\n// ============================================================================\r\n// MOCK API IMPLEMENTATION\r\n// ============================================================================\r\n\r\n/**\r\n * Mock API implementation using in-memory data\r\n * \r\n * To replace with real API:\r\n * 1. Replace mockDataStore calls with apiClient calls\r\n * 2. Update response format to match your API\r\n * 3. Add proper error handling for network failures\r\n * 4. Implement caching if needed\r\n */\r\n\r\n/**\r\n * Fetch monthly metrics for a specific month\r\n * \r\n * @param month - Month in YYYY-MM format\r\n * @returns Promise<ApiResponse<MonthMetrics>>\r\n * \r\n * Real API endpoint: GET /api/metrics/{month}\r\n */\r\nexport async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\r\n  try {\r\n    console.log('Fetching metrics for month:', month)\r\n    \r\n    // Validate month format\r\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\r\n      console.error('Invalid month format:', month)\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'INVALID_MONTH_FORMAT',\r\n          message: 'Month must be in YYYY-MM format',\r\n          details: { month },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n    \r\n    // In production, replace with:\r\n    // return apiClient.get<MonthMetrics>(`/metrics/${month}`)\r\n    \r\n    const metrics = mockDataStore.getMetrics(month)\r\n    console.log('Retrieved metrics:', metrics ? 'Found' : 'Not found')\r\n    \r\n    if (!metrics) {\r\n      console.error('No metrics found for month:', month)\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'METRICS_NOT_FOUND',\r\n          message: `No metrics found for month ${month}`,\r\n          details: { month },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n    \r\n    console.log('Returning metrics successfully')\r\n    return {\r\n      success: true,\r\n      data: metrics,\r\n      error: null\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching month metrics:', error)\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'INTERNAL_ERROR',\r\n        message: 'Failed to fetch month metrics',\r\n        details: { month, error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch transactions with optional filtering and pagination\r\n * \r\n * @param params - Query parameters for filtering and pagination\r\n * @returns Promise<ApiResponse<Transaction[]>>\r\n * \r\n * Real API endpoint: GET /api/transactions?{params}\r\n */\r\nexport async function fetchTransactions(\r\n  params: TransactionQueryParams = {}\r\n): Promise<ApiResponse<Transaction[]>> {\r\n  try {\r\n    const { month = new Date().toISOString().slice(0, 7), page = 1, limit = 20, ...filters } = params\r\n    \r\n    // In production, replace with:\r\n    // const queryParams = new URLSearchParams()\r\n    // Object.entries(params).forEach(([key, value]) => {\r\n    //   if (value !== undefined) {\r\n    //     queryParams.append(key, String(value))\r\n    //   }\r\n    // })\r\n    // return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\r\n    \r\n    const allTransactions = mockDataStore.getTransactions(month)\r\n    const filteredTransactions = filterTransactions(allTransactions, filters)\r\n    const paginatedResult = paginateResults(filteredTransactions, page, limit)\r\n    \r\n    return {\r\n      success: true,\r\n      data: paginatedResult.items,\r\n      error: null,\r\n      metadata: {\r\n        total: paginatedResult.total,\r\n        page: paginatedResult.page,\r\n        limit,\r\n        hasMore: paginatedResult.page < paginatedResult.totalPages\r\n      }\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'INTERNAL_ERROR',\r\n        message: 'Failed to fetch transactions',\r\n        details: { params, error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch AI copilot advice for a specific mode and month\r\n * \r\n * @param mode - Advice mode (general, budget, savings, etc.)\r\n * @param month - Month in YYYY-MM format\r\n * @returns Promise<ApiResponse<CopilotAdvice[]>>\r\n * \r\n * Real API endpoint: GET /api/advice/{mode}?month={month}\r\n */\r\nexport async function fetchAdvice(\r\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\r\n  month: string = new Date().toISOString().slice(0, 7)\r\n): Promise<ApiResponse<CopilotAdvice[]>> {\r\n  try {\r\n    // Validate month format\r\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'INVALID_MONTH_FORMAT',\r\n          message: 'Month must be in YYYY-MM format',\r\n          details: { month },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n    \r\n    // In production, replace with:\r\n    // return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\r\n    \r\n    const advice = mockDataStore.getAdvice(mode, month)\r\n    \r\n    return {\r\n      success: true,\r\n      data: advice,\r\n      error: null\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'INTERNAL_ERROR',\r\n        message: 'Failed to fetch advice',\r\n        details: { mode, month, error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function fetchCurrentUser(): Promise<ApiResponse<User>> {\r\n  try {\r\n    // In production, replace with:\r\n    // return apiClient.get<User>(\"/user/me\")\r\n    \r\n    // Mock user data\r\n    const user: User = {\r\n      id: \"user_1\",\r\n      firstName: \"John\",\r\n      lastName: \"Doe\",\r\n      email: \"john.doe@example.com\",\r\n      avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=32&h=32&fit=crop&crop=face\",\r\n      preferences: {\r\n        currency: \"USD\",\r\n        dateFormat: \"MM/DD/YYYY\",\r\n        timezone: \"America/New_York\",\r\n        notifications: {\r\n          email: true,\r\n          push: true,\r\n          sms: false,\r\n        },\r\n      },\r\n      createdAt: \"2024-01-01T00:00:00Z\",\r\n      updatedAt: new Date().toISOString(),\r\n    }\r\n    \r\n    return {\r\n      success: true,\r\n      data: user,\r\n      error: null,\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching user:\", error)\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'USER_FETCH_ERROR',\r\n        message: \"Failed to fetch user\",\r\n        details: { error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// CURRENCY UTILITIES\r\n// ============================================================================\r\n\r\n/**\r\n * Format currency amount for display\r\n * \r\n * @param amount - Amount in cents\r\n * @param currency - Currency code (default: USD)\r\n * @param options - Formatting options\r\n * @returns Formatted currency string\r\n */\r\nexport function formatCurrency(\r\n  amount: number,\r\n  currency: string = \"USD\",\r\n  options: CurrencyFormatOptions = {}\r\n): string {\r\n  const {\r\n    showSymbol = true,\r\n    showCents = true,\r\n    locale = \"en-US\",\r\n    compact = false\r\n  } = options\r\n  \r\n  const amountInDollars = amount / 100\r\n  const currencySymbol = getCurrencySymbol(currency)\r\n  \r\n  const formatter = new Intl.NumberFormat(locale, {\r\n    style: \"currency\",\r\n    currency,\r\n    minimumFractionDigits: showCents ? 2 : 0,\r\n    maximumFractionDigits: showCents ? 2 : 0,\r\n    notation: compact ? \"compact\" : \"standard\"\r\n  })\r\n  \r\n  let formatted = formatter.format(amountInDollars)\r\n  \r\n  if (!showSymbol) {\r\n    formatted = formatted.replace(currencySymbol, \"\").trim()\r\n  }\r\n  \r\n  return formatted\r\n}\r\n\r\n/**\r\n * Get currency symbol for a given currency code\r\n */\r\nexport function getCurrencySymbol(currency: string): string {\r\n  const symbols: Record<string, string> = {\r\n    USD: \"$\",\r\n    EUR: \"€\",\r\n    GBP: \"£\",\r\n    JPY: \"¥\",\r\n    CAD: \"C$\",\r\n    AUD: \"A$\",\r\n    CHF: \"CHF\",\r\n    CNY: \"¥\",\r\n    INR: \"₹\",\r\n    BRL: \"R$\",\r\n    MXN: \"$\",\r\n    KRW: \"₩\",\r\n    SGD: \"S$\",\r\n    HKD: \"HK$\",\r\n    NOK: \"kr\",\r\n    SEK: \"kr\",\r\n    DKK: \"kr\",\r\n    PLN: \"zł\",\r\n    CZK: \"Kč\",\r\n    HUF: \"Ft\",\r\n    RON: \"lei\",\r\n    BGN: \"лв\",\r\n    HRK: \"kn\",\r\n    RUB: \"₽\",\r\n    TRY: \"₺\",\r\n    ZAR: \"R\",\r\n    ILS: \"₪\",\r\n    AED: \"د.إ\",\r\n    SAR: \"﷼\",\r\n    QAR: \"﷼\",\r\n    KWD: \"د.ك\",\r\n    BHD: \"د.ب\",\r\n    OMR: \"﷼\",\r\n    JOD: \"د.ا\",\r\n    LBP: \"ل.ل\",\r\n    EGP: \"£\",\r\n    MAD: \"د.م.\",\r\n    TND: \"د.ت\",\r\n    DZD: \"د.ج\",\r\n    LYD: \"ل.د\",\r\n    SDG: \"ج.س.\",\r\n    ETB: \"Br\",\r\n    KES: \"KSh\",\r\n    UGX: \"USh\",\r\n    TZS: \"TSh\",\r\n    ZMW: \"ZK\",\r\n    BWP: \"P\",\r\n    SZL: \"L\",\r\n    LSL: \"L\",\r\n    NAD: \"N$\",\r\n    AOA: \"Kz\",\r\n    MZN: \"MT\",\r\n    ZWL: \"Z$\",\r\n    GHS: \"₵\",\r\n    NGN: \"₦\",\r\n    XOF: \"CFA\",\r\n    XAF: \"FCFA\",\r\n    CDF: \"FC\",\r\n    RWF: \"RF\",\r\n    BIF: \"FBu\",\r\n    KMF: \"CF\",\r\n    DJF: \"Fdj\",\r\n    SOS: \"S\",\r\n    ERN: \"Nfk\",\r\n    SLL: \"Le\",\r\n    GMD: \"D\",\r\n    GNF: \"FG\",\r\n    LRD: \"L$\",\r\n    CVE: \"$\",\r\n    STN: \"Db\",\r\n    MRO: \"UM\",\r\n    MGA: \"Ar\",\r\n    SCR: \"₨\",\r\n    MUR: \"₨\",\r\n    YER: \"﷼\",\r\n    AFN: \"؋\",\r\n    PKR: \"₨\",\r\n    LKR: \"₨\",\r\n    NPR: \"₨\",\r\n    BDT: \"৳\",\r\n    MMK: \"K\",\r\n    THB: \"฿\",\r\n    LAK: \"₭\",\r\n    KHR: \"៛\",\r\n    VND: \"₫\",\r\n    IDR: \"Rp\",\r\n    MYR: \"RM\",\r\n    PHP: \"₱\",\r\n    TWD: \"NT$\",\r\n    MOP: \"MOP$\",\r\n    BND: \"B$\",\r\n    FJD: \"FJ$\",\r\n    PGK: \"K\",\r\n    WST: \"WS$\",\r\n    TOP: \"T$\",\r\n    VUV: \"Vt\",\r\n    SBD: \"SI$\",\r\n    NZD: \"NZ$\",\r\n    XPF: \"₣\",\r\n    ARS: \"$\",\r\n    BOB: \"Bs\",\r\n    CLP: \"$\",\r\n    COP: \"$\",\r\n    PYG: \"₲\",\r\n    PEN: \"S/\",\r\n    UYU: \"$U\",\r\n    VES: \"Bs.S\",\r\n    GYD: \"G$\",\r\n    SRD: \"$\",\r\n    TTD: \"TT$\",\r\n    BBD: \"Bds$\",\r\n    JMD: \"J$\",\r\n    BZD: \"BZ$\",\r\n    GTQ: \"Q\",\r\n    HNL: \"L\",\r\n    NIO: \"C$\",\r\n    CRC: \"₡\",\r\n    PAB: \"B/.\",\r\n    DOP: \"RD$\",\r\n    HTG: \"G\",\r\n    CUP: \"$\",\r\n    XCD: \"$\",\r\n    AWG: \"ƒ\",\r\n    BMD: \"$\",\r\n    KYD: \"$\",\r\n    FKP: \"£\",\r\n    SHP: \"£\",\r\n    GIP: \"£\",\r\n    JEP: \"£\",\r\n    GGP: \"£\",\r\n    IMP: \"£\",\r\n  }\r\n  \r\n  return symbols[currency] || currency\r\n}\r\n\r\n/**\r\n * Parse currency string to cents\r\n * \r\n * @param currencyString - Formatted currency string (e.g., \"$123.45\")\r\n * @returns Amount in cents\r\n */\r\nexport function parseCurrencyToCents(currencyString: string): number {\r\n  // Remove currency symbols and non-numeric characters except decimal point\r\n  const cleaned = currencyString.replace(/[^\\d.-]/g, \"\")\r\n  const amount = parseFloat(cleaned)\r\n  return Math.round(amount * 100)\r\n}\r\n\r\n/**\r\n * Convert cents to dollars\r\n */\r\nexport function centsToDollars(cents: number): number {\r\n  return cents / 100\r\n}\r\n\r\n/**\r\n * Convert dollars to cents\r\n */\r\nexport function dollarsToCents(dollars: number): number {\r\n  return Math.round(dollars * 100)\r\n}\r\n\r\n// ============================================================================\r\n// API MIGRATION GUIDE\r\n// ============================================================================\r\n\r\n/**\r\n * MIGRATION GUIDE: How to swap to real API endpoints\r\n * \r\n * 1. Update API_CONFIG.BASE_URL to your production API URL\r\n * 2. Replace mock data calls with actual HTTP requests:\r\n *    - mockDataStore.getMetrics() → apiClient.get('/metrics/{month}')\r\n *    - mockDataStore.getTransactions() → apiClient.get('/transactions')\r\n *    - mockDataStore.getAdvice() → apiClient.get('/advice/{mode}')\r\n * \r\n * 3. Update error handling for network failures\r\n * 4. Add authentication if needed:\r\n *    - Add auth token to headers\r\n *    - Implement token refresh logic\r\n *    - Handle 401/403 responses\r\n * \r\n * 5. Add caching if needed:\r\n *    - Implement response caching\r\n *    - Add cache invalidation\r\n *    - Handle stale data\r\n * \r\n * 6. Add request/response interceptors for:\r\n *    - Logging\r\n *    - Error reporting\r\n *    - Performance monitoring\r\n * \r\n * Example real API implementation:\r\n * \r\n * export async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\r\n *   return apiClient.get<MonthMetrics>(`/metrics/${month}`)\r\n * }\r\n * \r\n * export async function fetchTransactions(params: TransactionQueryParams): Promise<ApiResponse<Transaction[]>> {\r\n *   const queryParams = new URLSearchParams()\r\n *   Object.entries(params).forEach(([key, value]) => {\r\n *     if (value !== undefined) {\r\n *       queryParams.append(key, String(value))\r\n *     }\r\n *   })\r\n *   return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\r\n * }\r\n * \r\n * export async function fetchAdvice(mode: string, month: string): Promise<ApiResponse<CopilotAdvice[]>> {\r\n *   return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\r\n * }\r\n */\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1499, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-transactions.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchTransactions } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const transactionKeys = {\r\n  all: ['transactions'] as const,\r\n  lists: () => [...transactionKeys.all, 'list'] as const,\r\n  list: (page: number, limit: number) => [...transactionKeys.lists(), { page, limit }] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useTransactions(page = 1, limit = 10) {\r\n  return useQuery({\r\n    queryKey: transactionKeys.list(page, limit),\r\n    queryFn: () => fetchTransactions({ page, limit }),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AAGO,MAAM,kBAAkB;IAC7B,KAAK;QAAC;KAAe;IACrB,OAAO,IAAM;eAAI,gBAAgB,GAAG;YAAE;SAAO;IAC7C,MAAM,CAAC,MAAc,QAAkB;eAAI,gBAAgB,KAAK;YAAI;gBAAE;gBAAM;YAAM;SAAE;AACtF;AAGO,SAAS;QAAgB,OAAA,iEAAO,GAAG,QAAA,iEAAQ;;IAChD,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,gBAAgB,IAAI,CAAC,MAAM;QACrC,OAAO;wCAAE,IAAM,IAAA,yIAAiB,EAAC;oBAAE;oBAAM;gBAAM;;QAC/C,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ","debugId":null}},
    {"offset": {"line": 1552, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-transaction-filters.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport { useCallback, useMemo } from \"react\"\r\nimport { useRouter, useSearchParams } from \"next/navigation\"\r\nimport { TransactionCategory } from \"@/lib/types\"\r\n\r\ninterface TransactionFilters {\r\n  categories: TransactionCategory[]\r\n  merchant: string\r\n  dateFrom: string\r\n  dateTo: string\r\n  sortBy: 'date' | 'amount' | 'merchant' | 'category'\r\n  sortOrder: 'asc' | 'desc'\r\n  density: 'comfortable' | 'compact'\r\n}\r\n\r\n// const DEFAULT_FILTERS: TransactionFilters = {\r\n//   categories: [],\r\n//   merchant: '',\r\n//   dateFrom: '',\r\n//   dateTo: '',\r\n//   sortBy: 'date',\r\n//   sortOrder: 'desc',\r\n//   density: 'comfortable'\r\n// }\r\n\r\nexport function useTransactionFilters() {\r\n  const router = useRouter()\r\n  const searchParams = useSearchParams()\r\n\r\n  const filters = useMemo(() => {\r\n    const categories = searchParams.get('categories')?.split(',').filter(Boolean) as TransactionCategory[] || []\r\n    const merchant = searchParams.get('merchant') || ''\r\n    const dateFrom = searchParams.get('from') || ''\r\n    const dateTo = searchParams.get('to') || ''\r\n    const sortBy = (searchParams.get('sortBy') as 'date' | 'amount' | 'merchant' | 'category') || 'date'\r\n    const sortOrder = (searchParams.get('sortOrder') as 'asc' | 'desc') || 'desc'\r\n    const density = (searchParams.get('density') as 'comfortable' | 'compact') || 'comfortable'\r\n\r\n    return {\r\n      categories,\r\n      merchant,\r\n      dateFrom,\r\n      dateTo,\r\n      sortBy,\r\n      sortOrder,\r\n      density\r\n    }\r\n  }, [searchParams])\r\n\r\n  const updateFilters = useCallback((updates: Partial<TransactionFilters>) => {\r\n    const params = new URLSearchParams(searchParams)\r\n    \r\n    // Update categories\r\n    if (updates.categories !== undefined) {\r\n      if (updates.categories.length > 0) {\r\n        params.set('categories', updates.categories.join(','))\r\n      } else {\r\n        params.delete('categories')\r\n      }\r\n    }\r\n\r\n    // Update merchant\r\n    if (updates.merchant !== undefined) {\r\n      if (updates.merchant) {\r\n        params.set('merchant', updates.merchant)\r\n      } else {\r\n        params.delete('merchant')\r\n      }\r\n    }\r\n\r\n    // Update date range\r\n    if (updates.dateFrom !== undefined) {\r\n      if (updates.dateFrom) {\r\n        params.set('from', updates.dateFrom)\r\n      } else {\r\n        params.delete('from')\r\n      }\r\n    }\r\n\r\n    if (updates.dateTo !== undefined) {\r\n      if (updates.dateTo) {\r\n        params.set('to', updates.dateTo)\r\n      } else {\r\n        params.delete('to')\r\n      }\r\n    }\r\n\r\n    // Update sorting\r\n    if (updates.sortBy !== undefined) {\r\n      params.set('sortBy', updates.sortBy)\r\n    }\r\n\r\n    if (updates.sortOrder !== undefined) {\r\n      params.set('sortOrder', updates.sortOrder)\r\n    }\r\n\r\n    // Update density\r\n    if (updates.density !== undefined) {\r\n      params.set('density', updates.density)\r\n    }\r\n\r\n    // Update URL\r\n    const newUrl = `${window.location.pathname}?${params.toString()}`\r\n    router.push(newUrl, { scroll: false })\r\n  }, [router, searchParams])\r\n\r\n  const toggleCategory = useCallback((category: TransactionCategory) => {\r\n    const currentCategories = filters.categories\r\n    const newCategories = currentCategories.includes(category)\r\n      ? currentCategories.filter(c => c !== category)\r\n      : [...currentCategories, category]\r\n    \r\n    updateFilters({ categories: newCategories })\r\n  }, [filters.categories, updateFilters])\r\n\r\n  const clearAllFilters = useCallback(() => {\r\n    updateFilters({\r\n      categories: [],\r\n      merchant: '',\r\n      dateFrom: '',\r\n      dateTo: ''\r\n    })\r\n  }, [updateFilters])\r\n\r\n  const hasActiveFilters = useMemo(() => {\r\n    return filters.categories.length > 0 || \r\n           filters.merchant.length > 0 || \r\n           filters.dateFrom.length > 0 || \r\n           filters.dateTo.length > 0\r\n  }, [filters.categories, filters.merchant, filters.dateFrom, filters.dateTo])\r\n\r\n  return {\r\n    filters,\r\n    updateFilters,\r\n    toggleCategory,\r\n    clearAllFilters,\r\n    hasActiveFilters\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1704, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/ui/Table.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"table-container\"\r\n      className=\"relative w-full overflow-x-auto\"\r\n    >\r\n      <table\r\n        data-slot=\"table\"\r\n        className={cn(\"w-full caption-bottom text-sm\", className)}\r\n        {...props}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\r\n  return (\r\n    <thead\r\n      data-slot=\"table-header\"\r\n      className={cn(\"[&_tr]:border-b\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\r\n  return (\r\n    <tbody\r\n      data-slot=\"table-body\"\r\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\r\n  return (\r\n    <tfoot\r\n      data-slot=\"table-footer\"\r\n      className={cn(\r\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\r\n  return (\r\n    <tr\r\n      data-slot=\"table-row\"\r\n      className={cn(\r\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\r\n  return (\r\n    <th\r\n      data-slot=\"table-head\"\r\n      className={cn(\r\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\r\n  return (\r\n    <td\r\n      data-slot=\"table-cell\"\r\n      className={cn(\r\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableCaption({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"caption\">) {\r\n  return (\r\n    <caption\r\n      data-slot=\"table-caption\"\r\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACb,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,IAAA,4HAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IAChB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,KAGY;QAHZ,EACpB,SAAS,EACT,GAAG,OAC6B,GAHZ;IAIpB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 1856, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 1905, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/transactions/TransactionTable.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useMemo } from \"react\"\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport { \r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/Table\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { \r\n  ChevronUp, \r\n  ChevronDown,\r\n  Calendar,\r\n  Building2,\r\n  Tag,\r\n  DollarSign,\r\n  Eye,\r\n  Edit\r\n} from \"lucide-react\"\r\nimport { Transaction, TransactionCategory } from \"@/lib/types\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Money } from \"@/components/ui/typography\"\r\n\r\ninterface TransactionTableProps {\r\n  transactions: Transaction[]\r\n  sortBy: 'date' | 'amount' | 'merchant' | 'category'\r\n  sortOrder: 'asc' | 'desc'\r\n  onSort: (column: 'date' | 'amount' | 'merchant' | 'category') => void\r\n  density: 'comfortable' | 'compact'\r\n  onRowClick: (transaction: Transaction) => void\r\n  selectedTransactionId?: string\r\n  className?: string\r\n}\r\n\r\nconst CATEGORY_COLORS: Record<TransactionCategory, string> = {\r\n  tuition: \"bg-blue-100 text-blue-800 border-blue-200\",\r\n  books: \"bg-indigo-100 text-indigo-800 border-indigo-200\", \r\n  housing: \"bg-purple-100 text-purple-800 border-purple-200\",\r\n  food: \"bg-green-100 text-green-800 border-green-200\",\r\n  transportation: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\r\n  entertainment: \"bg-pink-100 text-pink-800 border-pink-200\",\r\n  healthcare: \"bg-red-100 text-red-800 border-red-200\",\r\n  utilities: \"bg-orange-100 text-orange-800 border-orange-200\",\r\n  shopping: \"bg-cyan-100 text-cyan-800 border-cyan-200\",\r\n  income: \"bg-emerald-100 text-emerald-800 border-emerald-200\",\r\n  refund: \"bg-teal-100 text-teal-800 border-teal-200\",\r\n  other: \"bg-gray-100 text-gray-800 border-gray-200\"\r\n}\r\n\r\nconst CATEGORY_LABELS: Record<TransactionCategory, string> = {\r\n  tuition: \"Tuition\",\r\n  books: \"Books & Supplies\",\r\n  housing: \"Housing\",\r\n  food: \"Food & Dining\",\r\n  transportation: \"Transportation\",\r\n  entertainment: \"Entertainment\",\r\n  healthcare: \"Healthcare\",\r\n  utilities: \"Utilities\",\r\n  shopping: \"Shopping\",\r\n  income: \"Income\",\r\n  refund: \"Refunds\",\r\n  other: \"Other\"\r\n}\r\n\r\nexport function TransactionTable({\r\n  transactions,\r\n  sortBy,\r\n  sortOrder,\r\n  onSort,\r\n  density,\r\n  onRowClick,\r\n  selectedTransactionId,\r\n  className\r\n}: TransactionTableProps) {\r\n  // const [hoveredRowId, setHoveredRowId] = useState<string | null>(null)\r\n\r\n  const sortedTransactions = useMemo(() => {\r\n    return [...transactions].sort((a, b) => {\r\n      let aValue: string | number\r\n      let bValue: string | number\r\n\r\n      switch (sortBy) {\r\n        case 'date':\r\n          aValue = new Date(a.date).getTime()\r\n          bValue = new Date(b.date).getTime()\r\n          break\r\n        case 'amount':\r\n          aValue = a.amount.amount\r\n          bValue = b.amount.amount\r\n          break\r\n        case 'merchant':\r\n          aValue = a.merchant || a.description\r\n          bValue = b.merchant || b.description\r\n          break\r\n        case 'category':\r\n          aValue = a.category\r\n          bValue = b.category\r\n          break\r\n        default:\r\n          return 0\r\n      }\r\n\r\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1\r\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1\r\n      return 0\r\n    })\r\n  }, [transactions, sortBy, sortOrder])\r\n\r\n\r\n  const getAmountColor = (transaction: Transaction) => {\r\n    return transaction.type === 'income' ? 'text-green-600' : 'text-red-600'\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'cleared':\r\n        return 'bg-green-100 text-green-800 border-green-200'\r\n      case 'pending':\r\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200'\r\n      case 'cancelled':\r\n        return 'bg-red-100 text-red-800 border-red-200'\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 border-gray-200'\r\n    }\r\n  }\r\n\r\n  const SortButton = ({ \r\n    column, \r\n    children, \r\n    className: buttonClassName \r\n  }: { \r\n    column: 'date' | 'amount' | 'merchant' | 'category'\r\n    children: React.ReactNode\r\n    className?: string\r\n  }) => {\r\n    const isActive = sortBy === column\r\n    const isAsc = isActive && sortOrder === 'asc'\r\n    const isDesc = isActive && sortOrder === 'desc'\r\n\r\n    return (\r\n      <Button\r\n        variant=\"ghost\"\r\n        size=\"sm\"\r\n        onClick={() => onSort(column)}\r\n        className={cn(\r\n          \"h-auto p-0 font-semibold hover:bg-transparent\",\r\n          buttonClassName\r\n        )}\r\n        aria-sort={isActive ? (sortOrder === 'asc' ? 'ascending' : 'descending') : 'none'}\r\n      >\r\n        <span className=\"flex items-center gap-1\">\r\n          {children}\r\n          <div className=\"flex flex-col\">\r\n            <ChevronUp \r\n              className={cn(\r\n                \"h-3 w-3 transition-colors\",\r\n                isAsc ? \"text-primary\" : \"text-muted-foreground/50\"\r\n              )} \r\n            />\r\n            <ChevronDown \r\n              className={cn(\r\n                \"h-3 w-3 -mt-1 transition-colors\",\r\n                isDesc ? \"text-primary\" : \"text-muted-foreground/50\"\r\n              )} \r\n            />\r\n          </div>\r\n        </span>\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"relative\", className)}>\r\n      <div className=\"overflow-x-auto\">\r\n        <Table>\r\n          <TableHeader className=\"sticky top-0 z-10 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\r\n            <TableRow className=\"border-b\">\r\n              <TableHead className=\"w-[200px]\">\r\n                <SortButton column=\"merchant\">\r\n                  <Building2 className=\"h-4 w-4 mr-1\" />\r\n                  Merchant\r\n                </SortButton>\r\n              </TableHead>\r\n              <TableHead className=\"w-[150px]\">\r\n                <SortButton column=\"category\">\r\n                  <Tag className=\"h-4 w-4 mr-1\" />\r\n                  Category\r\n                </SortButton>\r\n              </TableHead>\r\n              <TableHead className=\"w-[120px]\">\r\n                <SortButton column=\"date\">\r\n                  <Calendar className=\"h-4 w-4 mr-1\" />\r\n                  Date\r\n                </SortButton>\r\n              </TableHead>\r\n              <TableHead className=\"w-[120px] text-right\">\r\n                <SortButton column=\"amount\">\r\n                  <DollarSign className=\"h-4 w-4 mr-1\" />\r\n                  Amount\r\n                </SortButton>\r\n              </TableHead>\r\n              <TableHead className=\"w-[100px]\">Status</TableHead>\r\n              <TableHead className=\"w-[60px]\"></TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            <AnimatePresence>\r\n              {sortedTransactions.map((transaction, index) => {\r\n                const isSelected = selectedTransactionId === transaction.id\r\n                \r\n                return (\r\n                  <motion.tr\r\n                    key={transaction.id}\r\n                    initial={{ opacity: 0, y: 20 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    exit={{ opacity: 0, y: -20 }}\r\n                    transition={{ duration: 0.2, delay: index * 0.02 }}\r\n                    className={cn(\r\n                      \"border-b transition-all duration-200 cursor-pointer group\",\r\n                      \"hover:bg-muted/50 focus-within:bg-muted/50\",\r\n                      isSelected && \"bg-primary/5 border-primary/20\",\r\n                      density === 'compact' ? \"h-12\" : \"h-16\"\r\n                    )}\r\n                    onClick={() => onRowClick(transaction)}\r\n                    // onMouseEnter={() => setHoveredRowId(transaction.id)}\r\n                    // onMouseLeave={() => setHoveredRowId(null)}\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === 'Enter' || e.key === ' ') {\r\n                        e.preventDefault()\r\n                        onRowClick(transaction)\r\n                      }\r\n                    }}\r\n                    tabIndex={0}\r\n                    role=\"button\"\r\n                    aria-label={`View details for ${transaction.merchant || transaction.description}`}\r\n                  >\r\n                    {/* Merchant */}\r\n                    <TableCell className={cn(\r\n                      \"font-medium\",\r\n                      density === 'compact' ? \"py-2\" : \"py-4\"\r\n                    )}>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <div className=\"flex-1 min-w-0\">\r\n                          <p \r\n                            className=\"truncate-safe break-words font-medium text-foreground\"\r\n                            title={transaction.merchant || transaction.description}\r\n                          >\r\n                            {transaction.merchant || transaction.description}\r\n                          </p>\r\n                          {transaction.merchant && (\r\n                            <p \r\n                              className=\"text-xs text-muted-foreground truncate-safe break-words\"\r\n                              title={transaction.description}\r\n                            >\r\n                              {transaction.description}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </TableCell>\r\n\r\n                    {/* Category */}\r\n                    <TableCell className={cn(\r\n                      density === 'compact' ? \"py-2\" : \"py-4\"\r\n                    )}>\r\n                      <Badge \r\n                        variant=\"outline\" \r\n                        className={cn(\r\n                          \"text-xs font-medium\",\r\n                          CATEGORY_COLORS[transaction.category]\r\n                        )}\r\n                      >\r\n                        {CATEGORY_LABELS[transaction.category]}\r\n                      </Badge>\r\n                    </TableCell>\r\n\r\n                    {/* Date */}\r\n                    <TableCell className={cn(\r\n                      \"text-muted-foreground\",\r\n                      density === 'compact' ? \"py-2\" : \"py-4\"\r\n                    )}>\r\n                      <div className=\"text-sm\">\r\n                        {new Date(transaction.date).toLocaleDateString('en-US', {\r\n                          month: 'short',\r\n                          day: 'numeric',\r\n                          year: 'numeric'\r\n                        })}\r\n                      </div>\r\n                    </TableCell>\r\n\r\n                    {/* Amount */}\r\n                    <TableCell className={cn(\r\n                      \"text-right\",\r\n                      density === 'compact' ? \"py-2\" : \"py-4\"\r\n                    )}>\r\n                      <Money\r\n                        amount={transaction.amount.amount}\r\n                        currency={transaction.amount.currency}\r\n                        className={cn(\r\n                          \"font-semibold\",\r\n                          getAmountColor(transaction)\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n\r\n                    {/* Status */}\r\n                    <TableCell className={cn(\r\n                      density === 'compact' ? \"py-2\" : \"py-4\"\r\n                    )}>\r\n                      <Badge \r\n                        variant=\"outline\" \r\n                        className={cn(\r\n                          \"text-xs font-medium\",\r\n                          getStatusColor(transaction.status)\r\n                        )}\r\n                      >\r\n                        {transaction.status}\r\n                      </Badge>\r\n                    </TableCell>\r\n\r\n                    {/* Actions */}\r\n                    <TableCell className={cn(\r\n                      \"text-right\",\r\n                      density === 'compact' ? \"py-2\" : \"py-4\"\r\n                    )}>\r\n                      <div className=\"flex items-center justify-end gap-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200\">\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"sm\"\r\n                          className=\"h-8 w-8 p-0\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            onRowClick(transaction)\r\n                          }}\r\n                          aria-label=\"View details\"\r\n                        >\r\n                          <Eye className=\"h-3 w-3\" />\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"sm\"\r\n                          className=\"h-8 w-8 p-0\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            // TODO: Implement edit functionality\r\n                            console.log('Edit transaction:', transaction.id)\r\n                          }}\r\n                          aria-label=\"Edit transaction\"\r\n                        >\r\n                          <Edit className=\"h-3 w-3\" />\r\n                        </Button>\r\n                      </div>\r\n                    </TableCell>\r\n                  </motion.tr>\r\n                )\r\n              })}\r\n            </AnimatePresence>\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n\r\n      {sortedTransactions.length === 0 && (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"text-muted-foreground mb-4\">\r\n            <Building2 className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n            <p className=\"text-lg font-medium\">No transactions found</p>\r\n            <p className=\"text-sm\">Try adjusting your filters or add a new transaction</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2494, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/transactions/TransactionFilters.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState } from \"react\"\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { \r\n  Calendar,\r\n  Building2,\r\n  Tag,\r\n  X,\r\n  Filter,\r\n  ChevronDown,\r\n  ChevronUp\r\n} from \"lucide-react\"\r\nimport { TransactionCategory } from \"@/lib/types\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface TransactionFiltersProps {\r\n  categories: TransactionCategory[]\r\n  selectedCategories: TransactionCategory[]\r\n  onCategoryToggle: (category: TransactionCategory) => void\r\n  merchantSearch: string\r\n  onMerchantSearchChange: (value: string) => void\r\n  dateFrom: string\r\n  onDateFromChange: (value: string) => void\r\n  dateTo: string\r\n  onDateToChange: (value: string) => void\r\n  onClearAll: () => void\r\n  className?: string\r\n}\r\n\r\nconst CATEGORY_LABELS: Record<TransactionCategory, string> = {\r\n  tuition: \"Tuition\",\r\n  books: \"Books & Supplies\", \r\n  housing: \"Housing\",\r\n  food: \"Food & Dining\",\r\n  transportation: \"Transportation\",\r\n  entertainment: \"Entertainment\",\r\n  healthcare: \"Healthcare\",\r\n  utilities: \"Utilities\",\r\n  shopping: \"Shopping\",\r\n  income: \"Income\",\r\n  refund: \"Refunds\",\r\n  other: \"Other\"\r\n}\r\n\r\nconst CATEGORY_COLORS: Record<TransactionCategory, string> = {\r\n  tuition: \"bg-blue-100 text-blue-800 border-blue-200 hover:bg-blue-200\",\r\n  books: \"bg-indigo-100 text-indigo-800 border-indigo-200 hover:bg-indigo-200\",\r\n  housing: \"bg-purple-100 text-purple-800 border-purple-200 hover:bg-purple-200\",\r\n  food: \"bg-green-100 text-green-800 border-green-200 hover:bg-green-200\",\r\n  transportation: \"bg-yellow-100 text-yellow-800 border-yellow-200 hover:bg-yellow-200\",\r\n  entertainment: \"bg-pink-100 text-pink-800 border-pink-200 hover:bg-pink-200\",\r\n  healthcare: \"bg-red-100 text-red-800 border-red-200 hover:bg-red-200\",\r\n  utilities: \"bg-orange-100 text-orange-800 border-orange-200 hover:bg-orange-200\",\r\n  shopping: \"bg-cyan-100 text-cyan-800 border-cyan-200 hover:bg-cyan-200\",\r\n  income: \"bg-emerald-100 text-emerald-800 border-emerald-200 hover:bg-emerald-200\",\r\n  refund: \"bg-teal-100 text-teal-800 border-teal-200 hover:bg-teal-200\",\r\n  other: \"bg-gray-100 text-gray-800 border-gray-200 hover:bg-gray-200\"\r\n}\r\n\r\nexport function TransactionFilters({\r\n  categories,\r\n  selectedCategories,\r\n  onCategoryToggle,\r\n  merchantSearch,\r\n  onMerchantSearchChange,\r\n  dateFrom,\r\n  onDateFromChange,\r\n  dateTo,\r\n  onDateToChange,\r\n  onClearAll,\r\n  className\r\n}: TransactionFiltersProps) {\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const [showDateRange, setShowDateRange] = useState(false)\r\n\r\n  const hasActiveFilters = selectedCategories.length > 0 || merchantSearch || dateFrom || dateTo\r\n\r\n  const handleCategoryToggle = (category: TransactionCategory) => {\r\n    onCategoryToggle(category)\r\n  }\r\n\r\n  const handleClearAll = () => {\r\n    onClearAll()\r\n    setIsExpanded(false)\r\n    setShowDateRange(false)\r\n  }\r\n\r\n  return (\r\n    <Card className={cn(\"w-full\", className)}>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"space-y-4\">\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <Filter className=\"h-4 w-4 text-muted-foreground\" />\r\n              <span className=\"font-medium\">Filters</span>\r\n              {hasActiveFilters && (\r\n                <Badge variant=\"secondary\" className=\"ml-2\">\r\n                  {selectedCategories.length + (merchantSearch ? 1 : 0) + (dateFrom || dateTo ? 1 : 0)}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              {hasActiveFilters && (\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={handleClearAll}\r\n                  className=\"text-muted-foreground hover:text-foreground\"\r\n                >\r\n                  <X className=\"h-3 w-3 mr-1\" />\r\n                  Clear All\r\n                </Button>\r\n              )}\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={() => setIsExpanded(!isExpanded)}\r\n                className=\"text-muted-foreground hover:text-foreground\"\r\n              >\r\n                {isExpanded ? (\r\n                  <ChevronUp className=\"h-4 w-4\" />\r\n                ) : (\r\n                  <ChevronDown className=\"h-4 w-4\" />\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Filters */}\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {/* Merchant Search */}\r\n            <div className=\"relative flex-1 min-w-[200px]\">\r\n              <Building2 className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n              <Input\r\n                placeholder=\"Search merchants...\"\r\n                value={merchantSearch}\r\n                onChange={(e) => onMerchantSearchChange(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n\r\n            {/* Date Range Toggle */}\r\n            <Button\r\n              variant={showDateRange ? \"default\" : \"outline\"}\r\n              size=\"sm\"\r\n              onClick={() => setShowDateRange(!showDateRange)}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              <Calendar className=\"h-4 w-4\" />\r\n              Date Range\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Expanded Filters */}\r\n          <AnimatePresence>\r\n            {isExpanded && (\r\n              <motion.div\r\n                initial={{ opacity: 0, height: 0 }}\r\n                animate={{ opacity: 1, height: \"auto\" }}\r\n                exit={{ opacity: 0, height: 0 }}\r\n                transition={{ duration: 0.2 }}\r\n                className=\"space-y-4\"\r\n              >\r\n                {/* Category Chips */}\r\n                <div>\r\n                  <div className=\"flex items-center gap-2 mb-3\">\r\n                    <Tag className=\"h-4 w-4 text-muted-foreground\" />\r\n                    <span className=\"text-sm font-medium\">Categories</span>\r\n                  </div>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {categories.map((category) => {\r\n                      const isSelected = selectedCategories.includes(category)\r\n                      return (\r\n                        <Button\r\n                          key={category}\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleCategoryToggle(category)}\r\n                          className={cn(\r\n                            \"transition-all duration-200\",\r\n                            isSelected\r\n                              ? CATEGORY_COLORS[category]\r\n                              : \"hover:bg-muted\"\r\n                          )}\r\n                        >\r\n                          {CATEGORY_LABELS[category]}\r\n                          {isSelected && (\r\n                            <X className=\"h-3 w-3 ml-1\" />\r\n                          )}\r\n                        </Button>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Date Range */}\r\n                <AnimatePresence>\r\n                  {showDateRange && (\r\n                    <motion.div\r\n                      initial={{ opacity: 0, height: 0 }}\r\n                      animate={{ opacity: 1, height: \"auto\" }}\r\n                      exit={{ opacity: 0, height: 0 }}\r\n                      transition={{ duration: 0.2 }}\r\n                      className=\"space-y-3\"\r\n                    >\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Calendar className=\"h-4 w-4 text-muted-foreground\" />\r\n                        <span className=\"text-sm font-medium\">Date Range</span>\r\n                      </div>\r\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n                        <div>\r\n                          <label className=\"text-xs text-muted-foreground mb-1 block\">\r\n                            From\r\n                          </label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            value={dateFrom}\r\n                            onChange={(e) => onDateFromChange(e.target.value)}\r\n                            className=\"text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"text-xs text-muted-foreground mb-1 block\">\r\n                            To\r\n                          </label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            value={dateTo}\r\n                            onChange={(e) => onDateToChange(e.target.value)}\r\n                            className=\"text-sm\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </motion.div>\r\n                  )}\r\n                </AnimatePresence>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n\r\n          {/* Active Filters Summary */}\r\n          {hasActiveFilters && (\r\n            <div className=\"flex flex-wrap gap-2 pt-2 border-t\">\r\n              <span className=\"text-xs text-muted-foreground\">Active filters:</span>\r\n              {selectedCategories.map((category) => (\r\n                <Badge\r\n                  key={category}\r\n                  variant=\"secondary\"\r\n                  className=\"text-xs\"\r\n                >\r\n                  {CATEGORY_LABELS[category]}\r\n                  <button\r\n                    onClick={() => handleCategoryToggle(category)}\r\n                    className=\"ml-1 hover:text-destructive\"\r\n                    aria-label={`Remove ${CATEGORY_LABELS[category]} filter`}\r\n                  >\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </Badge>\r\n              ))}\r\n              {merchantSearch && (\r\n                <Badge variant=\"secondary\" className=\"text-xs\">\r\n                  Merchant: {merchantSearch}\r\n                  <button\r\n                    onClick={() => onMerchantSearchChange(\"\")}\r\n                    className=\"ml-1 hover:text-destructive\"\r\n                    aria-label=\"Remove merchant filter\"\r\n                  >\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </Badge>\r\n              )}\r\n              {(dateFrom || dateTo) && (\r\n                <Badge variant=\"secondary\" className=\"text-xs\">\r\n                  Date: {dateFrom || \"Start\"} - {dateTo || \"End\"}\r\n                  <button\r\n                    onClick={() => {\r\n                      onDateFromChange(\"\")\r\n                      onDateToChange(\"\")\r\n                    }}\r\n                    className=\"ml-1 hover:text-destructive\"\r\n                    aria-label=\"Remove date filter\"\r\n                  >\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3067, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/transactions/TransactionDetailsDrawer.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState } from \"react\"\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { \r\n  X,\r\n  Edit,\r\n  Check,\r\n  X as XIcon\r\n} from \"lucide-react\"\r\nimport { Transaction, TransactionCategory } from \"@/lib/types\"\r\nimport { formatCurrency } from \"@/lib/api\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface TransactionDetailsDrawerProps {\r\n  transaction: Transaction | null\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onRecategorize?: (transactionId: string, newCategory: TransactionCategory) => void\r\n  className?: string\r\n}\r\n\r\nconst CATEGORY_LABELS: Record<TransactionCategory, string> = {\r\n  tuition: \"Tuition\",\r\n  books: \"Books & Supplies\",\r\n  housing: \"Housing\", \r\n  food: \"Food & Dining\",\r\n  transportation: \"Transportation\",\r\n  entertainment: \"Entertainment\",\r\n  healthcare: \"Healthcare\",\r\n  utilities: \"Utilities\",\r\n  shopping: \"Shopping\",\r\n  income: \"Income\",\r\n  refund: \"Refunds\",\r\n  other: \"Other\"\r\n}\r\n\r\nconst CATEGORY_COLORS: Record<TransactionCategory, string> = {\r\n  tuition: \"bg-blue-100 text-blue-800 border-blue-200\",\r\n  books: \"bg-indigo-100 text-indigo-800 border-indigo-200\",\r\n  housing: \"bg-purple-100 text-purple-800 border-purple-200\",\r\n  food: \"bg-green-100 text-green-800 border-green-200\",\r\n  transportation: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\r\n  entertainment: \"bg-pink-100 text-pink-800 border-pink-200\",\r\n  healthcare: \"bg-red-100 text-red-800 border-red-200\",\r\n  utilities: \"bg-orange-100 text-orange-800 border-orange-200\",\r\n  shopping: \"bg-cyan-100 text-cyan-800 border-cyan-200\",\r\n  income: \"bg-emerald-100 text-emerald-800 border-emerald-200\",\r\n  refund: \"bg-teal-100 text-teal-800 border-teal-200\",\r\n  other: \"bg-gray-100 text-gray-800 border-gray-200\"\r\n}\r\n\r\nconst PAYMENT_METHOD_LABELS: Record<string, string> = {\r\n  credit_card: \"Credit Card\",\r\n  debit_card: \"Debit Card\",\r\n  bank_transfer: \"Bank Transfer\",\r\n  cash: \"Cash\",\r\n  check: \"Check\",\r\n  other: \"Other\"\r\n}\r\n\r\nconst STATUS_LABELS: Record<string, string> = {\r\n  cleared: \"Cleared\",\r\n  pending: \"Pending\",\r\n  cancelled: \"Cancelled\"\r\n}\r\n\r\nconst STATUS_COLORS: Record<string, string> = {\r\n  cleared: \"bg-green-100 text-green-800 border-green-200\",\r\n  pending: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\r\n  cancelled: \"bg-red-100 text-red-800 border-red-200\"\r\n}\r\n\r\nexport function TransactionDetailsDrawer({\r\n  transaction,\r\n  isOpen,\r\n  onClose,\r\n  onRecategorize,\r\n  className\r\n}: TransactionDetailsDrawerProps) {\r\n  const [isEditingCategory, setIsEditingCategory] = useState(false)\r\n  const [tempCategory, setTempCategory] = useState<TransactionCategory | null>(null)\r\n\r\n  if (!transaction) return null\r\n\r\n  const handleRecategorize = () => {\r\n    if (tempCategory && onRecategorize) {\r\n      onRecategorize(transaction.id, tempCategory)\r\n      setIsEditingCategory(false)\r\n      setTempCategory(null)\r\n    }\r\n  }\r\n\r\n  const handleCancelEdit = () => {\r\n    setIsEditingCategory(false)\r\n    setTempCategory(null)\r\n  }\r\n\r\n  const formatAmount = (transaction: Transaction) => {\r\n    const amount = Math.abs(transaction.amount.amount)\r\n    const formatted = formatCurrency(amount, transaction.amount.currency, { showCents: true })\r\n    return transaction.type === 'income' ? `+${formatted}` : `-${formatted}`\r\n  }\r\n\r\n  const getAmountColor = (transaction: Transaction) => {\r\n    return transaction.type === 'income' ? 'text-green-600' : 'text-red-600'\r\n  }\r\n\r\n  const categories = Object.keys(CATEGORY_LABELS) as TransactionCategory[]\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <>\r\n          {/* Backdrop */}\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black/50 z-40\"\r\n            onClick={onClose}\r\n          />\r\n\r\n          {/* Drawer */}\r\n          <motion.div\r\n            initial={{ x: \"100%\" }}\r\n            animate={{ x: 0 }}\r\n            exit={{ x: \"100%\" }}\r\n            transition={{ type: \"spring\", damping: 30, stiffness: 300 }}\r\n            className={cn(\r\n              \"fixed right-0 top-0 h-full w-full max-w-md bg-background z-50 shadow-2xl\",\r\n              className\r\n            )}\r\n          >\r\n            <div className=\"flex flex-col h-full\">\r\n              {/* Header */}\r\n              <div className=\"flex items-center justify-between p-6 border-b\">\r\n                <h2 className=\"text-lg font-semibold\">Transaction Details</h2>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={onClose}\r\n                  className=\"h-8 w-8 p-0\"\r\n                >\r\n                  <X className=\"h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n\r\n              {/* Content */}\r\n              <div className=\"flex-1 overflow-y-auto p-6 space-y-6\">\r\n                {/* Basic Info */}\r\n                <Card>\r\n                  <CardHeader className=\"pb-3\">\r\n                    <CardTitle className=\"text-lg font-semibold\">Transaction Information</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    {/* Description */}\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-muted-foreground\">Description</label>\r\n                      <p className=\"text-sm mt-1 leading-relaxed\">{transaction.description}</p>\r\n                    </div>\r\n\r\n                    {/* Merchant */}\r\n                    {transaction.merchant && (\r\n                      <div>\r\n                        <label className=\"text-sm font-medium text-muted-foreground\">Merchant</label>\r\n                        <p className=\"text-sm mt-1 leading-relaxed\">{transaction.merchant}</p>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Amount */}\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-muted-foreground\">Amount</label>\r\n                      <p className={cn(\r\n                        \"text-lg font-semibold mt-1 leading-tight\",\r\n                        getAmountColor(transaction)\r\n                      )}>\r\n                        {formatAmount(transaction)}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* Date */}\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-muted-foreground\">Date</label>\r\n                      <p className=\"text-sm mt-1\">\r\n                        {new Date(transaction.date).toLocaleDateString('en-US', {\r\n                          weekday: 'long',\r\n                          year: 'numeric',\r\n                          month: 'long',\r\n                          day: 'numeric'\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Category */}\r\n                <Card>\r\n                  <CardHeader className=\"pb-3\">\r\n                    <CardTitle className=\"text-base\">Category</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {!isEditingCategory ? (\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <Badge \r\n                          variant=\"outline\" \r\n                          className={cn(\r\n                            \"text-sm font-medium\",\r\n                            CATEGORY_COLORS[transaction.category]\r\n                          )}\r\n                        >\r\n                          {CATEGORY_LABELS[transaction.category]}\r\n                        </Badge>\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            setIsEditingCategory(true)\r\n                            setTempCategory(transaction.category)\r\n                          }}\r\n                          className=\"text-muted-foreground hover:text-foreground\"\r\n                        >\r\n                          <Edit className=\"h-3 w-3 mr-1\" />\r\n                          Change\r\n                        </Button>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"grid grid-cols-2 gap-2\">\r\n                          {categories.map((category) => (\r\n                            <Button\r\n                              key={category}\r\n                              variant={tempCategory === category ? \"default\" : \"outline\"}\r\n                              size=\"sm\"\r\n                              onClick={() => setTempCategory(category)}\r\n                              className={cn(\r\n                                \"text-xs\",\r\n                                tempCategory === category\r\n                                  ? \"\"\r\n                                  : \"hover:bg-muted\"\r\n                              )}\r\n                            >\r\n                              {CATEGORY_LABELS[category]}\r\n                            </Button>\r\n                          ))}\r\n                        </div>\r\n                        <div className=\"flex gap-2\">\r\n                          <Button\r\n                            size=\"sm\"\r\n                            onClick={handleRecategorize}\r\n                            disabled={!tempCategory || tempCategory === transaction.category}\r\n                            className=\"flex-1\"\r\n                          >\r\n                            <Check className=\"h-3 w-3 mr-1\" />\r\n                            Save\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"outline\"\r\n                            size=\"sm\"\r\n                            onClick={handleCancelEdit}\r\n                            className=\"flex-1\"\r\n                          >\r\n                            <XIcon className=\"h-3 w-3 mr-1\" />\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Additional Details */}\r\n                <Card>\r\n                  <CardHeader className=\"pb-3\">\r\n                    <CardTitle className=\"text-base\">Additional Details</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    {/* Payment Method */}\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-muted-foreground\">Payment Method</label>\r\n                      <p className=\"text-sm mt-1\">\r\n                        {PAYMENT_METHOD_LABELS[transaction.paymentMethod] || transaction.paymentMethod}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* Status */}\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-muted-foreground\">Status</label>\r\n                      <div className=\"mt-1\">\r\n                        <Badge \r\n                          variant=\"outline\" \r\n                          className={cn(\r\n                            \"text-xs font-medium\",\r\n                            STATUS_COLORS[transaction.status]\r\n                          )}\r\n                        >\r\n                          {STATUS_LABELS[transaction.status] || transaction.status}\r\n                        </Badge>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Location */}\r\n                    {transaction.location && (\r\n                      <div>\r\n                        <label className=\"text-sm font-medium text-muted-foreground\">Location</label>\r\n                        <p className=\"text-sm mt-1\">{transaction.location.name}</p>\r\n                        {transaction.location.address && (\r\n                          <p className=\"text-xs text-muted-foreground mt-1\">\r\n                            {transaction.location.address}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Tags */}\r\n                    {transaction.tags && transaction.tags.length > 0 && (\r\n                      <div>\r\n                        <label className=\"text-sm font-medium text-muted-foreground\">Tags</label>\r\n                        <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                          {transaction.tags.map((tag) => (\r\n                            <Badge key={tag} variant=\"secondary\" className=\"text-xs\">\r\n                              {tag}\r\n                            </Badge>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Notes */}\r\n                    {transaction.notes && (\r\n                      <div>\r\n                        <label className=\"text-sm font-medium text-muted-foreground\">Notes</label>\r\n                        <p className=\"text-sm mt-1\">{transaction.notes}</p>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Raw Data */}\r\n                <Card>\r\n                  <CardHeader className=\"pb-3\">\r\n                    <CardTitle className=\"text-base\">Raw Data</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <pre className=\"text-xs bg-muted p-3 rounded-md overflow-x-auto\">\r\n                      {JSON.stringify(transaction, null, 2)}\r\n                    </pre>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </>\r\n      )}\r\n    </AnimatePresence>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAOA;AACA;;;AAfA;;;;;;;;;AAyBA,MAAM,kBAAuD;IAC3D,SAAS;IACT,OAAO;IACP,SAAS;IACT,MAAM;IACN,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,OAAO;AACT;AAEA,MAAM,kBAAuD;IAC3D,SAAS;IACT,OAAO;IACP,SAAS;IACT,MAAM;IACN,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,OAAO;AACT;AAEA,MAAM,wBAAgD;IACpD,aAAa;IACb,YAAY;IACZ,eAAe;IACf,MAAM;IACN,OAAO;IACP,OAAO;AACT;AAEA,MAAM,gBAAwC;IAC5C,SAAS;IACT,SAAS;IACT,WAAW;AACb;AAEA,MAAM,gBAAwC;IAC5C,SAAS;IACT,SAAS;IACT,WAAW;AACb;AAEO,SAAS,yBAAyB,KAMT;QANS,EACvC,WAAW,EACX,MAAM,EACN,OAAO,EACP,cAAc,EACd,SAAS,EACqB,GANS;;IAOvC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,yKAAQ,EAAC;IAC3D,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,yKAAQ,EAA6B;IAE7E,IAAI,CAAC,aAAa,OAAO;IAEzB,MAAM,qBAAqB;QACzB,IAAI,gBAAgB,gBAAgB;YAClC,eAAe,YAAY,EAAE,EAAE;YAC/B,qBAAqB;YACrB,gBAAgB;QAClB;IACF;IAEA,MAAM,mBAAmB;QACvB,qBAAqB;QACrB,gBAAgB;IAClB;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,SAAS,KAAK,GAAG,CAAC,YAAY,MAAM,CAAC,MAAM;QACjD,MAAM,YAAY,IAAA,sIAAc,EAAC,QAAQ,YAAY,MAAM,CAAC,QAAQ,EAAE;YAAE,WAAW;QAAK;QACxF,OAAO,YAAY,IAAI,KAAK,WAAW,AAAC,IAAa,OAAV,aAAc,AAAC,IAAa,OAAV;IAC/D;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAO,YAAY,IAAI,KAAK,WAAW,mBAAmB;IAC5D;IAEA,MAAM,aAAa,OAAO,IAAI,CAAC;IAE/B,qBACE,6LAAC,+MAAe;kBACb,wBACC;;8BAEE,6LAAC,uMAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;oBAAE;oBACtB,SAAS;wBAAE,SAAS;oBAAE;oBACtB,MAAM;wBAAE,SAAS;oBAAE;oBACnB,WAAU;oBACV,SAAS;;;;;;8BAIX,6LAAC,uMAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,GAAG;oBAAO;oBACrB,SAAS;wBAAE,GAAG;oBAAE;oBAChB,MAAM;wBAAE,GAAG;oBAAO;oBAClB,YAAY;wBAAE,MAAM;wBAAU,SAAS;wBAAI,WAAW;oBAAI;oBAC1D,WAAW,IAAA,4HAAE,EACX,4EACA;8BAGF,cAAA,6LAAC;wBAAI,WAAU;;0CAEb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAwB;;;;;;kDACtC,6LAAC,+IAAM;wCACL,SAAQ;wCACR,MAAK;wCACL,SAAS;wCACT,WAAU;kDAEV,cAAA,6LAAC,oMAAC;4CAAC,WAAU;;;;;;;;;;;;;;;;;0CAKjB,6LAAC;gCAAI,WAAU;;kDAEb,6LAAC,2IAAI;;0DACH,6LAAC,iJAAU;gDAAC,WAAU;0DACpB,cAAA,6LAAC,gJAAS;oDAAC,WAAU;8DAAwB;;;;;;;;;;;0DAE/C,6LAAC,kJAAW;gDAAC,WAAU;;kEAErB,6LAAC;;0EACC,6LAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,6LAAC;gEAAE,WAAU;0EAAgC,YAAY,WAAW;;;;;;;;;;;;oDAIrE,YAAY,QAAQ,kBACnB,6LAAC;;0EACC,6LAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,6LAAC;gEAAE,WAAU;0EAAgC,YAAY,QAAQ;;;;;;;;;;;;kEAKrE,6LAAC;;0EACC,6LAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,6LAAC;gEAAE,WAAW,IAAA,4HAAE,EACd,4CACA,eAAe;0EAEd,aAAa;;;;;;;;;;;;kEAKlB,6LAAC;;0EACC,6LAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,6LAAC;gEAAE,WAAU;0EACV,IAAI,KAAK,YAAY,IAAI,EAAE,kBAAkB,CAAC,SAAS;oEACtD,SAAS;oEACT,MAAM;oEACN,OAAO;oEACP,KAAK;gEACP;;;;;;;;;;;;;;;;;;;;;;;;kDAOR,6LAAC,2IAAI;;0DACH,6LAAC,iJAAU;gDAAC,WAAU;0DACpB,cAAA,6LAAC,gJAAS;oDAAC,WAAU;8DAAY;;;;;;;;;;;0DAEnC,6LAAC,kJAAW;0DACT,CAAC,kCACA,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,6IAAK;4DACJ,SAAQ;4DACR,WAAW,IAAA,4HAAE,EACX,uBACA,eAAe,CAAC,YAAY,QAAQ,CAAC;sEAGtC,eAAe,CAAC,YAAY,QAAQ,CAAC;;;;;;sEAExC,6LAAC,+IAAM;4DACL,SAAQ;4DACR,MAAK;4DACL,SAAS;gEACP,qBAAqB;gEACrB,gBAAgB,YAAY,QAAQ;4DACtC;4DACA,WAAU;;8EAEV,6LAAC,sNAAI;oEAAC,WAAU;;;;;;gEAAiB;;;;;;;;;;;;yEAKrC,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;sEACZ,WAAW,GAAG,CAAC,CAAC,yBACf,6LAAC,+IAAM;oEAEL,SAAS,iBAAiB,WAAW,YAAY;oEACjD,MAAK;oEACL,SAAS,IAAM,gBAAgB;oEAC/B,WAAW,IAAA,4HAAE,EACX,WACA,iBAAiB,WACb,KACA;8EAGL,eAAe,CAAC,SAAS;mEAXrB;;;;;;;;;;sEAeX,6LAAC;4DAAI,WAAU;;8EACb,6LAAC,+IAAM;oEACL,MAAK;oEACL,SAAS;oEACT,UAAU,CAAC,gBAAgB,iBAAiB,YAAY,QAAQ;oEAChE,WAAU;;sFAEV,6LAAC,gNAAK;4EAAC,WAAU;;;;;;wEAAiB;;;;;;;8EAGpC,6LAAC,+IAAM;oEACL,SAAQ;oEACR,MAAK;oEACL,SAAS;oEACT,WAAU;;sFAEV,6LAAC,oMAAK;4EAAC,WAAU;;;;;;wEAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kDAU9C,6LAAC,2IAAI;;0DACH,6LAAC,iJAAU;gDAAC,WAAU;0DACpB,cAAA,6LAAC,gJAAS;oDAAC,WAAU;8DAAY;;;;;;;;;;;0DAEnC,6LAAC,kJAAW;gDAAC,WAAU;;kEAErB,6LAAC;;0EACC,6LAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,6LAAC;gEAAE,WAAU;0EACV,qBAAqB,CAAC,YAAY,aAAa,CAAC,IAAI,YAAY,aAAa;;;;;;;;;;;;kEAKlF,6LAAC;;0EACC,6LAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,6LAAC;gEAAI,WAAU;0EACb,cAAA,6LAAC,6IAAK;oEACJ,SAAQ;oEACR,WAAW,IAAA,4HAAE,EACX,uBACA,aAAa,CAAC,YAAY,MAAM,CAAC;8EAGlC,aAAa,CAAC,YAAY,MAAM,CAAC,IAAI,YAAY,MAAM;;;;;;;;;;;;;;;;;oDAM7D,YAAY,QAAQ,kBACnB,6LAAC;;0EACC,6LAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,6LAAC;gEAAE,WAAU;0EAAgB,YAAY,QAAQ,CAAC,IAAI;;;;;;4DACrD,YAAY,QAAQ,CAAC,OAAO,kBAC3B,6LAAC;gEAAE,WAAU;0EACV,YAAY,QAAQ,CAAC,OAAO;;;;;;;;;;;;oDAOpC,YAAY,IAAI,IAAI,YAAY,IAAI,CAAC,MAAM,GAAG,mBAC7C,6LAAC;;0EACC,6LAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,6LAAC;gEAAI,WAAU;0EACZ,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,oBACrB,6LAAC,6IAAK;wEAAW,SAAQ;wEAAY,WAAU;kFAC5C;uEADS;;;;;;;;;;;;;;;;oDASnB,YAAY,KAAK,kBAChB,6LAAC;;0EACC,6LAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,6LAAC;gEAAE,WAAU;0EAAgB,YAAY,KAAK;;;;;;;;;;;;;;;;;;;;;;;;kDAOtD,6LAAC,2IAAI;;0DACH,6LAAC,iJAAU;gDAAC,WAAU;0DACpB,cAAA,6LAAC,gJAAS;oDAAC,WAAU;8DAAY;;;;;;;;;;;0DAEnC,6LAAC,kJAAW;0DACV,cAAA,6LAAC;oDAAI,WAAU;8DACZ,KAAK,SAAS,CAAC,aAAa,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWzD;GA3RgB;KAAA","debugId":null}},
    {"offset": {"line": 3771, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/transactions/TransactionToolbar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { \r\n  Plus,\r\n  Download,\r\n  Upload,\r\n  Settings,\r\n  Grid3X3,\r\n  List\r\n} from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface TransactionToolbarProps {\r\n  totalCount: number\r\n  filteredCount: number\r\n  density: 'comfortable' | 'compact'\r\n  onDensityChange: (density: 'comfortable' | 'compact') => void\r\n  onAddTransaction: () => void\r\n  onImportTransactions: () => void\r\n  onExportTransactions: () => void\r\n  onSettings: () => void\r\n  className?: string\r\n}\r\n\r\nexport function TransactionToolbar({\r\n  totalCount,\r\n  filteredCount,\r\n  density,\r\n  onDensityChange,\r\n  onAddTransaction,\r\n  onImportTransactions,\r\n  onExportTransactions,\r\n  onSettings,\r\n  className\r\n}: TransactionToolbarProps) {\r\n  const isFiltered = filteredCount !== totalCount\r\n\r\n  return (\r\n    <div className={cn(\r\n      \"flex items-center justify-between py-4\",\r\n      className\r\n    )}>\r\n      {/* Left side - Count and info */}\r\n      <div className=\"flex items-center gap-4\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <h2 className=\"text-lg font-semibold\">Transactions</h2>\r\n          {isFiltered ? (\r\n            <div className=\"flex items-center gap-2\">\r\n              <Badge variant=\"secondary\">\r\n                {filteredCount} of {totalCount}\r\n              </Badge>\r\n              <span className=\"text-sm text-muted-foreground\">\r\n                transactions shown\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <Badge variant=\"outline\">\r\n              {totalCount} transactions\r\n            </Badge>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right side - Actions */}\r\n      <div className=\"flex items-center gap-2\">\r\n        {/* Density Toggle */}\r\n        <div className=\"flex items-center border rounded-md\">\r\n          <Button\r\n            variant={density === 'comfortable' ? 'default' : 'ghost'}\r\n            size=\"sm\"\r\n            onClick={() => onDensityChange('comfortable')}\r\n            className=\"rounded-r-none border-r\"\r\n          >\r\n            <Grid3X3 className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant={density === 'compact' ? 'default' : 'ghost'}\r\n            size=\"sm\"\r\n            onClick={() => onDensityChange('compact')}\r\n            className=\"rounded-l-none\"\r\n          >\r\n            <List className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Import/Export */}\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          onClick={onImportTransactions}\r\n          className=\"hidden sm:flex\"\r\n        >\r\n          <Upload className=\"h-4 w-4 mr-1\" />\r\n          Import\r\n        </Button>\r\n        \r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          onClick={onExportTransactions}\r\n          className=\"hidden sm:flex\"\r\n        >\r\n          <Download className=\"h-4 w-4 mr-1\" />\r\n          Export\r\n        </Button>\r\n\r\n        {/* Settings */}\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={onSettings}\r\n          className=\"hidden sm:flex\"\r\n        >\r\n          <Settings className=\"h-4 w-4\" />\r\n        </Button>\r\n\r\n        {/* Add Transaction */}\r\n        <Button onClick={onAddTransaction}>\r\n          <Plus className=\"h-4 w-4 mr-1\" />\r\n          Add Transaction\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAbA;;;;;;AA2BO,SAAS,mBAAmB,KAUT;QAVS,EACjC,UAAU,EACV,aAAa,EACb,OAAO,EACP,eAAe,EACf,gBAAgB,EAChB,oBAAoB,EACpB,oBAAoB,EACpB,UAAU,EACV,SAAS,EACe,GAVS;IAWjC,MAAM,aAAa,kBAAkB;IAErC,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAChB,0CACA;;0BAGA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAwB;;;;;;wBACrC,2BACC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,6IAAK;oCAAC,SAAQ;;wCACZ;wCAAc;wCAAK;;;;;;;8CAEtB,6LAAC;oCAAK,WAAU;8CAAgC;;;;;;;;;;;iDAKlD,6LAAC,6IAAK;4BAAC,SAAQ;;gCACZ;gCAAW;;;;;;;;;;;;;;;;;;0BAOpB,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+IAAM;gCACL,SAAS,YAAY,gBAAgB,YAAY;gCACjD,MAAK;gCACL,SAAS,IAAM,gBAAgB;gCAC/B,WAAU;0CAEV,cAAA,6LAAC,0NAAO;oCAAC,WAAU;;;;;;;;;;;0CAErB,6LAAC,+IAAM;gCACL,SAAS,YAAY,YAAY,YAAY;gCAC7C,MAAK;gCACL,SAAS,IAAM,gBAAgB;gCAC/B,WAAU;0CAEV,cAAA,6LAAC,6MAAI;oCAAC,WAAU;;;;;;;;;;;;;;;;;kCAKpB,6LAAC,+IAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,SAAS;wBACT,WAAU;;0CAEV,6LAAC,mNAAM;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAIrC,6LAAC,+IAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,SAAS;wBACT,WAAU;;0CAEV,6LAAC,yNAAQ;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAKvC,6LAAC,+IAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,SAAS;wBACT,WAAU;kCAEV,cAAA,6LAAC,yNAAQ;4BAAC,WAAU;;;;;;;;;;;kCAItB,6LAAC,+IAAM;wBAAC,SAAS;;0CACf,6LAAC,6MAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;;AAM3C;KApGgB","debugId":null}},
    {"offset": {"line": 4003, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/transactions/index.ts"],"sourcesContent":["export { TransactionTable } from './TransactionTable'\r\nexport { TransactionFilters } from './TransactionFilters'\r\nexport { TransactionDetailsDrawer } from './TransactionDetailsDrawer'\r\nexport { TransactionToolbar } from './TransactionToolbar'\r\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 4019, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/app/transactions/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useMemo } from \"react\"\r\n\r\nexport const dynamic = 'force-dynamic'\r\nimport { motion } from \"framer-motion\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { Heading, Text } from \"@/components/ui/typography\"\r\nimport { useTransactions } from \"@/lib/hooks/use-transactions\"\r\nimport { useTransactionFilters } from \"@/lib/hooks/use-transaction-filters\"\r\nimport { \r\n  TransactionTable,\r\n  TransactionFilters,\r\n  TransactionDetailsDrawer,\r\n  TransactionToolbar\r\n} from \"@/components/transactions\"\r\nimport { Transaction, TransactionCategory } from \"@/lib/types\"\r\nimport { AlertCircle } from \"lucide-react\"\r\n\r\nexport default function TransactionsPage() {\r\n  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null)\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false)\r\n\r\n  // Get all transactions (no pagination for now)\r\n  const { data: transactionsResponse, isLoading, error } = useTransactions(1, 1000)\r\n  const allTransactions = useMemo(() => transactionsResponse?.data || [], [transactionsResponse?.data])\r\n\r\n  // URL state management\r\n  const {\r\n    filters,\r\n    toggleCategory,\r\n    clearAllFilters,\r\n    updateFilters\r\n  } = useTransactionFilters()\r\n\r\n  // Filter transactions based on URL state\r\n  const filteredTransactions = useMemo(() => {\r\n    return allTransactions.filter((transaction: Transaction) => {\r\n      // Category filter\r\n      if (filters.categories.length > 0 && !filters.categories.includes(transaction.category)) {\r\n        return false\r\n      }\r\n\r\n      // Merchant filter\r\n      if (filters.merchant) {\r\n        const merchantText = (transaction.merchant || transaction.description).toLowerCase()\r\n        if (!merchantText.includes(filters.merchant.toLowerCase())) {\r\n          return false\r\n        }\r\n      }\r\n\r\n      // Date range filter\r\n      if (filters.dateFrom) {\r\n        const transactionDate = new Date(transaction.date)\r\n        const fromDate = new Date(filters.dateFrom)\r\n        if (transactionDate < fromDate) {\r\n          return false\r\n        }\r\n      }\r\n\r\n      if (filters.dateTo) {\r\n        const transactionDate = new Date(transaction.date)\r\n        const toDate = new Date(filters.dateTo)\r\n        if (transactionDate > toDate) {\r\n          return false\r\n        }\r\n      }\r\n\r\n      return true\r\n    })\r\n  }, [allTransactions, filters])\r\n\r\n  // Get unique categories for filter options\r\n  const availableCategories = useMemo(() => {\r\n    const categories = new Set<TransactionCategory>()\r\n    allTransactions.forEach(transaction => {\r\n      categories.add(transaction.category)\r\n    })\r\n    return Array.from(categories)\r\n  }, [allTransactions])\r\n\r\n  const handleRowClick = (transaction: Transaction) => {\r\n    setSelectedTransaction(transaction)\r\n    setIsDrawerOpen(true)\r\n  }\r\n\r\n  const handleRecategorize = (transactionId: string, newCategory: TransactionCategory) => {\r\n    // TODO: Implement recategorization API call\r\n    console.log('Recategorizing transaction:', transactionId, 'to:', newCategory)\r\n    // For now, just close the drawer\r\n    setIsDrawerOpen(false)\r\n  }\r\n\r\n  const handleAddTransaction = () => {\r\n    // TODO: Implement add transaction flow\r\n    console.log('Add transaction clicked')\r\n  }\r\n\r\n  const handleImportTransactions = () => {\r\n    // TODO: Implement import flow\r\n    console.log('Import transactions clicked')\r\n  }\r\n\r\n  const handleExportTransactions = () => {\r\n    // TODO: Implement export flow\r\n    console.log('Export transactions clicked')\r\n  }\r\n\r\n  const handleSettings = () => {\r\n    // TODO: Implement settings\r\n    console.log('Settings clicked')\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Card className=\"card-standard\">\r\n        <CardContent className=\"p-12 text-center\">\r\n          <AlertCircle className=\"h-12 w-12 text-destructive mx-auto mb-4\" />\r\n          <Heading as=\"h2\" size=\"xl\" className=\"mb-2\">Error Loading Transactions</Heading>\r\n          <Text color=\"muted\">\r\n            There was a problem loading your transactions. Please try again.\r\n          </Text>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <main className=\"container-5xl py-8\">\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <Heading as=\"h1\" size=\"4xl\" className=\"mb-2 text-balance w-full force-normal-wrap\">Transactions</Heading>\r\n          <Text color=\"muted\" size=\"lg\" className=\"text-pretty w-full force-normal-wrap\">\r\n            View and manage all your financial transactions\r\n          </Text>\r\n        </motion.div>\r\n\r\n        {/* Toolbar */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.1 }}\r\n        >\r\n          <TransactionToolbar\r\n            totalCount={allTransactions.length}\r\n            filteredCount={filteredTransactions.length}\r\n            density={filters.density}\r\n            onDensityChange={(density) => updateFilters({ density })}\r\n            onAddTransaction={handleAddTransaction}\r\n            onImportTransactions={handleImportTransactions}\r\n            onExportTransactions={handleExportTransactions}\r\n            onSettings={handleSettings}\r\n          />\r\n        </motion.div>\r\n\r\n        {/* Filters */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.2 }}\r\n        >\r\n          <TransactionFilters\r\n            categories={availableCategories}\r\n            selectedCategories={filters.categories}\r\n            onCategoryToggle={toggleCategory}\r\n            merchantSearch={filters.merchant}\r\n            onMerchantSearchChange={(merchant) => updateFilters({ merchant })}\r\n            dateFrom={filters.dateFrom}\r\n            onDateFromChange={(dateFrom) => updateFilters({ dateFrom })}\r\n            dateTo={filters.dateTo}\r\n            onDateToChange={(dateTo) => updateFilters({ dateTo })}\r\n            onClearAll={clearAllFilters}\r\n          />\r\n        </motion.div>\r\n\r\n        {/* Table */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.3 }}\r\n        >\r\n          <Card>\r\n            <CardContent className=\"p-0\">\r\n              {isLoading ? (\r\n                <div className=\"p-8\">\r\n                  <div className=\"space-y-4\">\r\n                    {Array.from({ length: 5 }).map((_, i) => (\r\n                      <div key={i} className=\"flex items-center space-x-4\">\r\n                        <div className=\"h-4 w-4 bg-muted animate-pulse rounded\" />\r\n                        <div className=\"flex-1 space-y-2\">\r\n                          <div className=\"h-4 bg-muted animate-pulse rounded w-1/4\" />\r\n                          <div className=\"h-3 bg-muted animate-pulse rounded w-1/6\" />\r\n                        </div>\r\n                        <div className=\"h-4 bg-muted animate-pulse rounded w-16\" />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <TransactionTable\r\n                  transactions={filteredTransactions}\r\n                  sortBy={filters.sortBy}\r\n                  sortOrder={filters.sortOrder}\r\n                  onSort={(column) => {\r\n                    const newOrder = filters.sortBy === column && filters.sortOrder === 'asc' ? 'desc' : 'asc'\r\n                    updateFilters({ sortBy: column, sortOrder: newOrder })\r\n                  }}\r\n                  density={filters.density}\r\n                  onRowClick={handleRowClick}\r\n                  selectedTransactionId={selectedTransaction?.id}\r\n                />\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </motion.div>\r\n\r\n        {/* Details Drawer */}\r\n        <TransactionDetailsDrawer\r\n          transaction={selectedTransaction}\r\n          isOpen={isDrawerOpen}\r\n          onClose={() => {\r\n            setIsDrawerOpen(false)\r\n            setSelectedTransaction(null)\r\n          }}\r\n          onRecategorize={handleRecategorize}\r\n        />\r\n      </div>\r\n    </main>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}