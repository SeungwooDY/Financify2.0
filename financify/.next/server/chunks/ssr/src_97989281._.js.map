{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/ui/typography.tsx"],"sourcesContent":["\"use client\"\n\nimport React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface HeadingProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"\n  size?: \"xs\" | \"sm\" | \"base\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\" | \"5xl\"\n  weight?: \"normal\" | \"medium\" | \"semibold\" | \"bold\"\n  balance?: boolean\n  children: React.ReactNode\n}\n\nexport function Heading({\n  as: Component = \"h2\",\n  size = \"2xl\",\n  weight = \"semibold\",\n  balance = true,\n  className,\n  children,\n  ...props\n}: HeadingProps) {\n  const sizeClasses = {\n    xs: \"text-xs\",\n    sm: \"text-sm\",\n    base: \"text-base\",\n    lg: \"text-lg\",\n    xl: \"text-xl\",\n    \"2xl\": \"text-2xl md:text-3xl\",\n    \"3xl\": \"text-3xl md:text-4xl\",\n    \"4xl\": \"text-4xl md:text-5xl\",\n    \"5xl\": \"text-5xl md:text-6xl\"\n  }\n\n  const weightClasses = {\n    normal: \"font-normal\",\n    medium: \"font-medium\",\n    semibold: \"font-semibold\",\n    bold: \"font-bold\"\n  }\n\n  return (\n    <Component\n      className={cn(\n        sizeClasses[size],\n        weightClasses[weight],\n        balance && \"text-balance\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </Component>\n  )\n}\n\ninterface TextProps extends React.HTMLAttributes<HTMLElement> {\n  as?: \"p\" | \"span\" | \"div\" | \"label\"\n  size?: \"xs\" | \"sm\" | \"base\" | \"lg\"\n  weight?: \"normal\" | \"medium\" | \"semibold\"\n  color?: \"default\" | \"muted\" | \"primary\" | \"destructive\"\n  pretty?: boolean\n  hyphens?: boolean\n  truncate?: boolean\n  children: React.ReactNode\n}\n\nexport function Text({\n  as: Component = \"p\",\n  size = \"base\",\n  weight = \"normal\",\n  color = \"default\",\n  pretty = false,\n  hyphens = false,\n  truncate = false,\n  className,\n  children,\n  ...props\n}: TextProps) {\n  const sizeClasses = {\n    xs: \"text-xs\",\n    sm: \"text-sm md:text-base\",\n    base: \"text-sm md:text-base\",\n    lg: \"text-base md:text-lg\"\n  }\n\n  const weightClasses = {\n    normal: \"font-normal\",\n    medium: \"font-medium\",\n    semibold: \"font-semibold\"\n  }\n\n  const colorClasses = {\n    default: \"text-foreground\",\n    muted: \"text-muted-foreground\",\n    primary: \"text-primary\",\n    destructive: \"text-destructive\"\n  }\n\n  return (\n    <Component\n      className={cn(\n        sizeClasses[size],\n        weightClasses[weight],\n        colorClasses[color],\n        pretty && \"text-pretty\",\n        hyphens && \"text-hyphens\",\n        truncate && \"truncate-safe\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </Component>\n  )\n}\n\ninterface ProseProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode\n}\n\nexport function Prose({ className, children, ...props }: ProseProps) {\n  return (\n    <div\n      className={cn(\n        \"prose-optimal leading-relaxed\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\ninterface MoneyProps extends React.HTMLAttributes<HTMLSpanElement> {\n  amount: number\n  currency?: string\n  showCents?: boolean\n  className?: string\n}\n\nexport function Money({ \n  amount, \n  currency = \"USD\", \n  showCents = false, \n  className,\n  ...props \n}: MoneyProps) {\n  const formatted = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: showCents ? 2 : 0,\n    maximumFractionDigits: showCents ? 2 : 0,\n  }).format(amount)\n\n  return (\n    <span\n      className={cn(\n        \"tabular-nums font-mono\",\n        className\n      )}\n      {...props}\n    >\n      {formatted}\n    </span>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;AAHA;;;AAaO,SAAS,QAAQ,EACtB,IAAI,YAAY,IAAI,EACpB,OAAO,KAAK,EACZ,SAAS,UAAU,EACnB,UAAU,IAAI,EACd,SAAS,EACT,QAAQ,EACR,GAAG,OACU;IACb,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,MAAM;QACN,IAAI;QACJ,IAAI;QACJ,OAAO;QACP,OAAO;QACP,OAAO;QACP,OAAO;IACT;IAEA,MAAM,gBAAgB;QACpB,QAAQ;QACR,QAAQ;QACR,UAAU;QACV,MAAM;IACR;IAEA,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,WAAW,CAAC,KAAK,EACjB,aAAa,CAAC,OAAO,EACrB,WAAW,gBACX;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;AAaO,SAAS,KAAK,EACnB,IAAI,YAAY,GAAG,EACnB,OAAO,MAAM,EACb,SAAS,QAAQ,EACjB,QAAQ,SAAS,EACjB,SAAS,KAAK,EACd,UAAU,KAAK,EACf,WAAW,KAAK,EAChB,SAAS,EACT,QAAQ,EACR,GAAG,OACO;IACV,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,MAAM;QACN,IAAI;IACN;IAEA,MAAM,gBAAgB;QACpB,QAAQ;QACR,QAAQ;QACR,UAAU;IACZ;IAEA,MAAM,eAAe;QACnB,SAAS;QACT,OAAO;QACP,SAAS;QACT,aAAa;IACf;IAEA,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,WAAW,CAAC,KAAK,EACjB,aAAa,CAAC,OAAO,EACrB,YAAY,CAAC,MAAM,EACnB,UAAU,eACV,WAAW,gBACX,YAAY,iBACZ;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;AAMO,SAAS,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAmB;IACjE,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,iCACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;AASO,SAAS,MAAM,EACpB,MAAM,EACN,WAAW,KAAK,EAChB,YAAY,KAAK,EACjB,SAAS,EACT,GAAG,OACQ;IACX,MAAM,YAAY,IAAI,KAAK,YAAY,CAAC,SAAS;QAC/C,OAAO;QACP;QACA,uBAAuB,YAAY,IAAI;QACvC,uBAAuB,YAAY,IAAI;IACzC,GAAG,MAAM,CAAC;IAEV,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,0BACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/mock.ts"],"sourcesContent":["import { \n  Transaction, \n  MonthMetrics, \n  CopilotAdvice, \n  TransactionCategory,\n  TransactionType,\n  PaymentMethod,\n  TransactionQueryParams\n} from \"./types\"\n\n// ============================================================================\n// MOCK DATA GENERATORS\n// ============================================================================\n\n/**\n * Generate realistic student transactions for a given month\n * Simulates typical student spending patterns and income sources\n */\nexport function generateStudentTransactions(month: string): Transaction[] {\n  const [year, monthNum] = month.split('-').map(Number)\n  const endDate = new Date(year, monthNum, 0)\n  const daysInMonth = endDate.getDate()\n  \n  const transactions: Transaction[] = []\n  let transactionId = 1\n  \n  // Helper to create a transaction\n  const createTransaction = (\n    date: Date,\n    description: string,\n    amountCents: number,\n    category: TransactionCategory,\n    type: TransactionType,\n    paymentMethod: PaymentMethod,\n    merchant?: string,\n    tags: string[] = []\n  ): Transaction => ({\n    id: `txn_${transactionId++}`,\n    date: date.toISOString(),\n    description,\n    amount: { amount: amountCents, currency: \"USD\", symbol: \"$\" },\n    category,\n    type,\n    status: Math.random() > 0.1 ? \"cleared\" : \"pending\",\n    paymentMethod,\n    accountId: \"acc_student_checking\",\n    merchant,\n    location: Math.random() > 0.7 ? {\n      name: merchant || \"Unknown Location\",\n      address: \"123 University Ave, College Town, ST 12345\"\n    } : undefined,\n    tags,\n    notes: Math.random() > 0.8 ? \"Student transaction\" : undefined,\n    metadata: {\n      source: \"mock_data\",\n      generated: true\n    },\n    createdAt: date.toISOString(),\n    updatedAt: date.toISOString()\n  })\n  \n  // Generate transactions for each day\n  for (let day = 1; day <= daysInMonth; day++) {\n    const currentDate = new Date(year, monthNum - 1, day)\n    const dayOfWeek = currentDate.getDay()\n    const isWeekend = dayOfWeek === 0 || dayOfWeek === 6\n    \n    // Income transactions (bi-weekly paychecks, occasional refunds)\n    if (day === 1 || day === 15) {\n      // Bi-weekly paycheck from part-time job\n      transactions.push(createTransaction(\n        currentDate,\n        \"Part-time job paycheck\",\n        120000, // $1,200\n        \"income\",\n        \"income\",\n        \"bank_transfer\",\n        \"Campus Dining Services\"\n      ))\n    }\n    \n    if (day === 3 && Math.random() > 0.7) {\n      // Occasional refund\n      transactions.push(createTransaction(\n        currentDate,\n        \"Textbook refund\",\n        Math.floor(Math.random() * 50000) + 20000, // $200-700\n        \"refund\",\n        \"income\",\n        \"bank_transfer\",\n        \"University Bookstore\"\n      ))\n    }\n    \n    // Daily expenses\n    const dailyExpenseCount = isWeekend ? \n      Math.floor(Math.random() * 3) + 1 : // 1-3 on weekends\n      Math.floor(Math.random() * 2) + 1   // 1-2 on weekdays\n    \n    for (let i = 0; i < dailyExpenseCount; i++) {\n      const expenseTypes = getDailyExpenses(day, isWeekend)\n      const expense = expenseTypes[Math.floor(Math.random() * expenseTypes.length)]\n      \n      transactions.push(createTransaction(\n        currentDate,\n        expense.description,\n        expense.amount,\n        expense.category,\n        \"expense\",\n        expense.paymentMethod,\n        expense.merchant,\n        expense.tags\n      ))\n    }\n    \n    // Weekly recurring expenses\n    if (day % 7 === 0) {\n      // Weekly grocery shopping\n      transactions.push(createTransaction(\n        currentDate,\n        \"Weekly grocery shopping\",\n        Math.floor(Math.random() * 8000) + 4000, // $40-120\n        \"food\",\n        \"expense\",\n        \"debit_card\",\n        \"Campus Market\",\n        [\"groceries\", \"weekly\"]\n      ))\n    }\n    \n    // Monthly recurring expenses\n    if (day === 1) {\n      // Rent\n      transactions.push(createTransaction(\n        currentDate,\n        \"Monthly rent\",\n        120000, // $1,200\n        \"housing\",\n        \"expense\",\n        \"bank_transfer\",\n        \"University Housing\",\n        [\"rent\", \"monthly\"]\n      ))\n      \n      // Utilities\n      transactions.push(createTransaction(\n        currentDate,\n        \"Utilities\",\n        Math.floor(Math.random() * 3000) + 2000, // $20-50\n        \"utilities\",\n        \"expense\",\n        \"debit_card\",\n        \"Campus Utilities\",\n        [\"utilities\", \"monthly\"]\n      ))\n    }\n    \n    if (day === 5) {\n      // Tuition payment (if applicable)\n      if (Math.random() > 0.3) {\n        transactions.push(createTransaction(\n          currentDate,\n          \"Tuition payment\",\n          Math.floor(Math.random() * 200000) + 300000, // $3,000-5,000\n          \"tuition\",\n          \"expense\",\n          \"bank_transfer\",\n          \"University Bursar\",\n          [\"tuition\", \"education\"]\n        ))\n      }\n    }\n  }\n  \n  return transactions.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n}\n\n/**\n * Get daily expense patterns based on day and weekend status\n */\nfunction getDailyExpenses(day: number, isWeekend: boolean): Array<{\n  description: string\n  amount: number\n  category: TransactionCategory\n  paymentMethod: PaymentMethod\n  merchant?: string\n  tags: string[]\n}> {\n  const baseExpenses = [\n    // Food expenses\n    {\n      description: \"Coffee\",\n      amount: Math.floor(Math.random() * 300) + 200, // $2-5\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Coffee Shop\",\n      tags: [\"coffee\", \"daily\"]\n    },\n    {\n      description: \"Lunch\",\n      amount: Math.floor(Math.random() * 800) + 500, // $5-13\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Dining Hall\",\n      tags: [\"lunch\", \"daily\"]\n    },\n    {\n      description: \"Dinner\",\n      amount: Math.floor(Math.random() * 1000) + 800, // $8-18\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Dining Hall\",\n      tags: [\"dinner\", \"daily\"]\n    },\n    {\n      description: \"Snacks\",\n      amount: Math.floor(Math.random() * 400) + 200, // $2-6\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Store\",\n      tags: [\"snacks\", \"daily\"]\n    },\n    \n    // Transportation\n    {\n      description: \"Bus fare\",\n      amount: 250, // $2.50\n      category: \"transportation\" as TransactionCategory,\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\n      merchant: \"City Transit\",\n      tags: [\"transport\", \"daily\"]\n    },\n    {\n      description: \"Uber ride\",\n      amount: Math.floor(Math.random() * 1500) + 800, // $8-23\n      category: \"transportation\" as TransactionCategory,\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\n      merchant: \"Uber\",\n      tags: [\"transport\", \"ride_share\"]\n    },\n    \n    // Entertainment\n    {\n      description: \"Movie ticket\",\n      amount: Math.floor(Math.random() * 500) + 800, // $8-13\n      category: \"entertainment\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Theater\",\n      tags: [\"entertainment\", \"movies\"]\n    },\n    {\n      description: \"Streaming subscription\",\n      amount: 1500, // $15\n      category: \"entertainment\" as TransactionCategory,\n      paymentMethod: \"credit_card\" as PaymentMethod,\n      merchant: \"Netflix\",\n      tags: [\"entertainment\", \"subscription\"]\n    },\n    \n    // Shopping\n    {\n      description: \"Textbook\",\n      amount: Math.floor(Math.random() * 15000) + 5000, // $50-200\n      category: \"books\" as TransactionCategory,\n      paymentMethod: \"credit_card\" as PaymentMethod,\n      merchant: \"University Bookstore\",\n      tags: [\"books\", \"education\"]\n    },\n    {\n      description: \"School supplies\",\n      amount: Math.floor(Math.random() * 2000) + 500, // $5-25\n      category: \"shopping\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Store\",\n      tags: [\"supplies\", \"education\"]\n    },\n    {\n      description: \"Clothing\",\n      amount: Math.floor(Math.random() * 8000) + 2000, // $20-100\n      category: \"shopping\" as TransactionCategory,\n      paymentMethod: \"credit_card\" as PaymentMethod,\n      merchant: \"Campus Clothing Store\",\n      tags: [\"clothing\", \"shopping\"]\n    },\n    \n    // Healthcare\n    {\n      description: \"Prescription\",\n      amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\n      category: \"healthcare\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Pharmacy\",\n      tags: [\"healthcare\", \"prescription\"]\n    },\n    {\n      description: \"Doctor visit\",\n      amount: Math.floor(Math.random() * 5000) + 2000, // $20-70\n      category: \"healthcare\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Health Center\",\n      tags: [\"healthcare\", \"medical\"]\n    }\n  ]\n  \n  if (isWeekend) {\n    // Weekend-specific expenses\n    baseExpenses.push(\n      {\n        description: \"Weekend brunch\",\n        amount: Math.floor(Math.random() * 1200) + 800, // $8-20\n        category: \"food\" as TransactionCategory,\n        paymentMethod: \"debit_card\" as PaymentMethod,\n        merchant: \"Campus Brunch Spot\",\n        tags: [\"food\", \"weekend\", \"brunch\"]\n      },\n      {\n        description: \"Party supplies\",\n        amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\n        category: \"entertainment\" as TransactionCategory,\n        paymentMethod: \"debit_card\" as PaymentMethod,\n        merchant: \"Campus Store\",\n        tags: [\"entertainment\", \"party\", \"weekend\"]\n      }\n    )\n  }\n  \n  return baseExpenses\n}\n\n/**\n * Generate monthly metrics based on transactions\n */\nexport function generateMonthMetrics(month: string, transactions: Transaction[]): MonthMetrics {\n  const incomeTransactions = transactions.filter(t => t.type === \"income\")\n  const expenseTransactions = transactions.filter(t => t.type === \"expense\")\n  \n  const totalIncome = incomeTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\n  const totalExpenses = expenseTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\n  const netIncome = totalIncome - totalExpenses\n  const savingsRate = totalIncome > 0 ? (netIncome / totalIncome) * 100 : 0\n  \n  // Category breakdown\n  const categoryMap = new Map<TransactionCategory, { amount: number; count: number }>()\n  expenseTransactions.forEach(t => {\n    const existing = categoryMap.get(t.category) || { amount: 0, count: 0 }\n    categoryMap.set(t.category, {\n      amount: existing.amount + t.amount.amount,\n      count: existing.count + 1\n    })\n  })\n  \n  const categoryBreakdown = Array.from(categoryMap.entries()).map(([category, data]) => ({\n    category,\n    amount: { amount: data.amount, currency: \"USD\", symbol: \"$\" },\n    percentage: totalExpenses > 0 ? (data.amount / totalExpenses) * 100 : 0,\n    transactionCount: data.count\n  })).sort((a, b) => b.amount.amount - a.amount.amount)\n  \n  // Spending patterns\n  const dailySpending = new Map<string, number>()\n  expenseTransactions.forEach(t => {\n    const date = t.date.split('T')[0]\n    dailySpending.set(date, (dailySpending.get(date) || 0) + t.amount.amount)\n  })\n  \n  const averageDailySpending = dailySpending.size > 0 ? \n    Array.from(dailySpending.values()).reduce((sum, amount) => sum + amount, 0) / dailySpending.size : 0\n  \n  const highestSpendingDay = Array.from(dailySpending.entries())\n    .sort((a, b) => b[1] - a[1])[0] || [\"\", 0]\n  \n  const mostFrequentCategory = categoryBreakdown\n    .sort((a, b) => b.transactionCount - a.transactionCount)[0]?.category || \"other\"\n  \n  const mostExpensiveCategory = categoryBreakdown[0]?.category || \"other\"\n  \n  // Generate alerts\n  const alerts = []\n  if (savingsRate < 10) {\n    alerts.push({\n      type: \"goal_missed\" as const,\n      category: \"general\" as TransactionCategory,\n      message: \"Your savings rate is below 10%. Consider reducing discretionary spending.\",\n      severity: \"medium\" as const\n    })\n  }\n  \n  if (totalExpenses > totalIncome * 0.9) {\n    alerts.push({\n      type: \"overspend\" as const,\n      category: \"general\" as TransactionCategory,\n      message: \"You're spending over 90% of your income. This leaves little room for savings.\",\n      severity: \"high\" as const\n    })\n  }\n  \n  const foodSpending = categoryBreakdown.find(c => c.category === \"food\")?.amount.amount || 0\n  if (foodSpending > totalExpenses * 0.4) {\n    alerts.push({\n      type: \"overspend\" as const,\n      category: \"food\" as TransactionCategory,\n      message: \"Food spending is over 40% of total expenses. Consider meal planning to reduce costs.\",\n      severity: \"medium\" as const\n    })\n  }\n  \n  return {\n    month,\n    totalIncome: { amount: totalIncome, currency: \"USD\", symbol: \"$\" },\n    totalExpenses: { amount: totalExpenses, currency: \"USD\", symbol: \"$\" },\n    netIncome: { amount: netIncome, currency: \"USD\", symbol: \"$\" },\n    savingsRate,\n    categoryBreakdown,\n    spendingPatterns: {\n      averageDailySpending: { amount: Math.round(averageDailySpending), currency: \"USD\", symbol: \"$\" },\n      highestSpendingDay: {\n        date: highestSpendingDay[0],\n        amount: { amount: highestSpendingDay[1], currency: \"USD\", symbol: \"$\" }\n      },\n      mostFrequentCategory,\n      mostExpensiveCategory\n    },\n    budgetComparison: [], // Would be populated with actual budget data\n    trends: {\n      weekOverWeek: {\n        incomeChange: Math.random() * 20 - 10, // -10% to +10%\n        expenseChange: Math.random() * 20 - 10\n      },\n      monthOverMonth: {\n        incomeChange: Math.random() * 30 - 15, // -15% to +15%\n        expenseChange: Math.random() * 30 - 15\n      }\n    },\n    alerts,\n    generatedAt: new Date().toISOString(),\n    trend_daily: [] // Will be populated by the calendar component\n  }\n}\n\n/**\n * Generate AI copilot advice based on metrics and transactions\n */\nexport function generateCopilotAdvice(\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\n  month: string,\n  metrics: MonthMetrics,\n  transactions: Transaction[]\n): CopilotAdvice {\n  const adviceTemplates = {\n    general: [\n      {\n        title: \"Financial Health Check\",\n        message: \"Your financial health looks good overall. Consider these small improvements to optimize your student budget.\",\n        priority: \"medium\" as const,\n        recommendations: [\n          {\n            id: \"rec_1\",\n            title: \"Set up automatic savings\",\n            description: \"Transfer $50-100 to savings each month automatically\",\n            actionType: \"save_more\" as const,\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"easy\" as const,\n            timeframe: \"immediate\" as const\n          }\n        ]\n      }\n    ],\n    budget: [\n      {\n        title: \"Budget Optimization\",\n        message: \"Your current spending patterns show room for improvement. Here's how to optimize your budget.\",\n        priority: \"high\" as const,\n        recommendations: [\n          {\n            id: \"rec_2\",\n            title: \"Reduce food spending\",\n            description: \"Meal prep on Sundays to cut food costs by 30%\",\n            actionType: \"reduce_spending\" as const,\n            estimatedImpact: { amount: 8000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"medium\" as const,\n            timeframe: \"short_term\" as const\n          }\n        ]\n      }\n    ],\n    savings: [\n      {\n        title: \"Boost Your Savings\",\n        message: \"Your savings rate could be improved. Here are some strategies to save more money.\",\n        priority: \"high\" as const,\n        recommendations: [\n          {\n            id: \"rec_3\",\n            title: \"Open a high-yield savings account\",\n            description: \"Earn 4%+ interest on your emergency fund\",\n            actionType: \"save_more\" as const,\n            estimatedImpact: { amount: 2000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"easy\" as const,\n            timeframe: \"immediate\" as const\n          }\n        ]\n      }\n    ],\n    spending: [\n      {\n        title: \"Smart Spending Tips\",\n        message: \"You're spending more than necessary in some categories. Here's how to spend smarter.\",\n        priority: \"medium\" as const,\n        recommendations: [\n          {\n            id: \"rec_4\",\n            title: \"Use student discounts\",\n            description: \"Take advantage of student pricing for software, transportation, and entertainment\",\n            actionType: \"reduce_spending\" as const,\n            estimatedImpact: { amount: 3000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"easy\" as const,\n            timeframe: \"immediate\" as const\n          }\n        ]\n      }\n    ],\n    debt: [\n      {\n        title: \"Debt Management\",\n        message: \"If you have student loans or credit card debt, here's how to manage it effectively.\",\n        priority: \"urgent\" as const,\n        recommendations: [\n          {\n            id: \"rec_5\",\n            title: \"Pay more than minimum\",\n            description: \"Even $25 extra per month can save thousands in interest\",\n            actionType: \"pay_debt\" as const,\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"medium\" as const,\n            timeframe: \"long_term\" as const\n          }\n        ]\n      }\n    ],\n    investment: [\n      {\n        title: \"Start Investing Early\",\n        message: \"Even small amounts invested now can grow significantly over time.\",\n        priority: \"low\" as const,\n        recommendations: [\n          {\n            id: \"rec_6\",\n            title: \"Open a Roth IRA\",\n            description: \"Start with $25/month in a low-cost index fund\",\n            actionType: \"save_more\" as const,\n            estimatedImpact: { amount: 10000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"hard\" as const,\n            timeframe: \"long_term\" as const\n          }\n        ]\n      }\n    ]\n  }\n  \n  const template = adviceTemplates[mode][0]\n  const relevantTransactionIds = transactions\n    .filter(t => t.type === \"expense\")\n    .slice(0, 5)\n    .map(t => t.id)\n  \n  return {\n    id: `advice_${Date.now()}`,\n    mode,\n    title: template.title,\n    message: template.message,\n    priority: template.priority,\n    category: \"general\",\n    recommendations: template.recommendations,\n    insights: [\n      {\n        metric: \"Savings Rate\",\n        value: `${metrics.savingsRate.toFixed(1)}%`,\n        trend: metrics.savingsRate > 20 ? \"up\" : \"down\",\n        significance: \"high\"\n      },\n      {\n        metric: \"Monthly Expenses\",\n        value: `$${(metrics.totalExpenses.amount / 100).toFixed(0)}`,\n        trend: \"stable\",\n        significance: \"medium\"\n      }\n    ],\n    context: {\n      month,\n      relevantTransactions: relevantTransactionIds,\n      userProfile: {\n        studentType: \"undergraduate\",\n        incomeLevel: \"medium\",\n        spendingStyle: \"moderate\"\n      }\n    },\n    generatedAt: new Date().toISOString(),\n    expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString() // 7 days\n  }\n}\n\n// ============================================================================\n// MOCK DATA STORAGE\n// ============================================================================\n\n/**\n * In-memory storage for mock data\n * In production, this would be replaced with actual database calls\n */\nclass MockDataStore {\n  private transactions: Map<string, Transaction[]> = new Map()\n  private metrics: Map<string, MonthMetrics> = new Map()\n  private advice: Map<string, CopilotAdvice[]> = new Map()\n  \n  constructor() {\n    // Pre-generate data for current month and previous month\n    const currentMonth = new Date().toISOString().slice(0, 7)\n    const lastMonth = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().slice(0, 7)\n    \n    this.generateMonthData(currentMonth)\n    this.generateMonthData(lastMonth)\n    \n    // Also generate data for a few months back to ensure we have data\n    const monthsBack = ['2024-12', '2025-01', '2025-02', '2025-03', '2025-04', '2025-05', '2025-06', '2025-07', '2025-08']\n    monthsBack.forEach(month => this.generateMonthData(month))\n  }\n  \n  private generateMonthData(month: string) {\n    const transactions = generateStudentTransactions(month)\n    const metrics = generateMonthMetrics(month, transactions)\n    \n    this.transactions.set(month, transactions)\n    this.metrics.set(month, metrics)\n  }\n  \n  getTransactions(month: string): Transaction[] {\n    if (!this.transactions.has(month)) {\n      this.generateMonthData(month)\n    }\n    return this.transactions.get(month) || []\n  }\n  \n  getMetrics(month: string): MonthMetrics | null {\n    if (!this.metrics.has(month)) {\n      this.generateMonthData(month)\n    }\n    return this.metrics.get(month) || null\n  }\n  \n  getAdvice(mode: string, month: string): CopilotAdvice[] {\n    const key = `${mode}_${month}`\n    if (!this.advice.has(key)) {\n      const transactions = this.getTransactions(month)\n      const metrics = this.getMetrics(month)\n      if (metrics) {\n        const advice = generateCopilotAdvice(\n          mode as \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\n          month,\n          metrics,\n          transactions\n        )\n        this.advice.set(key, [advice])\n      }\n    }\n    return this.advice.get(key) || []\n  }\n}\n\n// Global mock data store instance\nexport const mockDataStore = new MockDataStore()\n\n// ============================================================================\n// UTILITY FUNCTIONS\n// ============================================================================\n\n/**\n * Filter transactions based on query parameters\n */\nexport function filterTransactions(\n  transactions: Transaction[],\n  params: TransactionQueryParams\n): Transaction[] {\n  let filtered = [...transactions]\n  \n  if (params.category) {\n    filtered = filtered.filter(t => t.category === params.category)\n  }\n  \n  if (params.type) {\n    filtered = filtered.filter(t => t.type === params.type)\n  }\n  \n  if (params.status) {\n    filtered = filtered.filter(t => t.status === params.status)\n  }\n  \n  if (params.minAmount !== undefined) {\n    filtered = filtered.filter(t => t.amount.amount >= params.minAmount!)\n  }\n  \n  if (params.maxAmount !== undefined) {\n    filtered = filtered.filter(t => t.amount.amount <= params.maxAmount!)\n  }\n  \n  if (params.search) {\n    const searchLower = params.search.toLowerCase()\n    filtered = filtered.filter(t => \n      t.description.toLowerCase().includes(searchLower) ||\n      t.merchant?.toLowerCase().includes(searchLower) ||\n      t.notes?.toLowerCase().includes(searchLower)\n    )\n  }\n  \n  if (params.tags && params.tags.length > 0) {\n    filtered = filtered.filter(t => \n      params.tags!.some(tag => t.tags.includes(tag))\n    )\n  }\n  \n  // Sorting\n  if (params.sortBy) {\n    filtered.sort((a, b) => {\n      let aVal: string | number, bVal: string | number\n      \n      switch (params.sortBy) {\n        case \"date\":\n          aVal = new Date(a.date).getTime()\n          bVal = new Date(b.date).getTime()\n          break\n        case \"amount\":\n          aVal = a.amount.amount\n          bVal = b.amount.amount\n          break\n        case \"description\":\n          aVal = a.description\n          bVal = b.description\n          break\n        default:\n          return 0\n      }\n      \n      if (params.sortOrder === \"desc\") {\n        return bVal > aVal ? 1 : -1\n      } else {\n        return aVal > bVal ? 1 : -1\n      }\n    })\n  }\n  \n  return filtered\n}\n\n/**\n * Paginate results\n */\nexport function paginateResults<T>(\n  items: T[],\n  page: number = 1,\n  limit: number = 20\n): { items: T[]; total: number; page: number; totalPages: number } {\n  const startIndex = (page - 1) * limit\n  const endIndex = startIndex + limit\n  const paginatedItems = items.slice(startIndex, endIndex)\n  \n  return {\n    items: paginatedItems,\n    total: items.length,\n    page,\n    totalPages: Math.ceil(items.length / limit)\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 921, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/api.ts"],"sourcesContent":["import { \n  Transaction, \n  MonthMetrics, \n  CopilotAdvice, \n  ApiResponse, \n  TransactionQueryParams,\n  CurrencyFormatOptions,\n  User\n} from \"./types\"\nimport { mockDataStore, filterTransactions, paginateResults } from \"./mock\"\n\n// ============================================================================\n// API CONFIGURATION\n// ============================================================================\n\n/**\n * API Configuration\n * \n * To swap to real endpoints later:\n * 1. Update BASE_URL to your API server\n * 2. Replace mock data calls with actual HTTP requests\n * 3. Update error handling for network failures\n * 4. Add authentication headers if needed\n */\nconst API_CONFIG = {\n  BASE_URL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001/api\",\n  TIMEOUT: 10000, // 10 seconds\n  RETRY_ATTEMPTS: 3,\n  RETRY_DELAY: 1000, // 1 second\n}\n\n// ============================================================================\n// HTTP CLIENT\n// ============================================================================\n\n/**\n * Generic HTTP client with error handling and retries\n * \n * In production, replace with your preferred HTTP client (axios, fetch, etc.)\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass ApiClient {\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    const url = `${API_CONFIG.BASE_URL}${endpoint}`\n    \n    const defaultOptions: RequestInit = {\n      headers: {\n        'Content-Type': 'application/json',\n        // Add authentication headers here if needed\n        // 'Authorization': `Bearer ${getAuthToken()}`,\n      },\n      ...options,\n    }\n    \n    try {\n      const response = await fetch(url, defaultOptions)\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n      }\n      \n      const data = await response.json()\n      return {\n        success: true,\n        data,\n        error: null\n      }\n    } catch (error) {\n      console.error(`API Error for ${endpoint}:`, error)\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'NETWORK_ERROR',\n          message: error instanceof Error ? error.message : 'Unknown error',\n          details: { endpoint, options },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n  }\n  \n  async get<T>(endpoint: string, params?: Record<string, string>): Promise<ApiResponse<T>> {\n    const url = params ? `${endpoint}?${new URLSearchParams(params)}` : endpoint\n    return this.request<T>(url, { method: 'GET' })\n  }\n  \n  async post<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, {\n      method: 'POST',\n      body: data ? JSON.stringify(data) : undefined\n    })\n  }\n  \n  async put<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, {\n      method: 'PUT',\n      body: data ? JSON.stringify(data) : undefined\n    })\n  }\n  \n  async delete<T>(endpoint: string): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, { method: 'DELETE' })\n  }\n}\n\n// Global API client instance\n// const apiClient = new ApiClient() // Uncomment when switching to real API\n\n// ============================================================================\n// MOCK API IMPLEMENTATION\n// ============================================================================\n\n/**\n * Mock API implementation using in-memory data\n * \n * To replace with real API:\n * 1. Replace mockDataStore calls with apiClient calls\n * 2. Update response format to match your API\n * 3. Add proper error handling for network failures\n * 4. Implement caching if needed\n */\n\n/**\n * Fetch monthly metrics for a specific month\n * \n * @param month - Month in YYYY-MM format\n * @returns Promise<ApiResponse<MonthMetrics>>\n * \n * Real API endpoint: GET /api/metrics/{month}\n */\nexport async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\n  try {\n    console.log('Fetching metrics for month:', month)\n    \n    // Validate month format\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\n      console.error('Invalid month format:', month)\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'INVALID_MONTH_FORMAT',\n          message: 'Month must be in YYYY-MM format',\n          details: { month },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n    \n    // In production, replace with:\n    // return apiClient.get<MonthMetrics>(`/metrics/${month}`)\n    \n    const metrics = mockDataStore.getMetrics(month)\n    console.log('Retrieved metrics:', metrics ? 'Found' : 'Not found')\n    \n    if (!metrics) {\n      console.error('No metrics found for month:', month)\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'METRICS_NOT_FOUND',\n          message: `No metrics found for month ${month}`,\n          details: { month },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n    \n    console.log('Returning metrics successfully')\n    return {\n      success: true,\n      data: metrics,\n      error: null\n    }\n  } catch (error) {\n    console.error('Error fetching month metrics:', error)\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'INTERNAL_ERROR',\n        message: 'Failed to fetch month metrics',\n        details: { month, error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      }\n    }\n  }\n}\n\n/**\n * Fetch transactions with optional filtering and pagination\n * \n * @param params - Query parameters for filtering and pagination\n * @returns Promise<ApiResponse<Transaction[]>>\n * \n * Real API endpoint: GET /api/transactions?{params}\n */\nexport async function fetchTransactions(\n  params: TransactionQueryParams = {}\n): Promise<ApiResponse<Transaction[]>> {\n  try {\n    const { month = new Date().toISOString().slice(0, 7), page = 1, limit = 20, ...filters } = params\n    \n    // In production, replace with:\n    // const queryParams = new URLSearchParams()\n    // Object.entries(params).forEach(([key, value]) => {\n    //   if (value !== undefined) {\n    //     queryParams.append(key, String(value))\n    //   }\n    // })\n    // return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\n    \n    const allTransactions = mockDataStore.getTransactions(month)\n    const filteredTransactions = filterTransactions(allTransactions, filters)\n    const paginatedResult = paginateResults(filteredTransactions, page, limit)\n    \n    return {\n      success: true,\n      data: paginatedResult.items,\n      error: null,\n      metadata: {\n        total: paginatedResult.total,\n        page: paginatedResult.page,\n        limit,\n        hasMore: paginatedResult.page < paginatedResult.totalPages\n      }\n    }\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'INTERNAL_ERROR',\n        message: 'Failed to fetch transactions',\n        details: { params, error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      }\n    }\n  }\n}\n\n/**\n * Fetch AI copilot advice for a specific mode and month\n * \n * @param mode - Advice mode (general, budget, savings, etc.)\n * @param month - Month in YYYY-MM format\n * @returns Promise<ApiResponse<CopilotAdvice[]>>\n * \n * Real API endpoint: GET /api/advice/{mode}?month={month}\n */\nexport async function fetchAdvice(\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\n  month: string = new Date().toISOString().slice(0, 7)\n): Promise<ApiResponse<CopilotAdvice[]>> {\n  try {\n    // Validate month format\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'INVALID_MONTH_FORMAT',\n          message: 'Month must be in YYYY-MM format',\n          details: { month },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n    \n    // In production, replace with:\n    // return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\n    \n    const advice = mockDataStore.getAdvice(mode, month)\n    \n    return {\n      success: true,\n      data: advice,\n      error: null\n    }\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'INTERNAL_ERROR',\n        message: 'Failed to fetch advice',\n        details: { mode, month, error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      }\n    }\n  }\n}\n\nexport async function fetchCurrentUser(): Promise<ApiResponse<User>> {\n  try {\n    // In production, replace with:\n    // return apiClient.get<User>(\"/user/me\")\n    \n    // Mock user data\n    const user: User = {\n      id: \"user_1\",\n      firstName: \"John\",\n      lastName: \"Doe\",\n      email: \"john.doe@example.com\",\n      avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=32&h=32&fit=crop&crop=face\",\n      preferences: {\n        currency: \"USD\",\n        dateFormat: \"MM/DD/YYYY\",\n        timezone: \"America/New_York\",\n        notifications: {\n          email: true,\n          push: true,\n          sms: false,\n        },\n      },\n      createdAt: \"2024-01-01T00:00:00Z\",\n      updatedAt: new Date().toISOString(),\n    }\n    \n    return {\n      success: true,\n      data: user,\n      error: null,\n    }\n  } catch (error) {\n    console.error(\"Error fetching user:\", error)\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'USER_FETCH_ERROR',\n        message: \"Failed to fetch user\",\n        details: { error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      },\n    }\n  }\n}\n\n// ============================================================================\n// CURRENCY UTILITIES\n// ============================================================================\n\n/**\n * Format currency amount for display\n * \n * @param amount - Amount in cents\n * @param currency - Currency code (default: USD)\n * @param options - Formatting options\n * @returns Formatted currency string\n */\nexport function formatCurrency(\n  amount: number,\n  currency: string = \"USD\",\n  options: CurrencyFormatOptions = {}\n): string {\n  const {\n    showSymbol = true,\n    showCents = true,\n    locale = \"en-US\",\n    compact = false\n  } = options\n  \n  const amountInDollars = amount / 100\n  const currencySymbol = getCurrencySymbol(currency)\n  \n  const formatter = new Intl.NumberFormat(locale, {\n    style: \"currency\",\n    currency,\n    minimumFractionDigits: showCents ? 2 : 0,\n    maximumFractionDigits: showCents ? 2 : 0,\n    notation: compact ? \"compact\" : \"standard\"\n  })\n  \n  let formatted = formatter.format(amountInDollars)\n  \n  if (!showSymbol) {\n    formatted = formatted.replace(currencySymbol, \"\").trim()\n  }\n  \n  return formatted\n}\n\n/**\n * Get currency symbol for a given currency code\n */\nexport function getCurrencySymbol(currency: string): string {\n  const symbols: Record<string, string> = {\n    USD: \"$\",\n    EUR: \"€\",\n    GBP: \"£\",\n    JPY: \"¥\",\n    CAD: \"C$\",\n    AUD: \"A$\",\n    CHF: \"CHF\",\n    CNY: \"¥\",\n    INR: \"₹\",\n    BRL: \"R$\",\n    MXN: \"$\",\n    KRW: \"₩\",\n    SGD: \"S$\",\n    HKD: \"HK$\",\n    NOK: \"kr\",\n    SEK: \"kr\",\n    DKK: \"kr\",\n    PLN: \"zł\",\n    CZK: \"Kč\",\n    HUF: \"Ft\",\n    RON: \"lei\",\n    BGN: \"лв\",\n    HRK: \"kn\",\n    RUB: \"₽\",\n    TRY: \"₺\",\n    ZAR: \"R\",\n    ILS: \"₪\",\n    AED: \"د.إ\",\n    SAR: \"﷼\",\n    QAR: \"﷼\",\n    KWD: \"د.ك\",\n    BHD: \"د.ب\",\n    OMR: \"﷼\",\n    JOD: \"د.ا\",\n    LBP: \"ل.ل\",\n    EGP: \"£\",\n    MAD: \"د.م.\",\n    TND: \"د.ت\",\n    DZD: \"د.ج\",\n    LYD: \"ل.د\",\n    SDG: \"ج.س.\",\n    ETB: \"Br\",\n    KES: \"KSh\",\n    UGX: \"USh\",\n    TZS: \"TSh\",\n    ZMW: \"ZK\",\n    BWP: \"P\",\n    SZL: \"L\",\n    LSL: \"L\",\n    NAD: \"N$\",\n    AOA: \"Kz\",\n    MZN: \"MT\",\n    ZWL: \"Z$\",\n    GHS: \"₵\",\n    NGN: \"₦\",\n    XOF: \"CFA\",\n    XAF: \"FCFA\",\n    CDF: \"FC\",\n    RWF: \"RF\",\n    BIF: \"FBu\",\n    KMF: \"CF\",\n    DJF: \"Fdj\",\n    SOS: \"S\",\n    ERN: \"Nfk\",\n    SLL: \"Le\",\n    GMD: \"D\",\n    GNF: \"FG\",\n    LRD: \"L$\",\n    CVE: \"$\",\n    STN: \"Db\",\n    MRO: \"UM\",\n    MGA: \"Ar\",\n    SCR: \"₨\",\n    MUR: \"₨\",\n    YER: \"﷼\",\n    AFN: \"؋\",\n    PKR: \"₨\",\n    LKR: \"₨\",\n    NPR: \"₨\",\n    BDT: \"৳\",\n    MMK: \"K\",\n    THB: \"฿\",\n    LAK: \"₭\",\n    KHR: \"៛\",\n    VND: \"₫\",\n    IDR: \"Rp\",\n    MYR: \"RM\",\n    PHP: \"₱\",\n    TWD: \"NT$\",\n    MOP: \"MOP$\",\n    BND: \"B$\",\n    FJD: \"FJ$\",\n    PGK: \"K\",\n    WST: \"WS$\",\n    TOP: \"T$\",\n    VUV: \"Vt\",\n    SBD: \"SI$\",\n    NZD: \"NZ$\",\n    XPF: \"₣\",\n    ARS: \"$\",\n    BOB: \"Bs\",\n    CLP: \"$\",\n    COP: \"$\",\n    PYG: \"₲\",\n    PEN: \"S/\",\n    UYU: \"$U\",\n    VES: \"Bs.S\",\n    GYD: \"G$\",\n    SRD: \"$\",\n    TTD: \"TT$\",\n    BBD: \"Bds$\",\n    JMD: \"J$\",\n    BZD: \"BZ$\",\n    GTQ: \"Q\",\n    HNL: \"L\",\n    NIO: \"C$\",\n    CRC: \"₡\",\n    PAB: \"B/.\",\n    DOP: \"RD$\",\n    HTG: \"G\",\n    CUP: \"$\",\n    XCD: \"$\",\n    AWG: \"ƒ\",\n    BMD: \"$\",\n    KYD: \"$\",\n    FKP: \"£\",\n    SHP: \"£\",\n    GIP: \"£\",\n    JEP: \"£\",\n    GGP: \"£\",\n    IMP: \"£\",\n  }\n  \n  return symbols[currency] || currency\n}\n\n/**\n * Parse currency string to cents\n * \n * @param currencyString - Formatted currency string (e.g., \"$123.45\")\n * @returns Amount in cents\n */\nexport function parseCurrencyToCents(currencyString: string): number {\n  // Remove currency symbols and non-numeric characters except decimal point\n  const cleaned = currencyString.replace(/[^\\d.-]/g, \"\")\n  const amount = parseFloat(cleaned)\n  return Math.round(amount * 100)\n}\n\n/**\n * Convert cents to dollars\n */\nexport function centsToDollars(cents: number): number {\n  return cents / 100\n}\n\n/**\n * Convert dollars to cents\n */\nexport function dollarsToCents(dollars: number): number {\n  return Math.round(dollars * 100)\n}\n\n// ============================================================================\n// API MIGRATION GUIDE\n// ============================================================================\n\n/**\n * MIGRATION GUIDE: How to swap to real API endpoints\n * \n * 1. Update API_CONFIG.BASE_URL to your production API URL\n * 2. Replace mock data calls with actual HTTP requests:\n *    - mockDataStore.getMetrics() → apiClient.get('/metrics/{month}')\n *    - mockDataStore.getTransactions() → apiClient.get('/transactions')\n *    - mockDataStore.getAdvice() → apiClient.get('/advice/{mode}')\n * \n * 3. Update error handling for network failures\n * 4. Add authentication if needed:\n *    - Add auth token to headers\n *    - Implement token refresh logic\n *    - Handle 401/403 responses\n * \n * 5. Add caching if needed:\n *    - Implement response caching\n *    - Add cache invalidation\n *    - Handle stale data\n * \n * 6. Add request/response interceptors for:\n *    - Logging\n *    - Error reporting\n *    - Performance monitoring\n * \n * Example real API implementation:\n * \n * export async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\n *   return apiClient.get<MonthMetrics>(`/metrics/${month}`)\n * }\n * \n * export async function fetchTransactions(params: TransactionQueryParams): Promise<ApiResponse<Transaction[]>> {\n *   const queryParams = new URLSearchParams()\n *   Object.entries(params).forEach(([key, value]) => {\n *     if (value !== undefined) {\n *       queryParams.append(key, String(value))\n *     }\n *   })\n *   return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\n * }\n * \n * export async function fetchAdvice(mode: string, month: string): Promise<ApiResponse<CopilotAdvice[]>> {\n *   return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\n * }\n */\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1434, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-transactions.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchTransactions } from \"@/lib/api\"\n\n// Query keys\nexport const transactionKeys = {\n  all: ['transactions'] as const,\n  lists: () => [...transactionKeys.all, 'list'] as const,\n  list: (page: number, limit: number) => [...transactionKeys.lists(), { page, limit }] as const,\n}\n\n// Hooks\nexport function useTransactions(page = 1, limit = 10) {\n  return useQuery({\n    queryKey: transactionKeys.list(page, limit),\n    queryFn: () => fetchTransactions({ page, limit }),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,kBAAkB;IAC7B,KAAK;QAAC;KAAe;IACrB,OAAO,IAAM;eAAI,gBAAgB,GAAG;YAAE;SAAO;IAC7C,MAAM,CAAC,MAAc,QAAkB;eAAI,gBAAgB,KAAK;YAAI;gBAAE;gBAAM;YAAM;SAAE;AACtF;AAGO,SAAS,gBAAgB,OAAO,CAAC,EAAE,QAAQ,EAAE;IAClD,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,gBAAgB,IAAI,CAAC,MAAM;QACrC,SAAS,IAAM,IAAA,sIAAiB,EAAC;gBAAE;gBAAM;YAAM;QAC/C,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 1474, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-transaction-filters.ts"],"sourcesContent":["\"use client\"\n\nimport { useCallback, useMemo } from \"react\"\nimport { useRouter, useSearchParams } from \"next/navigation\"\nimport { TransactionCategory } from \"@/lib/types\"\n\ninterface TransactionFilters {\n  categories: TransactionCategory[]\n  merchant: string\n  dateFrom: string\n  dateTo: string\n  sortBy: 'date' | 'amount' | 'merchant' | 'category'\n  sortOrder: 'asc' | 'desc'\n  density: 'comfortable' | 'compact'\n}\n\n// const DEFAULT_FILTERS: TransactionFilters = {\n//   categories: [],\n//   merchant: '',\n//   dateFrom: '',\n//   dateTo: '',\n//   sortBy: 'date',\n//   sortOrder: 'desc',\n//   density: 'comfortable'\n// }\n\nexport function useTransactionFilters() {\n  const router = useRouter()\n  const searchParams = useSearchParams()\n\n  const filters = useMemo(() => {\n    const categories = searchParams.get('categories')?.split(',').filter(Boolean) as TransactionCategory[] || []\n    const merchant = searchParams.get('merchant') || ''\n    const dateFrom = searchParams.get('from') || ''\n    const dateTo = searchParams.get('to') || ''\n    const sortBy = (searchParams.get('sortBy') as 'date' | 'amount' | 'merchant' | 'category') || 'date'\n    const sortOrder = (searchParams.get('sortOrder') as 'asc' | 'desc') || 'desc'\n    const density = (searchParams.get('density') as 'comfortable' | 'compact') || 'comfortable'\n\n    return {\n      categories,\n      merchant,\n      dateFrom,\n      dateTo,\n      sortBy,\n      sortOrder,\n      density\n    }\n  }, [searchParams])\n\n  const updateFilters = useCallback((updates: Partial<TransactionFilters>) => {\n    const params = new URLSearchParams(searchParams)\n    \n    // Update categories\n    if (updates.categories !== undefined) {\n      if (updates.categories.length > 0) {\n        params.set('categories', updates.categories.join(','))\n      } else {\n        params.delete('categories')\n      }\n    }\n\n    // Update merchant\n    if (updates.merchant !== undefined) {\n      if (updates.merchant) {\n        params.set('merchant', updates.merchant)\n      } else {\n        params.delete('merchant')\n      }\n    }\n\n    // Update date range\n    if (updates.dateFrom !== undefined) {\n      if (updates.dateFrom) {\n        params.set('from', updates.dateFrom)\n      } else {\n        params.delete('from')\n      }\n    }\n\n    if (updates.dateTo !== undefined) {\n      if (updates.dateTo) {\n        params.set('to', updates.dateTo)\n      } else {\n        params.delete('to')\n      }\n    }\n\n    // Update sorting\n    if (updates.sortBy !== undefined) {\n      params.set('sortBy', updates.sortBy)\n    }\n\n    if (updates.sortOrder !== undefined) {\n      params.set('sortOrder', updates.sortOrder)\n    }\n\n    // Update density\n    if (updates.density !== undefined) {\n      params.set('density', updates.density)\n    }\n\n    // Update URL\n    const newUrl = `${window.location.pathname}?${params.toString()}`\n    router.push(newUrl, { scroll: false })\n  }, [router, searchParams])\n\n  const toggleCategory = useCallback((category: TransactionCategory) => {\n    const currentCategories = filters.categories\n    const newCategories = currentCategories.includes(category)\n      ? currentCategories.filter(c => c !== category)\n      : [...currentCategories, category]\n    \n    updateFilters({ categories: newCategories })\n  }, [filters.categories, updateFilters])\n\n  const clearAllFilters = useCallback(() => {\n    updateFilters({\n      categories: [],\n      merchant: '',\n      dateFrom: '',\n      dateTo: ''\n    })\n  }, [updateFilters])\n\n  const hasActiveFilters = useMemo(() => {\n    return filters.categories.length > 0 || \n           filters.merchant.length > 0 || \n           filters.dateFrom.length > 0 || \n           filters.dateTo.length > 0\n  }, [filters.categories, filters.merchant, filters.dateFrom, filters.dateTo])\n\n  return {\n    filters,\n    updateFilters,\n    toggleCategory,\n    clearAllFilters,\n    hasActiveFilters\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1602, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/ui/Table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1726, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 1768, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/transactions/TransactionTable.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useMemo } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { \n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/Table\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { \n  ChevronUp, \n  ChevronDown,\n  Calendar,\n  Building2,\n  Tag,\n  DollarSign,\n  Eye,\n  Edit\n} from \"lucide-react\"\nimport { Transaction, TransactionCategory } from \"@/lib/types\"\nimport { cn } from \"@/lib/utils\"\nimport { Money } from \"@/components/ui/typography\"\n\ninterface TransactionTableProps {\n  transactions: Transaction[]\n  sortBy: 'date' | 'amount' | 'merchant' | 'category'\n  sortOrder: 'asc' | 'desc'\n  onSort: (column: 'date' | 'amount' | 'merchant' | 'category') => void\n  density: 'comfortable' | 'compact'\n  onRowClick: (transaction: Transaction) => void\n  selectedTransactionId?: string\n  className?: string\n}\n\nconst CATEGORY_COLORS: Record<TransactionCategory, string> = {\n  tuition: \"bg-blue-100 text-blue-800 border-blue-200\",\n  books: \"bg-indigo-100 text-indigo-800 border-indigo-200\", \n  housing: \"bg-purple-100 text-purple-800 border-purple-200\",\n  food: \"bg-green-100 text-green-800 border-green-200\",\n  transportation: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n  entertainment: \"bg-pink-100 text-pink-800 border-pink-200\",\n  healthcare: \"bg-red-100 text-red-800 border-red-200\",\n  utilities: \"bg-orange-100 text-orange-800 border-orange-200\",\n  shopping: \"bg-cyan-100 text-cyan-800 border-cyan-200\",\n  income: \"bg-emerald-100 text-emerald-800 border-emerald-200\",\n  refund: \"bg-teal-100 text-teal-800 border-teal-200\",\n  other: \"bg-gray-100 text-gray-800 border-gray-200\"\n}\n\nconst CATEGORY_LABELS: Record<TransactionCategory, string> = {\n  tuition: \"Tuition\",\n  books: \"Books & Supplies\",\n  housing: \"Housing\",\n  food: \"Food & Dining\",\n  transportation: \"Transportation\",\n  entertainment: \"Entertainment\",\n  healthcare: \"Healthcare\",\n  utilities: \"Utilities\",\n  shopping: \"Shopping\",\n  income: \"Income\",\n  refund: \"Refunds\",\n  other: \"Other\"\n}\n\nexport function TransactionTable({\n  transactions,\n  sortBy,\n  sortOrder,\n  onSort,\n  density,\n  onRowClick,\n  selectedTransactionId,\n  className\n}: TransactionTableProps) {\n  // const [hoveredRowId, setHoveredRowId] = useState<string | null>(null)\n\n  const sortedTransactions = useMemo(() => {\n    return [...transactions].sort((a, b) => {\n      let aValue: string | number\n      let bValue: string | number\n\n      switch (sortBy) {\n        case 'date':\n          aValue = new Date(a.date).getTime()\n          bValue = new Date(b.date).getTime()\n          break\n        case 'amount':\n          aValue = a.amount.amount\n          bValue = b.amount.amount\n          break\n        case 'merchant':\n          aValue = a.merchant || a.description\n          bValue = b.merchant || b.description\n          break\n        case 'category':\n          aValue = a.category\n          bValue = b.category\n          break\n        default:\n          return 0\n      }\n\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1\n      return 0\n    })\n  }, [transactions, sortBy, sortOrder])\n\n\n  const getAmountColor = (transaction: Transaction) => {\n    return transaction.type === 'income' ? 'text-green-600' : 'text-red-600'\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'cleared':\n        return 'bg-green-100 text-green-800 border-green-200'\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200'\n      case 'cancelled':\n        return 'bg-red-100 text-red-800 border-red-200'\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200'\n    }\n  }\n\n  const SortButton = ({ \n    column, \n    children, \n    className: buttonClassName \n  }: { \n    column: 'date' | 'amount' | 'merchant' | 'category'\n    children: React.ReactNode\n    className?: string\n  }) => {\n    const isActive = sortBy === column\n    const isAsc = isActive && sortOrder === 'asc'\n    const isDesc = isActive && sortOrder === 'desc'\n\n    return (\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={() => onSort(column)}\n        className={cn(\n          \"h-auto p-0 font-semibold hover:bg-transparent\",\n          buttonClassName\n        )}\n        aria-sort={isActive ? (sortOrder === 'asc' ? 'ascending' : 'descending') : 'none'}\n      >\n        <span className=\"flex items-center gap-1\">\n          {children}\n          <div className=\"flex flex-col\">\n            <ChevronUp \n              className={cn(\n                \"h-3 w-3 transition-colors\",\n                isAsc ? \"text-primary\" : \"text-muted-foreground/50\"\n              )} \n            />\n            <ChevronDown \n              className={cn(\n                \"h-3 w-3 -mt-1 transition-colors\",\n                isDesc ? \"text-primary\" : \"text-muted-foreground/50\"\n              )} \n            />\n          </div>\n        </span>\n      </Button>\n    )\n  }\n\n  return (\n    <div className={cn(\"relative\", className)}>\n      <div className=\"overflow-x-auto\">\n        <Table>\n          <TableHeader className=\"sticky top-0 z-10 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n            <TableRow className=\"border-b\">\n              <TableHead className=\"w-[200px]\">\n                <SortButton column=\"merchant\">\n                  <Building2 className=\"h-4 w-4 mr-1\" />\n                  Merchant\n                </SortButton>\n              </TableHead>\n              <TableHead className=\"w-[150px]\">\n                <SortButton column=\"category\">\n                  <Tag className=\"h-4 w-4 mr-1\" />\n                  Category\n                </SortButton>\n              </TableHead>\n              <TableHead className=\"w-[120px]\">\n                <SortButton column=\"date\">\n                  <Calendar className=\"h-4 w-4 mr-1\" />\n                  Date\n                </SortButton>\n              </TableHead>\n              <TableHead className=\"w-[120px] text-right\">\n                <SortButton column=\"amount\">\n                  <DollarSign className=\"h-4 w-4 mr-1\" />\n                  Amount\n                </SortButton>\n              </TableHead>\n              <TableHead className=\"w-[100px]\">Status</TableHead>\n              <TableHead className=\"w-[60px]\"></TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            <AnimatePresence>\n              {sortedTransactions.map((transaction, index) => {\n                const isSelected = selectedTransactionId === transaction.id\n                \n                return (\n                  <motion.tr\n                    key={transaction.id}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -20 }}\n                    transition={{ duration: 0.2, delay: index * 0.02 }}\n                    className={cn(\n                      \"border-b transition-all duration-200 cursor-pointer group\",\n                      \"hover:bg-muted/50 focus-within:bg-muted/50\",\n                      isSelected && \"bg-primary/5 border-primary/20\",\n                      density === 'compact' ? \"h-12\" : \"h-16\"\n                    )}\n                    onClick={() => onRowClick(transaction)}\n                    // onMouseEnter={() => setHoveredRowId(transaction.id)}\n                    // onMouseLeave={() => setHoveredRowId(null)}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault()\n                        onRowClick(transaction)\n                      }\n                    }}\n                    tabIndex={0}\n                    role=\"button\"\n                    aria-label={`View details for ${transaction.merchant || transaction.description}`}\n                  >\n                    {/* Merchant */}\n                    <TableCell className={cn(\n                      \"font-medium\",\n                      density === 'compact' ? \"py-2\" : \"py-4\"\n                    )}>\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"flex-1 min-w-0\">\n                          <p \n                            className=\"truncate-safe font-medium text-foreground\"\n                            title={transaction.merchant || transaction.description}\n                          >\n                            {transaction.merchant || transaction.description}\n                          </p>\n                          {transaction.merchant && (\n                            <p \n                              className=\"text-xs text-muted-foreground truncate-safe\"\n                              title={transaction.description}\n                            >\n                              {transaction.description}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    </TableCell>\n\n                    {/* Category */}\n                    <TableCell className={cn(\n                      density === 'compact' ? \"py-2\" : \"py-4\"\n                    )}>\n                      <Badge \n                        variant=\"outline\" \n                        className={cn(\n                          \"text-xs font-medium\",\n                          CATEGORY_COLORS[transaction.category]\n                        )}\n                      >\n                        {CATEGORY_LABELS[transaction.category]}\n                      </Badge>\n                    </TableCell>\n\n                    {/* Date */}\n                    <TableCell className={cn(\n                      \"text-muted-foreground\",\n                      density === 'compact' ? \"py-2\" : \"py-4\"\n                    )}>\n                      <div className=\"text-sm\">\n                        {new Date(transaction.date).toLocaleDateString('en-US', {\n                          month: 'short',\n                          day: 'numeric',\n                          year: 'numeric'\n                        })}\n                      </div>\n                    </TableCell>\n\n                    {/* Amount */}\n                    <TableCell className={cn(\n                      \"text-right\",\n                      density === 'compact' ? \"py-2\" : \"py-4\"\n                    )}>\n                      <Money\n                        amount={transaction.amount.amount}\n                        currency={transaction.amount.currency}\n                        className={cn(\n                          \"font-semibold\",\n                          getAmountColor(transaction)\n                        )}\n                      />\n                    </TableCell>\n\n                    {/* Status */}\n                    <TableCell className={cn(\n                      density === 'compact' ? \"py-2\" : \"py-4\"\n                    )}>\n                      <Badge \n                        variant=\"outline\" \n                        className={cn(\n                          \"text-xs font-medium\",\n                          getStatusColor(transaction.status)\n                        )}\n                      >\n                        {transaction.status}\n                      </Badge>\n                    </TableCell>\n\n                    {/* Actions */}\n                    <TableCell className={cn(\n                      \"text-right\",\n                      density === 'compact' ? \"py-2\" : \"py-4\"\n                    )}>\n                      <div className=\"flex items-center justify-end gap-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"h-8 w-8 p-0\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            onRowClick(transaction)\n                          }}\n                          aria-label=\"View details\"\n                        >\n                          <Eye className=\"h-3 w-3\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"h-8 w-8 p-0\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            // TODO: Implement edit functionality\n                            console.log('Edit transaction:', transaction.id)\n                          }}\n                          aria-label=\"Edit transaction\"\n                        >\n                          <Edit className=\"h-3 w-3\" />\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </motion.tr>\n                )\n              })}\n            </AnimatePresence>\n          </TableBody>\n        </Table>\n      </div>\n\n      {sortedTransactions.length === 0 && (\n        <div className=\"text-center py-12\">\n          <div className=\"text-muted-foreground mb-4\">\n            <Building2 className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n            <p className=\"text-lg font-medium\">No transactions found</p>\n            <p className=\"text-sm\">Try adjusting your filters or add a new transaction</p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2342, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,8bACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 2367, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/transactions/TransactionFilters.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { \n  Calendar,\n  Building2,\n  Tag,\n  X,\n  Filter,\n  ChevronDown,\n  ChevronUp\n} from \"lucide-react\"\nimport { TransactionCategory } from \"@/lib/types\"\nimport { cn } from \"@/lib/utils\"\n\ninterface TransactionFiltersProps {\n  categories: TransactionCategory[]\n  selectedCategories: TransactionCategory[]\n  onCategoryToggle: (category: TransactionCategory) => void\n  merchantSearch: string\n  onMerchantSearchChange: (value: string) => void\n  dateFrom: string\n  onDateFromChange: (value: string) => void\n  dateTo: string\n  onDateToChange: (value: string) => void\n  onClearAll: () => void\n  className?: string\n}\n\nconst CATEGORY_LABELS: Record<TransactionCategory, string> = {\n  tuition: \"Tuition\",\n  books: \"Books & Supplies\", \n  housing: \"Housing\",\n  food: \"Food & Dining\",\n  transportation: \"Transportation\",\n  entertainment: \"Entertainment\",\n  healthcare: \"Healthcare\",\n  utilities: \"Utilities\",\n  shopping: \"Shopping\",\n  income: \"Income\",\n  refund: \"Refunds\",\n  other: \"Other\"\n}\n\nconst CATEGORY_COLORS: Record<TransactionCategory, string> = {\n  tuition: \"bg-blue-100 text-blue-800 border-blue-200 hover:bg-blue-200\",\n  books: \"bg-indigo-100 text-indigo-800 border-indigo-200 hover:bg-indigo-200\",\n  housing: \"bg-purple-100 text-purple-800 border-purple-200 hover:bg-purple-200\",\n  food: \"bg-green-100 text-green-800 border-green-200 hover:bg-green-200\",\n  transportation: \"bg-yellow-100 text-yellow-800 border-yellow-200 hover:bg-yellow-200\",\n  entertainment: \"bg-pink-100 text-pink-800 border-pink-200 hover:bg-pink-200\",\n  healthcare: \"bg-red-100 text-red-800 border-red-200 hover:bg-red-200\",\n  utilities: \"bg-orange-100 text-orange-800 border-orange-200 hover:bg-orange-200\",\n  shopping: \"bg-cyan-100 text-cyan-800 border-cyan-200 hover:bg-cyan-200\",\n  income: \"bg-emerald-100 text-emerald-800 border-emerald-200 hover:bg-emerald-200\",\n  refund: \"bg-teal-100 text-teal-800 border-teal-200 hover:bg-teal-200\",\n  other: \"bg-gray-100 text-gray-800 border-gray-200 hover:bg-gray-200\"\n}\n\nexport function TransactionFilters({\n  categories,\n  selectedCategories,\n  onCategoryToggle,\n  merchantSearch,\n  onMerchantSearchChange,\n  dateFrom,\n  onDateFromChange,\n  dateTo,\n  onDateToChange,\n  onClearAll,\n  className\n}: TransactionFiltersProps) {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const [showDateRange, setShowDateRange] = useState(false)\n\n  const hasActiveFilters = selectedCategories.length > 0 || merchantSearch || dateFrom || dateTo\n\n  const handleCategoryToggle = (category: TransactionCategory) => {\n    onCategoryToggle(category)\n  }\n\n  const handleClearAll = () => {\n    onClearAll()\n    setIsExpanded(false)\n    setShowDateRange(false)\n  }\n\n  return (\n    <Card className={cn(\"w-full\", className)}>\n      <CardContent className=\"p-4\">\n        <div className=\"space-y-4\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <Filter className=\"h-4 w-4 text-muted-foreground\" />\n              <span className=\"font-medium\">Filters</span>\n              {hasActiveFilters && (\n                <Badge variant=\"secondary\" className=\"ml-2\">\n                  {selectedCategories.length + (merchantSearch ? 1 : 0) + (dateFrom || dateTo ? 1 : 0)}\n                </Badge>\n              )}\n            </div>\n            <div className=\"flex items-center gap-2\">\n              {hasActiveFilters && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={handleClearAll}\n                  className=\"text-muted-foreground hover:text-foreground\"\n                >\n                  <X className=\"h-3 w-3 mr-1\" />\n                  Clear All\n                </Button>\n              )}\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setIsExpanded(!isExpanded)}\n                className=\"text-muted-foreground hover:text-foreground\"\n              >\n                {isExpanded ? (\n                  <ChevronUp className=\"h-4 w-4\" />\n                ) : (\n                  <ChevronDown className=\"h-4 w-4\" />\n                )}\n              </Button>\n            </div>\n          </div>\n\n          {/* Quick Filters */}\n          <div className=\"flex flex-wrap gap-2\">\n            {/* Merchant Search */}\n            <div className=\"relative flex-1 min-w-[200px]\">\n              <Building2 className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search merchants...\"\n                value={merchantSearch}\n                onChange={(e) => onMerchantSearchChange(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n\n            {/* Date Range Toggle */}\n            <Button\n              variant={showDateRange ? \"default\" : \"outline\"}\n              size=\"sm\"\n              onClick={() => setShowDateRange(!showDateRange)}\n              className=\"flex items-center gap-2\"\n            >\n              <Calendar className=\"h-4 w-4\" />\n              Date Range\n            </Button>\n          </div>\n\n          {/* Expanded Filters */}\n          <AnimatePresence>\n            {isExpanded && (\n              <motion.div\n                initial={{ opacity: 0, height: 0 }}\n                animate={{ opacity: 1, height: \"auto\" }}\n                exit={{ opacity: 0, height: 0 }}\n                transition={{ duration: 0.2 }}\n                className=\"space-y-4\"\n              >\n                {/* Category Chips */}\n                <div>\n                  <div className=\"flex items-center gap-2 mb-3\">\n                    <Tag className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"text-sm font-medium\">Categories</span>\n                  </div>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {categories.map((category) => {\n                      const isSelected = selectedCategories.includes(category)\n                      return (\n                        <Button\n                          key={category}\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleCategoryToggle(category)}\n                          className={cn(\n                            \"transition-all duration-200\",\n                            isSelected\n                              ? CATEGORY_COLORS[category]\n                              : \"hover:bg-muted\"\n                          )}\n                        >\n                          {CATEGORY_LABELS[category]}\n                          {isSelected && (\n                            <X className=\"h-3 w-3 ml-1\" />\n                          )}\n                        </Button>\n                      )\n                    })}\n                  </div>\n                </div>\n\n                {/* Date Range */}\n                <AnimatePresence>\n                  {showDateRange && (\n                    <motion.div\n                      initial={{ opacity: 0, height: 0 }}\n                      animate={{ opacity: 1, height: \"auto\" }}\n                      exit={{ opacity: 0, height: 0 }}\n                      transition={{ duration: 0.2 }}\n                      className=\"space-y-3\"\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                        <span className=\"text-sm font-medium\">Date Range</span>\n                      </div>\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n                        <div>\n                          <label className=\"text-xs text-muted-foreground mb-1 block\">\n                            From\n                          </label>\n                          <Input\n                            type=\"date\"\n                            value={dateFrom}\n                            onChange={(e) => onDateFromChange(e.target.value)}\n                            className=\"text-sm\"\n                          />\n                        </div>\n                        <div>\n                          <label className=\"text-xs text-muted-foreground mb-1 block\">\n                            To\n                          </label>\n                          <Input\n                            type=\"date\"\n                            value={dateTo}\n                            onChange={(e) => onDateToChange(e.target.value)}\n                            className=\"text-sm\"\n                          />\n                        </div>\n                      </div>\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Active Filters Summary */}\n          {hasActiveFilters && (\n            <div className=\"flex flex-wrap gap-2 pt-2 border-t\">\n              <span className=\"text-xs text-muted-foreground\">Active filters:</span>\n              {selectedCategories.map((category) => (\n                <Badge\n                  key={category}\n                  variant=\"secondary\"\n                  className=\"text-xs\"\n                >\n                  {CATEGORY_LABELS[category]}\n                  <button\n                    onClick={() => handleCategoryToggle(category)}\n                    className=\"ml-1 hover:text-destructive\"\n                    aria-label={`Remove ${CATEGORY_LABELS[category]} filter`}\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </button>\n                </Badge>\n              ))}\n              {merchantSearch && (\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  Merchant: {merchantSearch}\n                  <button\n                    onClick={() => onMerchantSearchChange(\"\")}\n                    className=\"ml-1 hover:text-destructive\"\n                    aria-label=\"Remove merchant filter\"\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </button>\n                </Badge>\n              )}\n              {(dateFrom || dateTo) && (\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  Date: {dateFrom || \"Start\"} - {dateTo || \"End\"}\n                  <button\n                    onClick={() => {\n                      onDateFromChange(\"\")\n                      onDateToChange(\"\")\n                    }}\n                    className=\"ml-1 hover:text-destructive\"\n                    aria-label=\"Remove date filter\"\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </button>\n                </Badge>\n              )}\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2926, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/transactions/TransactionDetailsDrawer.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { \n  X,\n  Edit,\n  Check,\n  X as XIcon\n} from \"lucide-react\"\nimport { Transaction, TransactionCategory } from \"@/lib/types\"\nimport { formatCurrency } from \"@/lib/api\"\nimport { cn } from \"@/lib/utils\"\n\ninterface TransactionDetailsDrawerProps {\n  transaction: Transaction | null\n  isOpen: boolean\n  onClose: () => void\n  onRecategorize?: (transactionId: string, newCategory: TransactionCategory) => void\n  className?: string\n}\n\nconst CATEGORY_LABELS: Record<TransactionCategory, string> = {\n  tuition: \"Tuition\",\n  books: \"Books & Supplies\",\n  housing: \"Housing\", \n  food: \"Food & Dining\",\n  transportation: \"Transportation\",\n  entertainment: \"Entertainment\",\n  healthcare: \"Healthcare\",\n  utilities: \"Utilities\",\n  shopping: \"Shopping\",\n  income: \"Income\",\n  refund: \"Refunds\",\n  other: \"Other\"\n}\n\nconst CATEGORY_COLORS: Record<TransactionCategory, string> = {\n  tuition: \"bg-blue-100 text-blue-800 border-blue-200\",\n  books: \"bg-indigo-100 text-indigo-800 border-indigo-200\",\n  housing: \"bg-purple-100 text-purple-800 border-purple-200\",\n  food: \"bg-green-100 text-green-800 border-green-200\",\n  transportation: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n  entertainment: \"bg-pink-100 text-pink-800 border-pink-200\",\n  healthcare: \"bg-red-100 text-red-800 border-red-200\",\n  utilities: \"bg-orange-100 text-orange-800 border-orange-200\",\n  shopping: \"bg-cyan-100 text-cyan-800 border-cyan-200\",\n  income: \"bg-emerald-100 text-emerald-800 border-emerald-200\",\n  refund: \"bg-teal-100 text-teal-800 border-teal-200\",\n  other: \"bg-gray-100 text-gray-800 border-gray-200\"\n}\n\nconst PAYMENT_METHOD_LABELS: Record<string, string> = {\n  credit_card: \"Credit Card\",\n  debit_card: \"Debit Card\",\n  bank_transfer: \"Bank Transfer\",\n  cash: \"Cash\",\n  check: \"Check\",\n  other: \"Other\"\n}\n\nconst STATUS_LABELS: Record<string, string> = {\n  cleared: \"Cleared\",\n  pending: \"Pending\",\n  cancelled: \"Cancelled\"\n}\n\nconst STATUS_COLORS: Record<string, string> = {\n  cleared: \"bg-green-100 text-green-800 border-green-200\",\n  pending: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n  cancelled: \"bg-red-100 text-red-800 border-red-200\"\n}\n\nexport function TransactionDetailsDrawer({\n  transaction,\n  isOpen,\n  onClose,\n  onRecategorize,\n  className\n}: TransactionDetailsDrawerProps) {\n  const [isEditingCategory, setIsEditingCategory] = useState(false)\n  const [tempCategory, setTempCategory] = useState<TransactionCategory | null>(null)\n\n  if (!transaction) return null\n\n  const handleRecategorize = () => {\n    if (tempCategory && onRecategorize) {\n      onRecategorize(transaction.id, tempCategory)\n      setIsEditingCategory(false)\n      setTempCategory(null)\n    }\n  }\n\n  const handleCancelEdit = () => {\n    setIsEditingCategory(false)\n    setTempCategory(null)\n  }\n\n  const formatAmount = (transaction: Transaction) => {\n    const amount = Math.abs(transaction.amount.amount)\n    const formatted = formatCurrency(amount, transaction.amount.currency, { showCents: true })\n    return transaction.type === 'income' ? `+${formatted}` : `-${formatted}`\n  }\n\n  const getAmountColor = (transaction: Transaction) => {\n    return transaction.type === 'income' ? 'text-green-600' : 'text-red-600'\n  }\n\n  const categories = Object.keys(CATEGORY_LABELS) as TransactionCategory[]\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <>\n          {/* Backdrop */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black/50 z-40\"\n            onClick={onClose}\n          />\n\n          {/* Drawer */}\n          <motion.div\n            initial={{ x: \"100%\" }}\n            animate={{ x: 0 }}\n            exit={{ x: \"100%\" }}\n            transition={{ type: \"spring\", damping: 30, stiffness: 300 }}\n            className={cn(\n              \"fixed right-0 top-0 h-full w-full max-w-md bg-background z-50 shadow-2xl\",\n              className\n            )}\n          >\n            <div className=\"flex flex-col h-full\">\n              {/* Header */}\n              <div className=\"flex items-center justify-between p-6 border-b\">\n                <h2 className=\"text-lg font-semibold\">Transaction Details</h2>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={onClose}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <X className=\"h-4 w-4\" />\n                </Button>\n              </div>\n\n              {/* Content */}\n              <div className=\"flex-1 overflow-y-auto p-6 space-y-6\">\n                {/* Basic Info */}\n                <Card>\n                  <CardHeader className=\"pb-3\">\n                    <CardTitle className=\"text-lg font-semibold\">Transaction Information</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {/* Description */}\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Description</label>\n                      <p className=\"text-sm mt-1 leading-relaxed\">{transaction.description}</p>\n                    </div>\n\n                    {/* Merchant */}\n                    {transaction.merchant && (\n                      <div>\n                        <label className=\"text-sm font-medium text-muted-foreground\">Merchant</label>\n                        <p className=\"text-sm mt-1 leading-relaxed\">{transaction.merchant}</p>\n                      </div>\n                    )}\n\n                    {/* Amount */}\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Amount</label>\n                      <p className={cn(\n                        \"text-lg font-semibold mt-1 leading-tight\",\n                        getAmountColor(transaction)\n                      )}>\n                        {formatAmount(transaction)}\n                      </p>\n                    </div>\n\n                    {/* Date */}\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Date</label>\n                      <p className=\"text-sm mt-1\">\n                        {new Date(transaction.date).toLocaleDateString('en-US', {\n                          weekday: 'long',\n                          year: 'numeric',\n                          month: 'long',\n                          day: 'numeric'\n                        })}\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Category */}\n                <Card>\n                  <CardHeader className=\"pb-3\">\n                    <CardTitle className=\"text-base\">Category</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {!isEditingCategory ? (\n                      <div className=\"flex items-center justify-between\">\n                        <Badge \n                          variant=\"outline\" \n                          className={cn(\n                            \"text-sm font-medium\",\n                            CATEGORY_COLORS[transaction.category]\n                          )}\n                        >\n                          {CATEGORY_LABELS[transaction.category]}\n                        </Badge>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => {\n                            setIsEditingCategory(true)\n                            setTempCategory(transaction.category)\n                          }}\n                          className=\"text-muted-foreground hover:text-foreground\"\n                        >\n                          <Edit className=\"h-3 w-3 mr-1\" />\n                          Change\n                        </Button>\n                      </div>\n                    ) : (\n                      <div className=\"space-y-3\">\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          {categories.map((category) => (\n                            <Button\n                              key={category}\n                              variant={tempCategory === category ? \"default\" : \"outline\"}\n                              size=\"sm\"\n                              onClick={() => setTempCategory(category)}\n                              className={cn(\n                                \"text-xs\",\n                                tempCategory === category\n                                  ? \"\"\n                                  : \"hover:bg-muted\"\n                              )}\n                            >\n                              {CATEGORY_LABELS[category]}\n                            </Button>\n                          ))}\n                        </div>\n                        <div className=\"flex gap-2\">\n                          <Button\n                            size=\"sm\"\n                            onClick={handleRecategorize}\n                            disabled={!tempCategory || tempCategory === transaction.category}\n                            className=\"flex-1\"\n                          >\n                            <Check className=\"h-3 w-3 mr-1\" />\n                            Save\n                          </Button>\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={handleCancelEdit}\n                            className=\"flex-1\"\n                          >\n                            <XIcon className=\"h-3 w-3 mr-1\" />\n                            Cancel\n                          </Button>\n                        </div>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n\n                {/* Additional Details */}\n                <Card>\n                  <CardHeader className=\"pb-3\">\n                    <CardTitle className=\"text-base\">Additional Details</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {/* Payment Method */}\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Payment Method</label>\n                      <p className=\"text-sm mt-1\">\n                        {PAYMENT_METHOD_LABELS[transaction.paymentMethod] || transaction.paymentMethod}\n                      </p>\n                    </div>\n\n                    {/* Status */}\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Status</label>\n                      <div className=\"mt-1\">\n                        <Badge \n                          variant=\"outline\" \n                          className={cn(\n                            \"text-xs font-medium\",\n                            STATUS_COLORS[transaction.status]\n                          )}\n                        >\n                          {STATUS_LABELS[transaction.status] || transaction.status}\n                        </Badge>\n                      </div>\n                    </div>\n\n                    {/* Location */}\n                    {transaction.location && (\n                      <div>\n                        <label className=\"text-sm font-medium text-muted-foreground\">Location</label>\n                        <p className=\"text-sm mt-1\">{transaction.location.name}</p>\n                        {transaction.location.address && (\n                          <p className=\"text-xs text-muted-foreground mt-1\">\n                            {transaction.location.address}\n                          </p>\n                        )}\n                      </div>\n                    )}\n\n                    {/* Tags */}\n                    {transaction.tags && transaction.tags.length > 0 && (\n                      <div>\n                        <label className=\"text-sm font-medium text-muted-foreground\">Tags</label>\n                        <div className=\"flex flex-wrap gap-1 mt-1\">\n                          {transaction.tags.map((tag) => (\n                            <Badge key={tag} variant=\"secondary\" className=\"text-xs\">\n                              {tag}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Notes */}\n                    {transaction.notes && (\n                      <div>\n                        <label className=\"text-sm font-medium text-muted-foreground\">Notes</label>\n                        <p className=\"text-sm mt-1\">{transaction.notes}</p>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n\n                {/* Raw Data */}\n                <Card>\n                  <CardHeader className=\"pb-3\">\n                    <CardTitle className=\"text-base\">Raw Data</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <pre className=\"text-xs bg-muted p-3 rounded-md overflow-x-auto\">\n                      {JSON.stringify(transaction, null, 2)}\n                    </pre>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </motion.div>\n        </>\n      )}\n    </AnimatePresence>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAOA;AACA;AAfA;;;;;;;;;;AAyBA,MAAM,kBAAuD;IAC3D,SAAS;IACT,OAAO;IACP,SAAS;IACT,MAAM;IACN,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,OAAO;AACT;AAEA,MAAM,kBAAuD;IAC3D,SAAS;IACT,OAAO;IACP,SAAS;IACT,MAAM;IACN,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,OAAO;AACT;AAEA,MAAM,wBAAgD;IACpD,aAAa;IACb,YAAY;IACZ,eAAe;IACf,MAAM;IACN,OAAO;IACP,OAAO;AACT;AAEA,MAAM,gBAAwC;IAC5C,SAAS;IACT,SAAS;IACT,WAAW;AACb;AAEA,MAAM,gBAAwC;IAC5C,SAAS;IACT,SAAS;IACT,WAAW;AACb;AAEO,SAAS,yBAAyB,EACvC,WAAW,EACX,MAAM,EACN,OAAO,EACP,cAAc,EACd,SAAS,EACqB;IAC9B,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,iNAAQ,EAAC;IAC3D,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAA6B;IAE7E,IAAI,CAAC,aAAa,OAAO;IAEzB,MAAM,qBAAqB;QACzB,IAAI,gBAAgB,gBAAgB;YAClC,eAAe,YAAY,EAAE,EAAE;YAC/B,qBAAqB;YACrB,gBAAgB;QAClB;IACF;IAEA,MAAM,mBAAmB;QACvB,qBAAqB;QACrB,gBAAgB;IAClB;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,SAAS,KAAK,GAAG,CAAC,YAAY,MAAM,CAAC,MAAM;QACjD,MAAM,YAAY,IAAA,mIAAc,EAAC,QAAQ,YAAY,MAAM,CAAC,QAAQ,EAAE;YAAE,WAAW;QAAK;QACxF,OAAO,YAAY,IAAI,KAAK,WAAW,CAAC,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC,EAAE,WAAW;IAC1E;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAO,YAAY,IAAI,KAAK,WAAW,mBAAmB;IAC5D;IAEA,MAAM,aAAa,OAAO,IAAI,CAAC;IAE/B,qBACE,8OAAC,4MAAe;kBACb,wBACC;;8BAEE,8OAAC,oMAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;oBAAE;oBACtB,SAAS;wBAAE,SAAS;oBAAE;oBACtB,MAAM;wBAAE,SAAS;oBAAE;oBACnB,WAAU;oBACV,SAAS;;;;;;8BAIX,8OAAC,oMAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,GAAG;oBAAO;oBACrB,SAAS;wBAAE,GAAG;oBAAE;oBAChB,MAAM;wBAAE,GAAG;oBAAO;oBAClB,YAAY;wBAAE,MAAM;wBAAU,SAAS;wBAAI,WAAW;oBAAI;oBAC1D,WAAW,IAAA,yHAAE,EACX,4EACA;8BAGF,cAAA,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAAwB;;;;;;kDACtC,8OAAC,4IAAM;wCACL,SAAQ;wCACR,MAAK;wCACL,SAAS;wCACT,WAAU;kDAEV,cAAA,8OAAC,iMAAC;4CAAC,WAAU;;;;;;;;;;;;;;;;;0CAKjB,8OAAC;gCAAI,WAAU;;kDAEb,8OAAC,wIAAI;;0DACH,8OAAC,8IAAU;gDAAC,WAAU;0DACpB,cAAA,8OAAC,6IAAS;oDAAC,WAAU;8DAAwB;;;;;;;;;;;0DAE/C,8OAAC,+IAAW;gDAAC,WAAU;;kEAErB,8OAAC;;0EACC,8OAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,8OAAC;gEAAE,WAAU;0EAAgC,YAAY,WAAW;;;;;;;;;;;;oDAIrE,YAAY,QAAQ,kBACnB,8OAAC;;0EACC,8OAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,8OAAC;gEAAE,WAAU;0EAAgC,YAAY,QAAQ;;;;;;;;;;;;kEAKrE,8OAAC;;0EACC,8OAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,8OAAC;gEAAE,WAAW,IAAA,yHAAE,EACd,4CACA,eAAe;0EAEd,aAAa;;;;;;;;;;;;kEAKlB,8OAAC;;0EACC,8OAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,8OAAC;gEAAE,WAAU;0EACV,IAAI,KAAK,YAAY,IAAI,EAAE,kBAAkB,CAAC,SAAS;oEACtD,SAAS;oEACT,MAAM;oEACN,OAAO;oEACP,KAAK;gEACP;;;;;;;;;;;;;;;;;;;;;;;;kDAOR,8OAAC,wIAAI;;0DACH,8OAAC,8IAAU;gDAAC,WAAU;0DACpB,cAAA,8OAAC,6IAAS;oDAAC,WAAU;8DAAY;;;;;;;;;;;0DAEnC,8OAAC,+IAAW;0DACT,CAAC,kCACA,8OAAC;oDAAI,WAAU;;sEACb,8OAAC,0IAAK;4DACJ,SAAQ;4DACR,WAAW,IAAA,yHAAE,EACX,uBACA,eAAe,CAAC,YAAY,QAAQ,CAAC;sEAGtC,eAAe,CAAC,YAAY,QAAQ,CAAC;;;;;;sEAExC,8OAAC,4IAAM;4DACL,SAAQ;4DACR,MAAK;4DACL,SAAS;gEACP,qBAAqB;gEACrB,gBAAgB,YAAY,QAAQ;4DACtC;4DACA,WAAU;;8EAEV,8OAAC,mNAAI;oEAAC,WAAU;;;;;;gEAAiB;;;;;;;;;;;;yEAKrC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;sEACZ,WAAW,GAAG,CAAC,CAAC,yBACf,8OAAC,4IAAM;oEAEL,SAAS,iBAAiB,WAAW,YAAY;oEACjD,MAAK;oEACL,SAAS,IAAM,gBAAgB;oEAC/B,WAAW,IAAA,yHAAE,EACX,WACA,iBAAiB,WACb,KACA;8EAGL,eAAe,CAAC,SAAS;mEAXrB;;;;;;;;;;sEAeX,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,4IAAM;oEACL,MAAK;oEACL,SAAS;oEACT,UAAU,CAAC,gBAAgB,iBAAiB,YAAY,QAAQ;oEAChE,WAAU;;sFAEV,8OAAC,6MAAK;4EAAC,WAAU;;;;;;wEAAiB;;;;;;;8EAGpC,8OAAC,4IAAM;oEACL,SAAQ;oEACR,MAAK;oEACL,SAAS;oEACT,WAAU;;sFAEV,8OAAC,iMAAK;4EAAC,WAAU;;;;;;wEAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kDAU9C,8OAAC,wIAAI;;0DACH,8OAAC,8IAAU;gDAAC,WAAU;0DACpB,cAAA,8OAAC,6IAAS;oDAAC,WAAU;8DAAY;;;;;;;;;;;0DAEnC,8OAAC,+IAAW;gDAAC,WAAU;;kEAErB,8OAAC;;0EACC,8OAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,8OAAC;gEAAE,WAAU;0EACV,qBAAqB,CAAC,YAAY,aAAa,CAAC,IAAI,YAAY,aAAa;;;;;;;;;;;;kEAKlF,8OAAC;;0EACC,8OAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,8OAAC;gEAAI,WAAU;0EACb,cAAA,8OAAC,0IAAK;oEACJ,SAAQ;oEACR,WAAW,IAAA,yHAAE,EACX,uBACA,aAAa,CAAC,YAAY,MAAM,CAAC;8EAGlC,aAAa,CAAC,YAAY,MAAM,CAAC,IAAI,YAAY,MAAM;;;;;;;;;;;;;;;;;oDAM7D,YAAY,QAAQ,kBACnB,8OAAC;;0EACC,8OAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,8OAAC;gEAAE,WAAU;0EAAgB,YAAY,QAAQ,CAAC,IAAI;;;;;;4DACrD,YAAY,QAAQ,CAAC,OAAO,kBAC3B,8OAAC;gEAAE,WAAU;0EACV,YAAY,QAAQ,CAAC,OAAO;;;;;;;;;;;;oDAOpC,YAAY,IAAI,IAAI,YAAY,IAAI,CAAC,MAAM,GAAG,mBAC7C,8OAAC;;0EACC,8OAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,8OAAC;gEAAI,WAAU;0EACZ,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,oBACrB,8OAAC,0IAAK;wEAAW,SAAQ;wEAAY,WAAU;kFAC5C;uEADS;;;;;;;;;;;;;;;;oDASnB,YAAY,KAAK,kBAChB,8OAAC;;0EACC,8OAAC;gEAAM,WAAU;0EAA4C;;;;;;0EAC7D,8OAAC;gEAAE,WAAU;0EAAgB,YAAY,KAAK;;;;;;;;;;;;;;;;;;;;;;;;kDAOtD,8OAAC,wIAAI;;0DACH,8OAAC,8IAAU;gDAAC,WAAU;0DACpB,cAAA,8OAAC,6IAAS;oDAAC,WAAU;8DAAY;;;;;;;;;;;0DAEnC,8OAAC,+IAAW;0DACV,cAAA,8OAAC;oDAAI,WAAU;8DACZ,KAAK,SAAS,CAAC,aAAa,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWzD","debugId":null}},
    {"offset": {"line": 3620, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/transactions/TransactionToolbar.tsx"],"sourcesContent":["\"use client\"\n\nimport React from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { \n  Plus,\n  Download,\n  Upload,\n  Settings,\n  Grid3X3,\n  List\n} from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface TransactionToolbarProps {\n  totalCount: number\n  filteredCount: number\n  density: 'comfortable' | 'compact'\n  onDensityChange: (density: 'comfortable' | 'compact') => void\n  onAddTransaction: () => void\n  onImportTransactions: () => void\n  onExportTransactions: () => void\n  onSettings: () => void\n  className?: string\n}\n\nexport function TransactionToolbar({\n  totalCount,\n  filteredCount,\n  density,\n  onDensityChange,\n  onAddTransaction,\n  onImportTransactions,\n  onExportTransactions,\n  onSettings,\n  className\n}: TransactionToolbarProps) {\n  const isFiltered = filteredCount !== totalCount\n\n  return (\n    <div className={cn(\n      \"flex items-center justify-between py-4\",\n      className\n    )}>\n      {/* Left side - Count and info */}\n      <div className=\"flex items-center gap-4\">\n        <div className=\"flex items-center gap-2\">\n          <h2 className=\"text-lg font-semibold\">Transactions</h2>\n          {isFiltered ? (\n            <div className=\"flex items-center gap-2\">\n              <Badge variant=\"secondary\">\n                {filteredCount} of {totalCount}\n              </Badge>\n              <span className=\"text-sm text-muted-foreground\">\n                transactions shown\n              </span>\n            </div>\n          ) : (\n            <Badge variant=\"outline\">\n              {totalCount} transactions\n            </Badge>\n          )}\n        </div>\n      </div>\n\n      {/* Right side - Actions */}\n      <div className=\"flex items-center gap-2\">\n        {/* Density Toggle */}\n        <div className=\"flex items-center border rounded-md\">\n          <Button\n            variant={density === 'comfortable' ? 'default' : 'ghost'}\n            size=\"sm\"\n            onClick={() => onDensityChange('comfortable')}\n            className=\"rounded-r-none border-r\"\n          >\n            <Grid3X3 className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            variant={density === 'compact' ? 'default' : 'ghost'}\n            size=\"sm\"\n            onClick={() => onDensityChange('compact')}\n            className=\"rounded-l-none\"\n          >\n            <List className=\"h-4 w-4\" />\n          </Button>\n        </div>\n\n        {/* Import/Export */}\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={onImportTransactions}\n          className=\"hidden sm:flex\"\n        >\n          <Upload className=\"h-4 w-4 mr-1\" />\n          Import\n        </Button>\n        \n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={onExportTransactions}\n          className=\"hidden sm:flex\"\n        >\n          <Download className=\"h-4 w-4 mr-1\" />\n          Export\n        </Button>\n\n        {/* Settings */}\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={onSettings}\n          className=\"hidden sm:flex\"\n        >\n          <Settings className=\"h-4 w-4\" />\n        </Button>\n\n        {/* Add Transaction */}\n        <Button onClick={onAddTransaction}>\n          <Plus className=\"h-4 w-4 mr-1\" />\n          Add Transaction\n        </Button>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAbA;;;;;;AA2BO,SAAS,mBAAmB,EACjC,UAAU,EACV,aAAa,EACb,OAAO,EACP,eAAe,EACf,gBAAgB,EAChB,oBAAoB,EACpB,oBAAoB,EACpB,UAAU,EACV,SAAS,EACe;IACxB,MAAM,aAAa,kBAAkB;IAErC,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAChB,0CACA;;0BAGA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAwB;;;;;;wBACrC,2BACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,0IAAK;oCAAC,SAAQ;;wCACZ;wCAAc;wCAAK;;;;;;;8CAEtB,8OAAC;oCAAK,WAAU;8CAAgC;;;;;;;;;;;iDAKlD,8OAAC,0IAAK;4BAAC,SAAQ;;gCACZ;gCAAW;;;;;;;;;;;;;;;;;;0BAOpB,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,4IAAM;gCACL,SAAS,YAAY,gBAAgB,YAAY;gCACjD,MAAK;gCACL,SAAS,IAAM,gBAAgB;gCAC/B,WAAU;0CAEV,cAAA,8OAAC,uNAAO;oCAAC,WAAU;;;;;;;;;;;0CAErB,8OAAC,4IAAM;gCACL,SAAS,YAAY,YAAY,YAAY;gCAC7C,MAAK;gCACL,SAAS,IAAM,gBAAgB;gCAC/B,WAAU;0CAEV,cAAA,8OAAC,0MAAI;oCAAC,WAAU;;;;;;;;;;;;;;;;;kCAKpB,8OAAC,4IAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,SAAS;wBACT,WAAU;;0CAEV,8OAAC,gNAAM;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAIrC,8OAAC,4IAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,SAAS;wBACT,WAAU;;0CAEV,8OAAC,sNAAQ;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAKvC,8OAAC,4IAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,SAAS;wBACT,WAAU;kCAEV,cAAA,8OAAC,sNAAQ;4BAAC,WAAU;;;;;;;;;;;kCAItB,8OAAC,4IAAM;wBAAC,SAAS;;0CACf,8OAAC,0MAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;;AAM3C","debugId":null}},
    {"offset": {"line": 3845, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/transactions/index.ts"],"sourcesContent":["export { TransactionTable } from './TransactionTable'\nexport { TransactionFilters } from './TransactionFilters'\nexport { TransactionDetailsDrawer } from './TransactionDetailsDrawer'\nexport { TransactionToolbar } from './TransactionToolbar'\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 3858, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/app/transactions/page.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useMemo } from \"react\"\n\nexport const dynamic = 'force-dynamic'\nimport { motion } from \"framer-motion\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Heading, Text } from \"@/components/ui/typography\"\nimport { useTransactions } from \"@/lib/hooks/use-transactions\"\nimport { useTransactionFilters } from \"@/lib/hooks/use-transaction-filters\"\nimport { \n  TransactionTable,\n  TransactionFilters,\n  TransactionDetailsDrawer,\n  TransactionToolbar\n} from \"@/components/transactions\"\nimport { Transaction, TransactionCategory } from \"@/lib/types\"\nimport { AlertCircle } from \"lucide-react\"\n\nexport default function TransactionsPage() {\n  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null)\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n\n  // Get all transactions (no pagination for now)\n  const { data: transactionsResponse, isLoading, error } = useTransactions(1, 1000)\n  const allTransactions = useMemo(() => transactionsResponse?.data || [], [transactionsResponse?.data])\n\n  // URL state management\n  const {\n    filters,\n    toggleCategory,\n    clearAllFilters,\n    updateFilters\n  } = useTransactionFilters()\n\n  // Filter transactions based on URL state\n  const filteredTransactions = useMemo(() => {\n    return allTransactions.filter((transaction: Transaction) => {\n      // Category filter\n      if (filters.categories.length > 0 && !filters.categories.includes(transaction.category)) {\n        return false\n      }\n\n      // Merchant filter\n      if (filters.merchant) {\n        const merchantText = (transaction.merchant || transaction.description).toLowerCase()\n        if (!merchantText.includes(filters.merchant.toLowerCase())) {\n          return false\n        }\n      }\n\n      // Date range filter\n      if (filters.dateFrom) {\n        const transactionDate = new Date(transaction.date)\n        const fromDate = new Date(filters.dateFrom)\n        if (transactionDate < fromDate) {\n          return false\n        }\n      }\n\n      if (filters.dateTo) {\n        const transactionDate = new Date(transaction.date)\n        const toDate = new Date(filters.dateTo)\n        if (transactionDate > toDate) {\n          return false\n        }\n      }\n\n      return true\n    })\n  }, [allTransactions, filters])\n\n  // Get unique categories for filter options\n  const availableCategories = useMemo(() => {\n    const categories = new Set<TransactionCategory>()\n    allTransactions.forEach(transaction => {\n      categories.add(transaction.category)\n    })\n    return Array.from(categories)\n  }, [allTransactions])\n\n  const handleRowClick = (transaction: Transaction) => {\n    setSelectedTransaction(transaction)\n    setIsDrawerOpen(true)\n  }\n\n  const handleRecategorize = (transactionId: string, newCategory: TransactionCategory) => {\n    // TODO: Implement recategorization API call\n    console.log('Recategorizing transaction:', transactionId, 'to:', newCategory)\n    // For now, just close the drawer\n    setIsDrawerOpen(false)\n  }\n\n  const handleAddTransaction = () => {\n    // TODO: Implement add transaction flow\n    console.log('Add transaction clicked')\n  }\n\n  const handleImportTransactions = () => {\n    // TODO: Implement import flow\n    console.log('Import transactions clicked')\n  }\n\n  const handleExportTransactions = () => {\n    // TODO: Implement export flow\n    console.log('Export transactions clicked')\n  }\n\n  const handleSettings = () => {\n    // TODO: Implement settings\n    console.log('Settings clicked')\n  }\n\n  if (error) {\n    return (\n      <Card className=\"card-standard\">\n        <CardContent className=\"p-12 text-center\">\n          <AlertCircle className=\"h-12 w-12 text-destructive mx-auto mb-4\" />\n          <Heading as=\"h2\" size=\"xl\" className=\"mb-2\">Error Loading Transactions</Heading>\n          <Text color=\"muted\">\n            There was a problem loading your transactions. Please try again.\n          </Text>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <main className=\"container-5xl py-8\">\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <Heading as=\"h1\" size=\"4xl\" className=\"mb-2 text-balance\">Transactions</Heading>\n          <Text color=\"muted\" size=\"lg\" className=\"text-pretty\">\n            View and manage all your financial transactions\n          </Text>\n        </motion.div>\n\n        {/* Toolbar */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3, delay: 0.1 }}\n        >\n          <TransactionToolbar\n            totalCount={allTransactions.length}\n            filteredCount={filteredTransactions.length}\n            density={filters.density}\n            onDensityChange={(density) => updateFilters({ density })}\n            onAddTransaction={handleAddTransaction}\n            onImportTransactions={handleImportTransactions}\n            onExportTransactions={handleExportTransactions}\n            onSettings={handleSettings}\n          />\n        </motion.div>\n\n        {/* Filters */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3, delay: 0.2 }}\n        >\n          <TransactionFilters\n            categories={availableCategories}\n            selectedCategories={filters.categories}\n            onCategoryToggle={toggleCategory}\n            merchantSearch={filters.merchant}\n            onMerchantSearchChange={(merchant) => updateFilters({ merchant })}\n            dateFrom={filters.dateFrom}\n            onDateFromChange={(dateFrom) => updateFilters({ dateFrom })}\n            dateTo={filters.dateTo}\n            onDateToChange={(dateTo) => updateFilters({ dateTo })}\n            onClearAll={clearAllFilters}\n          />\n        </motion.div>\n\n        {/* Table */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3, delay: 0.3 }}\n        >\n          <Card>\n            <CardContent className=\"p-0\">\n              {isLoading ? (\n                <div className=\"p-8\">\n                  <div className=\"space-y-4\">\n                    {Array.from({ length: 5 }).map((_, i) => (\n                      <div key={i} className=\"flex items-center space-x-4\">\n                        <div className=\"h-4 w-4 bg-muted animate-pulse rounded\" />\n                        <div className=\"flex-1 space-y-2\">\n                          <div className=\"h-4 bg-muted animate-pulse rounded w-1/4\" />\n                          <div className=\"h-3 bg-muted animate-pulse rounded w-1/6\" />\n                        </div>\n                        <div className=\"h-4 bg-muted animate-pulse rounded w-16\" />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <TransactionTable\n                  transactions={filteredTransactions}\n                  sortBy={filters.sortBy}\n                  sortOrder={filters.sortOrder}\n                  onSort={(column) => {\n                    const newOrder = filters.sortBy === column && filters.sortOrder === 'asc' ? 'desc' : 'asc'\n                    updateFilters({ sortBy: column, sortOrder: newOrder })\n                  }}\n                  density={filters.density}\n                  onRowClick={handleRowClick}\n                  selectedTransactionId={selectedTransaction?.id}\n                />\n              )}\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Details Drawer */}\n        <TransactionDetailsDrawer\n          transaction={selectedTransaction}\n          isOpen={isDrawerOpen}\n          onClose={() => {\n            setIsDrawerOpen(false)\n            setSelectedTransaction(null)\n          }}\n          onRecategorize={handleRecategorize}\n        />\n      </div>\n    </main>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}