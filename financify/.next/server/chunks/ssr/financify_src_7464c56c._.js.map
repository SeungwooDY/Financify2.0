{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/mock.ts"],"sourcesContent":["import { \r\n  Transaction, \r\n  MonthMetrics, \r\n  CopilotAdvice, \r\n  TransactionCategory,\r\n  TransactionType,\r\n  PaymentMethod,\r\n  TransactionQueryParams\r\n} from \"./types\"\r\n\r\n// ============================================================================\r\n// MOCK DATA GENERATORS\r\n// ============================================================================\r\n\r\n/**\r\n * Generate realistic student transactions for a given month\r\n * Simulates typical student spending patterns and income sources\r\n */\r\nexport function generateStudentTransactions(month: string): Transaction[] {\r\n  const [year, monthNum] = month.split('-').map(Number)\r\n  const endDate = new Date(year, monthNum, 0)\r\n  const daysInMonth = endDate.getDate()\r\n  \r\n  const transactions: Transaction[] = []\r\n  let transactionId = 1\r\n  \r\n  // Helper to create a transaction\r\n  const createTransaction = (\r\n    date: Date,\r\n    description: string,\r\n    amountCents: number,\r\n    category: TransactionCategory,\r\n    type: TransactionType,\r\n    paymentMethod: PaymentMethod,\r\n    merchant?: string,\r\n    tags: string[] = []\r\n  ): Transaction => ({\r\n    id: `txn_${transactionId++}`,\r\n    date: date.toISOString(),\r\n    description,\r\n    amount: { amount: amountCents, currency: \"USD\", symbol: \"$\" },\r\n    category,\r\n    type,\r\n    status: Math.random() > 0.1 ? \"cleared\" : \"pending\",\r\n    paymentMethod,\r\n    accountId: \"acc_student_checking\",\r\n    merchant,\r\n    location: Math.random() > 0.7 ? {\r\n      name: merchant || \"Unknown Location\",\r\n      address: \"123 University Ave, College Town, ST 12345\"\r\n    } : undefined,\r\n    tags,\r\n    notes: Math.random() > 0.8 ? \"Student transaction\" : undefined,\r\n    metadata: {\r\n      source: \"mock_data\",\r\n      generated: true\r\n    },\r\n    createdAt: date.toISOString(),\r\n    updatedAt: date.toISOString()\r\n  })\r\n  \r\n  // Generate transactions for each day\r\n  for (let day = 1; day <= daysInMonth; day++) {\r\n    const currentDate = new Date(year, monthNum - 1, day)\r\n    const dayOfWeek = currentDate.getDay()\r\n    const isWeekend = dayOfWeek === 0 || dayOfWeek === 6\r\n    \r\n    // Income transactions (bi-weekly paychecks, occasional refunds)\r\n    if (day === 1 || day === 15) {\r\n      // Bi-weekly paycheck from part-time job\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Part-time job paycheck\",\r\n        120000, // $1,200\r\n        \"income\",\r\n        \"income\",\r\n        \"bank_transfer\",\r\n        \"Campus Dining Services\"\r\n      ))\r\n    }\r\n    \r\n    if (day === 3 && Math.random() > 0.7) {\r\n      // Occasional refund\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Textbook refund\",\r\n        Math.floor(Math.random() * 50000) + 20000, // $200-700\r\n        \"refund\",\r\n        \"income\",\r\n        \"bank_transfer\",\r\n        \"University Bookstore\"\r\n      ))\r\n    }\r\n    \r\n    // Daily expenses\r\n    const dailyExpenseCount = isWeekend ? \r\n      Math.floor(Math.random() * 3) + 1 : // 1-3 on weekends\r\n      Math.floor(Math.random() * 2) + 1   // 1-2 on weekdays\r\n    \r\n    for (let i = 0; i < dailyExpenseCount; i++) {\r\n      const expenseTypes = getDailyExpenses(day, isWeekend)\r\n      const expense = expenseTypes[Math.floor(Math.random() * expenseTypes.length)]\r\n      \r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        expense.description,\r\n        expense.amount,\r\n        expense.category,\r\n        \"expense\",\r\n        expense.paymentMethod,\r\n        expense.merchant,\r\n        expense.tags\r\n      ))\r\n    }\r\n    \r\n    // Weekly recurring expenses\r\n    if (day % 7 === 0) {\r\n      // Weekly grocery shopping\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Weekly grocery shopping\",\r\n        Math.floor(Math.random() * 8000) + 4000, // $40-120\r\n        \"food\",\r\n        \"expense\",\r\n        \"debit_card\",\r\n        \"Campus Market\",\r\n        [\"groceries\", \"weekly\"]\r\n      ))\r\n    }\r\n    \r\n    // Monthly recurring expenses\r\n    if (day === 1) {\r\n      // Rent\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Monthly rent\",\r\n        120000, // $1,200\r\n        \"housing\",\r\n        \"expense\",\r\n        \"bank_transfer\",\r\n        \"University Housing\",\r\n        [\"rent\", \"monthly\"]\r\n      ))\r\n      \r\n      // Utilities\r\n      transactions.push(createTransaction(\r\n        currentDate,\r\n        \"Utilities\",\r\n        Math.floor(Math.random() * 3000) + 2000, // $20-50\r\n        \"utilities\",\r\n        \"expense\",\r\n        \"debit_card\",\r\n        \"Campus Utilities\",\r\n        [\"utilities\", \"monthly\"]\r\n      ))\r\n    }\r\n    \r\n    if (day === 5) {\r\n      // Tuition payment (if applicable)\r\n      if (Math.random() > 0.3) {\r\n        transactions.push(createTransaction(\r\n          currentDate,\r\n          \"Tuition payment\",\r\n          Math.floor(Math.random() * 200000) + 300000, // $3,000-5,000\r\n          \"tuition\",\r\n          \"expense\",\r\n          \"bank_transfer\",\r\n          \"University Bursar\",\r\n          [\"tuition\", \"education\"]\r\n        ))\r\n      }\r\n    }\r\n  }\r\n  \r\n  return transactions.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\r\n}\r\n\r\n/**\r\n * Get daily expense patterns based on day and weekend status\r\n */\r\nfunction getDailyExpenses(day: number, isWeekend: boolean): Array<{\r\n  description: string\r\n  amount: number\r\n  category: TransactionCategory\r\n  paymentMethod: PaymentMethod\r\n  merchant?: string\r\n  tags: string[]\r\n}> {\r\n  const baseExpenses = [\r\n    // Food expenses\r\n    {\r\n      description: \"Coffee\",\r\n      amount: Math.floor(Math.random() * 300) + 200, // $2-5\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Coffee Shop\",\r\n      tags: [\"coffee\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Lunch\",\r\n      amount: Math.floor(Math.random() * 800) + 500, // $5-13\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Dining Hall\",\r\n      tags: [\"lunch\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Dinner\",\r\n      amount: Math.floor(Math.random() * 1000) + 800, // $8-18\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Dining Hall\",\r\n      tags: [\"dinner\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Snacks\",\r\n      amount: Math.floor(Math.random() * 400) + 200, // $2-6\r\n      category: \"food\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Store\",\r\n      tags: [\"snacks\", \"daily\"]\r\n    },\r\n    \r\n    // Transportation\r\n    {\r\n      description: \"Bus fare\",\r\n      amount: 250, // $2.50\r\n      category: \"transportation\" as TransactionCategory,\r\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\r\n      merchant: \"City Transit\",\r\n      tags: [\"transport\", \"daily\"]\r\n    },\r\n    {\r\n      description: \"Uber ride\",\r\n      amount: Math.floor(Math.random() * 1500) + 800, // $8-23\r\n      category: \"transportation\" as TransactionCategory,\r\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\r\n      merchant: \"Uber\",\r\n      tags: [\"transport\", \"ride_share\"]\r\n    },\r\n    \r\n    // Entertainment\r\n    {\r\n      description: \"Movie ticket\",\r\n      amount: Math.floor(Math.random() * 500) + 800, // $8-13\r\n      category: \"entertainment\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Theater\",\r\n      tags: [\"entertainment\", \"movies\"]\r\n    },\r\n    {\r\n      description: \"Streaming subscription\",\r\n      amount: 1500, // $15\r\n      category: \"entertainment\" as TransactionCategory,\r\n      paymentMethod: \"credit_card\" as PaymentMethod,\r\n      merchant: \"Netflix\",\r\n      tags: [\"entertainment\", \"subscription\"]\r\n    },\r\n    \r\n    // Shopping\r\n    {\r\n      description: \"Textbook\",\r\n      amount: Math.floor(Math.random() * 15000) + 5000, // $50-200\r\n      category: \"books\" as TransactionCategory,\r\n      paymentMethod: \"credit_card\" as PaymentMethod,\r\n      merchant: \"University Bookstore\",\r\n      tags: [\"books\", \"education\"]\r\n    },\r\n    {\r\n      description: \"School supplies\",\r\n      amount: Math.floor(Math.random() * 2000) + 500, // $5-25\r\n      category: \"shopping\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Store\",\r\n      tags: [\"supplies\", \"education\"]\r\n    },\r\n    {\r\n      description: \"Clothing\",\r\n      amount: Math.floor(Math.random() * 8000) + 2000, // $20-100\r\n      category: \"shopping\" as TransactionCategory,\r\n      paymentMethod: \"credit_card\" as PaymentMethod,\r\n      merchant: \"Campus Clothing Store\",\r\n      tags: [\"clothing\", \"shopping\"]\r\n    },\r\n    \r\n    // Healthcare\r\n    {\r\n      description: \"Prescription\",\r\n      amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\r\n      category: \"healthcare\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Pharmacy\",\r\n      tags: [\"healthcare\", \"prescription\"]\r\n    },\r\n    {\r\n      description: \"Doctor visit\",\r\n      amount: Math.floor(Math.random() * 5000) + 2000, // $20-70\r\n      category: \"healthcare\" as TransactionCategory,\r\n      paymentMethod: \"debit_card\" as PaymentMethod,\r\n      merchant: \"Campus Health Center\",\r\n      tags: [\"healthcare\", \"medical\"]\r\n    }\r\n  ]\r\n  \r\n  if (isWeekend) {\r\n    // Weekend-specific expenses\r\n    baseExpenses.push(\r\n      {\r\n        description: \"Weekend brunch\",\r\n        amount: Math.floor(Math.random() * 1200) + 800, // $8-20\r\n        category: \"food\" as TransactionCategory,\r\n        paymentMethod: \"debit_card\" as PaymentMethod,\r\n        merchant: \"Campus Brunch Spot\",\r\n        tags: [\"food\", \"weekend\", \"brunch\"]\r\n      },\r\n      {\r\n        description: \"Party supplies\",\r\n        amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\r\n        category: \"entertainment\" as TransactionCategory,\r\n        paymentMethod: \"debit_card\" as PaymentMethod,\r\n        merchant: \"Campus Store\",\r\n        tags: [\"entertainment\", \"party\", \"weekend\"]\r\n      }\r\n    )\r\n  }\r\n  \r\n  return baseExpenses\r\n}\r\n\r\n/**\r\n * Generate monthly metrics based on transactions\r\n */\r\nexport function generateMonthMetrics(month: string, transactions: Transaction[]): MonthMetrics {\r\n  const incomeTransactions = transactions.filter(t => t.type === \"income\")\r\n  const expenseTransactions = transactions.filter(t => t.type === \"expense\")\r\n  \r\n  const totalIncome = incomeTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\r\n  const totalExpenses = expenseTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\r\n  const netIncome = totalIncome - totalExpenses\r\n  const savingsRate = totalIncome > 0 ? (netIncome / totalIncome) * 100 : 0\r\n  \r\n  // Category breakdown\r\n  const categoryMap = new Map<TransactionCategory, { amount: number; count: number }>()\r\n  expenseTransactions.forEach(t => {\r\n    const existing = categoryMap.get(t.category) || { amount: 0, count: 0 }\r\n    categoryMap.set(t.category, {\r\n      amount: existing.amount + t.amount.amount,\r\n      count: existing.count + 1\r\n    })\r\n  })\r\n  \r\n  const categoryBreakdown = Array.from(categoryMap.entries()).map(([category, data]) => ({\r\n    category,\r\n    amount: { amount: data.amount, currency: \"USD\", symbol: \"$\" },\r\n    percentage: totalExpenses > 0 ? (data.amount / totalExpenses) * 100 : 0,\r\n    transactionCount: data.count\r\n  })).sort((a, b) => b.amount.amount - a.amount.amount)\r\n  \r\n  // Spending patterns\r\n  const dailySpending = new Map<string, number>()\r\n  expenseTransactions.forEach(t => {\r\n    const date = t.date.split('T')[0]\r\n    dailySpending.set(date, (dailySpending.get(date) || 0) + t.amount.amount)\r\n  })\r\n  \r\n  const averageDailySpending = dailySpending.size > 0 ? \r\n    Array.from(dailySpending.values()).reduce((sum, amount) => sum + amount, 0) / dailySpending.size : 0\r\n  \r\n  const highestSpendingDay = Array.from(dailySpending.entries())\r\n    .sort((a, b) => b[1] - a[1])[0] || [\"\", 0]\r\n  \r\n  const mostFrequentCategory = categoryBreakdown\r\n    .sort((a, b) => b.transactionCount - a.transactionCount)[0]?.category || \"other\"\r\n  \r\n  const mostExpensiveCategory = categoryBreakdown[0]?.category || \"other\"\r\n  \r\n  // Generate alerts\r\n  const alerts = []\r\n  if (savingsRate < 10) {\r\n    alerts.push({\r\n      type: \"goal_missed\" as const,\r\n      category: \"general\" as TransactionCategory,\r\n      message: \"Your savings rate is below 10%. Consider reducing discretionary spending.\",\r\n      severity: \"medium\" as const\r\n    })\r\n  }\r\n  \r\n  if (totalExpenses > totalIncome * 0.9) {\r\n    alerts.push({\r\n      type: \"overspend\" as const,\r\n      category: \"general\" as TransactionCategory,\r\n      message: \"You're spending over 90% of your income. This leaves little room for savings.\",\r\n      severity: \"high\" as const\r\n    })\r\n  }\r\n  \r\n  const foodSpending = categoryBreakdown.find(c => c.category === \"food\")?.amount.amount || 0\r\n  if (foodSpending > totalExpenses * 0.4) {\r\n    alerts.push({\r\n      type: \"overspend\" as const,\r\n      category: \"food\" as TransactionCategory,\r\n      message: \"Food spending is over 40% of total expenses. Consider meal planning to reduce costs.\",\r\n      severity: \"medium\" as const\r\n    })\r\n  }\r\n  \r\n  return {\r\n    month,\r\n    totalIncome: { amount: totalIncome, currency: \"USD\", symbol: \"$\" },\r\n    totalExpenses: { amount: totalExpenses, currency: \"USD\", symbol: \"$\" },\r\n    netIncome: { amount: netIncome, currency: \"USD\", symbol: \"$\" },\r\n    savingsRate,\r\n    categoryBreakdown,\r\n    spendingPatterns: {\r\n      averageDailySpending: { amount: Math.round(averageDailySpending), currency: \"USD\", symbol: \"$\" },\r\n      highestSpendingDay: {\r\n        date: highestSpendingDay[0],\r\n        amount: { amount: highestSpendingDay[1], currency: \"USD\", symbol: \"$\" }\r\n      },\r\n      mostFrequentCategory,\r\n      mostExpensiveCategory\r\n    },\r\n    budgetComparison: [], // Would be populated with actual budget data\r\n    trends: {\r\n      weekOverWeek: {\r\n        incomeChange: Math.random() * 20 - 10, // -10% to +10%\r\n        expenseChange: Math.random() * 20 - 10\r\n      },\r\n      monthOverMonth: {\r\n        incomeChange: Math.random() * 30 - 15, // -15% to +15%\r\n        expenseChange: Math.random() * 30 - 15\r\n      }\r\n    },\r\n    alerts,\r\n    generatedAt: new Date().toISOString(),\r\n    trend_daily: [] // Will be populated by the calendar component\r\n  }\r\n}\r\n\r\n/**\r\n * Generate AI copilot advice based on metrics and transactions\r\n */\r\nexport function generateCopilotAdvice(\r\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\r\n  month: string,\r\n  metrics: MonthMetrics,\r\n  transactions: Transaction[]\r\n): CopilotAdvice {\r\n  const adviceTemplates = {\r\n    general: [\r\n      {\r\n        title: \"Financial Health Check\",\r\n        message: \"Your financial health looks good overall. Consider these small improvements to optimize your student budget.\",\r\n        priority: \"medium\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_1\",\r\n            title: \"Set up automatic savings\",\r\n            description: \"Transfer $50-100 to savings each month automatically\",\r\n            actionType: \"save_more\" as const,\r\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"easy\" as const,\r\n            timeframe: \"immediate\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    budget: [\r\n      {\r\n        title: \"Budget Optimization\",\r\n        message: \"Your current spending patterns show room for improvement. Here's how to optimize your budget.\",\r\n        priority: \"high\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_2\",\r\n            title: \"Reduce food spending\",\r\n            description: \"Meal prep on Sundays to cut food costs by 30%\",\r\n            actionType: \"reduce_spending\" as const,\r\n            estimatedImpact: { amount: 8000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"medium\" as const,\r\n            timeframe: \"short_term\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    savings: [\r\n      {\r\n        title: \"Boost Your Savings\",\r\n        message: \"Your savings rate could be improved. Here are some strategies to save more money.\",\r\n        priority: \"high\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_3\",\r\n            title: \"Open a high-yield savings account\",\r\n            description: \"Earn 4%+ interest on your emergency fund\",\r\n            actionType: \"save_more\" as const,\r\n            estimatedImpact: { amount: 2000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"easy\" as const,\r\n            timeframe: \"immediate\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    spending: [\r\n      {\r\n        title: \"Smart Spending Tips\",\r\n        message: \"You're spending more than necessary in some categories. Here's how to spend smarter.\",\r\n        priority: \"medium\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_4\",\r\n            title: \"Use student discounts\",\r\n            description: \"Take advantage of student pricing for software, transportation, and entertainment\",\r\n            actionType: \"reduce_spending\" as const,\r\n            estimatedImpact: { amount: 3000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"easy\" as const,\r\n            timeframe: \"immediate\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    debt: [\r\n      {\r\n        title: \"Debt Management\",\r\n        message: \"If you have student loans or credit card debt, here's how to manage it effectively.\",\r\n        priority: \"urgent\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_5\",\r\n            title: \"Pay more than minimum\",\r\n            description: \"Even $25 extra per month can save thousands in interest\",\r\n            actionType: \"pay_debt\" as const,\r\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"medium\" as const,\r\n            timeframe: \"long_term\" as const\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    investment: [\r\n      {\r\n        title: \"Start Investing Early\",\r\n        message: \"Even small amounts invested now can grow significantly over time.\",\r\n        priority: \"low\" as const,\r\n        recommendations: [\r\n          {\r\n            id: \"rec_6\",\r\n            title: \"Open a Roth IRA\",\r\n            description: \"Start with $25/month in a low-cost index fund\",\r\n            actionType: \"save_more\" as const,\r\n            estimatedImpact: { amount: 10000, currency: \"USD\", symbol: \"$\" },\r\n            difficulty: \"hard\" as const,\r\n            timeframe: \"long_term\" as const\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n  \r\n  const template = adviceTemplates[mode][0]\r\n  const relevantTransactionIds = transactions\r\n    .filter(t => t.type === \"expense\")\r\n    .slice(0, 5)\r\n    .map(t => t.id)\r\n  \r\n  return {\r\n    id: `advice_${Date.now()}`,\r\n    mode,\r\n    title: template.title,\r\n    message: template.message,\r\n    priority: template.priority,\r\n    category: \"general\",\r\n    recommendations: template.recommendations,\r\n    insights: [\r\n      {\r\n        metric: \"Savings Rate\",\r\n        value: `${metrics.savingsRate.toFixed(1)}%`,\r\n        trend: metrics.savingsRate > 20 ? \"up\" : \"down\",\r\n        significance: \"high\"\r\n      },\r\n      {\r\n        metric: \"Monthly Expenses\",\r\n        value: `$${(metrics.totalExpenses.amount / 100).toFixed(0)}`,\r\n        trend: \"stable\",\r\n        significance: \"medium\"\r\n      }\r\n    ],\r\n    context: {\r\n      month,\r\n      relevantTransactions: relevantTransactionIds,\r\n      userProfile: {\r\n        studentType: \"undergraduate\",\r\n        incomeLevel: \"medium\",\r\n        spendingStyle: \"moderate\"\r\n      }\r\n    },\r\n    generatedAt: new Date().toISOString(),\r\n    expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString() // 7 days\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// MOCK DATA STORAGE\r\n// ============================================================================\r\n\r\n/**\r\n * In-memory storage for mock data\r\n * In production, this would be replaced with actual database calls\r\n */\r\nclass MockDataStore {\r\n  private transactions: Map<string, Transaction[]> = new Map()\r\n  private metrics: Map<string, MonthMetrics> = new Map()\r\n  private advice: Map<string, CopilotAdvice[]> = new Map()\r\n  \r\n  constructor() {\r\n    // Pre-generate data for current month and previous month\r\n    const currentMonth = new Date().toISOString().slice(0, 7)\r\n    const lastMonth = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().slice(0, 7)\r\n    \r\n    this.generateMonthData(currentMonth)\r\n    this.generateMonthData(lastMonth)\r\n    \r\n    // Also generate data for a few months back to ensure we have data\r\n    const monthsBack = ['2024-12', '2025-01', '2025-02', '2025-03', '2025-04', '2025-05', '2025-06', '2025-07', '2025-08']\r\n    monthsBack.forEach(month => this.generateMonthData(month))\r\n  }\r\n  \r\n  private generateMonthData(month: string) {\r\n    const transactions = generateStudentTransactions(month)\r\n    const metrics = generateMonthMetrics(month, transactions)\r\n    \r\n    this.transactions.set(month, transactions)\r\n    this.metrics.set(month, metrics)\r\n  }\r\n  \r\n  getTransactions(month: string): Transaction[] {\r\n    if (!this.transactions.has(month)) {\r\n      this.generateMonthData(month)\r\n    }\r\n    return this.transactions.get(month) || []\r\n  }\r\n  \r\n  getMetrics(month: string): MonthMetrics | null {\r\n    if (!this.metrics.has(month)) {\r\n      this.generateMonthData(month)\r\n    }\r\n    return this.metrics.get(month) || null\r\n  }\r\n  \r\n  getAdvice(mode: string, month: string): CopilotAdvice[] {\r\n    const key = `${mode}_${month}`\r\n    if (!this.advice.has(key)) {\r\n      const transactions = this.getTransactions(month)\r\n      const metrics = this.getMetrics(month)\r\n      if (metrics) {\r\n        const advice = generateCopilotAdvice(\r\n          mode as \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\r\n          month,\r\n          metrics,\r\n          transactions\r\n        )\r\n        this.advice.set(key, [advice])\r\n      }\r\n    }\r\n    return this.advice.get(key) || []\r\n  }\r\n}\r\n\r\n// Global mock data store instance\r\nexport const mockDataStore = new MockDataStore()\r\n\r\n// ============================================================================\r\n// UTILITY FUNCTIONS\r\n// ============================================================================\r\n\r\n/**\r\n * Filter transactions based on query parameters\r\n */\r\nexport function filterTransactions(\r\n  transactions: Transaction[],\r\n  params: TransactionQueryParams\r\n): Transaction[] {\r\n  let filtered = [...transactions]\r\n  \r\n  if (params.category) {\r\n    filtered = filtered.filter(t => t.category === params.category)\r\n  }\r\n  \r\n  if (params.type) {\r\n    filtered = filtered.filter(t => t.type === params.type)\r\n  }\r\n  \r\n  if (params.status) {\r\n    filtered = filtered.filter(t => t.status === params.status)\r\n  }\r\n  \r\n  if (params.minAmount !== undefined) {\r\n    filtered = filtered.filter(t => t.amount.amount >= params.minAmount!)\r\n  }\r\n  \r\n  if (params.maxAmount !== undefined) {\r\n    filtered = filtered.filter(t => t.amount.amount <= params.maxAmount!)\r\n  }\r\n  \r\n  if (params.search) {\r\n    const searchLower = params.search.toLowerCase()\r\n    filtered = filtered.filter(t => \r\n      t.description.toLowerCase().includes(searchLower) ||\r\n      t.merchant?.toLowerCase().includes(searchLower) ||\r\n      t.notes?.toLowerCase().includes(searchLower)\r\n    )\r\n  }\r\n  \r\n  if (params.tags && params.tags.length > 0) {\r\n    filtered = filtered.filter(t => \r\n      params.tags!.some(tag => t.tags.includes(tag))\r\n    )\r\n  }\r\n  \r\n  // Sorting\r\n  if (params.sortBy) {\r\n    filtered.sort((a, b) => {\r\n      let aVal: string | number, bVal: string | number\r\n      \r\n      switch (params.sortBy) {\r\n        case \"date\":\r\n          aVal = new Date(a.date).getTime()\r\n          bVal = new Date(b.date).getTime()\r\n          break\r\n        case \"amount\":\r\n          aVal = a.amount.amount\r\n          bVal = b.amount.amount\r\n          break\r\n        case \"description\":\r\n          aVal = a.description\r\n          bVal = b.description\r\n          break\r\n        default:\r\n          return 0\r\n      }\r\n      \r\n      if (params.sortOrder === \"desc\") {\r\n        return bVal > aVal ? 1 : -1\r\n      } else {\r\n        return aVal > bVal ? 1 : -1\r\n      }\r\n    })\r\n  }\r\n  \r\n  return filtered\r\n}\r\n\r\n/**\r\n * Paginate results\r\n */\r\nexport function paginateResults<T>(\r\n  items: T[],\r\n  page: number = 1,\r\n  limit: number = 20\r\n): { items: T[]; total: number; page: number; totalPages: number } {\r\n  const startIndex = (page - 1) * limit\r\n  const endIndex = startIndex + limit\r\n  const paginatedItems = items.slice(startIndex, endIndex)\r\n  \r\n  return {\r\n    items: paginatedItems,\r\n    total: items.length,\r\n    page,\r\n    totalPages: Math.ceil(items.length / limit)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/api.ts"],"sourcesContent":["import { \r\n  Transaction, \r\n  MonthMetrics, \r\n  CopilotAdvice, \r\n  ApiResponse, \r\n  TransactionQueryParams,\r\n  CurrencyFormatOptions,\r\n  User\r\n} from \"./types\"\r\nimport { mockDataStore, filterTransactions, paginateResults } from \"./mock\"\r\n\r\n// ============================================================================\r\n// API CONFIGURATION\r\n// ============================================================================\r\n\r\n/**\r\n * API Configuration\r\n * \r\n * To swap to real endpoints later:\r\n * 1. Update BASE_URL to your API server\r\n * 2. Replace mock data calls with actual HTTP requests\r\n * 3. Update error handling for network failures\r\n * 4. Add authentication headers if needed\r\n */\r\nconst API_CONFIG = {\r\n  BASE_URL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001/api\",\r\n  TIMEOUT: 10000, // 10 seconds\r\n  RETRY_ATTEMPTS: 3,\r\n  RETRY_DELAY: 1000, // 1 second\r\n}\r\n\r\n// ============================================================================\r\n// HTTP CLIENT\r\n// ============================================================================\r\n\r\n/**\r\n * Generic HTTP client with error handling and retries\r\n * \r\n * In production, replace with your preferred HTTP client (axios, fetch, etc.)\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nclass ApiClient {\r\n  private async request<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {}\r\n  ): Promise<ApiResponse<T>> {\r\n    const url = `${API_CONFIG.BASE_URL}${endpoint}`\r\n    \r\n    const defaultOptions: RequestInit = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Add authentication headers here if needed\r\n        // 'Authorization': `Bearer ${getAuthToken()}`,\r\n      },\r\n      ...options,\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(url, defaultOptions)\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\r\n      }\r\n      \r\n      const data = await response.json()\r\n      return {\r\n        success: true,\r\n        data,\r\n        error: null\r\n      }\r\n    } catch (error) {\r\n      console.error(`API Error for ${endpoint}:`, error)\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'NETWORK_ERROR',\r\n          message: error instanceof Error ? error.message : 'Unknown error',\r\n          details: { endpoint, options },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  async get<T>(endpoint: string, params?: Record<string, string>): Promise<ApiResponse<T>> {\r\n    const url = params ? `${endpoint}?${new URLSearchParams(params)}` : endpoint\r\n    return this.request<T>(url, { method: 'GET' })\r\n  }\r\n  \r\n  async post<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      body: data ? JSON.stringify(data) : undefined\r\n    })\r\n  }\r\n  \r\n  async put<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PUT',\r\n      body: data ? JSON.stringify(data) : undefined\r\n    })\r\n  }\r\n  \r\n  async delete<T>(endpoint: string): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, { method: 'DELETE' })\r\n  }\r\n}\r\n\r\n// Global API client instance\r\n// const apiClient = new ApiClient() // Uncomment when switching to real API\r\n\r\n// ============================================================================\r\n// MOCK API IMPLEMENTATION\r\n// ============================================================================\r\n\r\n/**\r\n * Mock API implementation using in-memory data\r\n * \r\n * To replace with real API:\r\n * 1. Replace mockDataStore calls with apiClient calls\r\n * 2. Update response format to match your API\r\n * 3. Add proper error handling for network failures\r\n * 4. Implement caching if needed\r\n */\r\n\r\n/**\r\n * Fetch monthly metrics for a specific month\r\n * \r\n * @param month - Month in YYYY-MM format\r\n * @returns Promise<ApiResponse<MonthMetrics>>\r\n * \r\n * Real API endpoint: GET /api/metrics/{month}\r\n */\r\nexport async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\r\n  try {\r\n    console.log('Fetching metrics for month:', month)\r\n    \r\n    // Validate month format\r\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\r\n      console.error('Invalid month format:', month)\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'INVALID_MONTH_FORMAT',\r\n          message: 'Month must be in YYYY-MM format',\r\n          details: { month },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n    \r\n    // In production, replace with:\r\n    // return apiClient.get<MonthMetrics>(`/metrics/${month}`)\r\n    \r\n    const metrics = mockDataStore.getMetrics(month)\r\n    console.log('Retrieved metrics:', metrics ? 'Found' : 'Not found')\r\n    \r\n    if (!metrics) {\r\n      console.error('No metrics found for month:', month)\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'METRICS_NOT_FOUND',\r\n          message: `No metrics found for month ${month}`,\r\n          details: { month },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n    \r\n    console.log('Returning metrics successfully')\r\n    return {\r\n      success: true,\r\n      data: metrics,\r\n      error: null\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching month metrics:', error)\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'INTERNAL_ERROR',\r\n        message: 'Failed to fetch month metrics',\r\n        details: { month, error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch transactions with optional filtering and pagination\r\n * \r\n * @param params - Query parameters for filtering and pagination\r\n * @returns Promise<ApiResponse<Transaction[]>>\r\n * \r\n * Real API endpoint: GET /api/transactions?{params}\r\n */\r\nexport async function fetchTransactions(\r\n  params: TransactionQueryParams = {}\r\n): Promise<ApiResponse<Transaction[]>> {\r\n  try {\r\n    const { month = new Date().toISOString().slice(0, 7), page = 1, limit = 20, ...filters } = params\r\n    \r\n    // In production, replace with:\r\n    // const queryParams = new URLSearchParams()\r\n    // Object.entries(params).forEach(([key, value]) => {\r\n    //   if (value !== undefined) {\r\n    //     queryParams.append(key, String(value))\r\n    //   }\r\n    // })\r\n    // return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\r\n    \r\n    const allTransactions = mockDataStore.getTransactions(month)\r\n    const filteredTransactions = filterTransactions(allTransactions, filters)\r\n    const paginatedResult = paginateResults(filteredTransactions, page, limit)\r\n    \r\n    return {\r\n      success: true,\r\n      data: paginatedResult.items,\r\n      error: null,\r\n      metadata: {\r\n        total: paginatedResult.total,\r\n        page: paginatedResult.page,\r\n        limit,\r\n        hasMore: paginatedResult.page < paginatedResult.totalPages\r\n      }\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'INTERNAL_ERROR',\r\n        message: 'Failed to fetch transactions',\r\n        details: { params, error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch AI copilot advice for a specific mode and month\r\n * \r\n * @param mode - Advice mode (general, budget, savings, etc.)\r\n * @param month - Month in YYYY-MM format\r\n * @returns Promise<ApiResponse<CopilotAdvice[]>>\r\n * \r\n * Real API endpoint: GET /api/advice/{mode}?month={month}\r\n */\r\nexport async function fetchAdvice(\r\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\r\n  month: string = new Date().toISOString().slice(0, 7)\r\n): Promise<ApiResponse<CopilotAdvice[]>> {\r\n  try {\r\n    // Validate month format\r\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: {\r\n          code: 'INVALID_MONTH_FORMAT',\r\n          message: 'Month must be in YYYY-MM format',\r\n          details: { month },\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n    }\r\n    \r\n    // In production, replace with:\r\n    // return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\r\n    \r\n    const advice = mockDataStore.getAdvice(mode, month)\r\n    \r\n    return {\r\n      success: true,\r\n      data: advice,\r\n      error: null\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'INTERNAL_ERROR',\r\n        message: 'Failed to fetch advice',\r\n        details: { mode, month, error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function fetchCurrentUser(): Promise<ApiResponse<User>> {\r\n  try {\r\n    // In production, replace with:\r\n    // return apiClient.get<User>(\"/user/me\")\r\n    \r\n    // Mock user data\r\n    const user: User = {\r\n      id: \"user_1\",\r\n      firstName: \"John\",\r\n      lastName: \"Doe\",\r\n      email: \"john.doe@example.com\",\r\n      avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=32&h=32&fit=crop&crop=face\",\r\n      preferences: {\r\n        currency: \"USD\",\r\n        dateFormat: \"MM/DD/YYYY\",\r\n        timezone: \"America/New_York\",\r\n        notifications: {\r\n          email: true,\r\n          push: true,\r\n          sms: false,\r\n        },\r\n      },\r\n      createdAt: \"2024-01-01T00:00:00Z\",\r\n      updatedAt: new Date().toISOString(),\r\n    }\r\n    \r\n    return {\r\n      success: true,\r\n      data: user,\r\n      error: null,\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching user:\", error)\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: {\r\n        code: 'USER_FETCH_ERROR',\r\n        message: \"Failed to fetch user\",\r\n        details: { error: error instanceof Error ? error.message : 'Unknown error' },\r\n        timestamp: new Date().toISOString()\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// CURRENCY UTILITIES\r\n// ============================================================================\r\n\r\n/**\r\n * Format currency amount for display\r\n * \r\n * @param amount - Amount in cents\r\n * @param currency - Currency code (default: USD)\r\n * @param options - Formatting options\r\n * @returns Formatted currency string\r\n */\r\nexport function formatCurrency(\r\n  amount: number,\r\n  currency: string = \"USD\",\r\n  options: CurrencyFormatOptions = {}\r\n): string {\r\n  const {\r\n    showSymbol = true,\r\n    showCents = true,\r\n    locale = \"en-US\",\r\n    compact = false\r\n  } = options\r\n  \r\n  const amountInDollars = amount / 100\r\n  const currencySymbol = getCurrencySymbol(currency)\r\n  \r\n  const formatter = new Intl.NumberFormat(locale, {\r\n    style: \"currency\",\r\n    currency,\r\n    minimumFractionDigits: showCents ? 2 : 0,\r\n    maximumFractionDigits: showCents ? 2 : 0,\r\n    notation: compact ? \"compact\" : \"standard\"\r\n  })\r\n  \r\n  let formatted = formatter.format(amountInDollars)\r\n  \r\n  if (!showSymbol) {\r\n    formatted = formatted.replace(currencySymbol, \"\").trim()\r\n  }\r\n  \r\n  return formatted\r\n}\r\n\r\n/**\r\n * Get currency symbol for a given currency code\r\n */\r\nexport function getCurrencySymbol(currency: string): string {\r\n  const symbols: Record<string, string> = {\r\n    USD: \"$\",\r\n    EUR: \"€\",\r\n    GBP: \"£\",\r\n    JPY: \"¥\",\r\n    CAD: \"C$\",\r\n    AUD: \"A$\",\r\n    CHF: \"CHF\",\r\n    CNY: \"¥\",\r\n    INR: \"₹\",\r\n    BRL: \"R$\",\r\n    MXN: \"$\",\r\n    KRW: \"₩\",\r\n    SGD: \"S$\",\r\n    HKD: \"HK$\",\r\n    NOK: \"kr\",\r\n    SEK: \"kr\",\r\n    DKK: \"kr\",\r\n    PLN: \"zł\",\r\n    CZK: \"Kč\",\r\n    HUF: \"Ft\",\r\n    RON: \"lei\",\r\n    BGN: \"лв\",\r\n    HRK: \"kn\",\r\n    RUB: \"₽\",\r\n    TRY: \"₺\",\r\n    ZAR: \"R\",\r\n    ILS: \"₪\",\r\n    AED: \"د.إ\",\r\n    SAR: \"﷼\",\r\n    QAR: \"﷼\",\r\n    KWD: \"د.ك\",\r\n    BHD: \"د.ب\",\r\n    OMR: \"﷼\",\r\n    JOD: \"د.ا\",\r\n    LBP: \"ل.ل\",\r\n    EGP: \"£\",\r\n    MAD: \"د.م.\",\r\n    TND: \"د.ت\",\r\n    DZD: \"د.ج\",\r\n    LYD: \"ل.د\",\r\n    SDG: \"ج.س.\",\r\n    ETB: \"Br\",\r\n    KES: \"KSh\",\r\n    UGX: \"USh\",\r\n    TZS: \"TSh\",\r\n    ZMW: \"ZK\",\r\n    BWP: \"P\",\r\n    SZL: \"L\",\r\n    LSL: \"L\",\r\n    NAD: \"N$\",\r\n    AOA: \"Kz\",\r\n    MZN: \"MT\",\r\n    ZWL: \"Z$\",\r\n    GHS: \"₵\",\r\n    NGN: \"₦\",\r\n    XOF: \"CFA\",\r\n    XAF: \"FCFA\",\r\n    CDF: \"FC\",\r\n    RWF: \"RF\",\r\n    BIF: \"FBu\",\r\n    KMF: \"CF\",\r\n    DJF: \"Fdj\",\r\n    SOS: \"S\",\r\n    ERN: \"Nfk\",\r\n    SLL: \"Le\",\r\n    GMD: \"D\",\r\n    GNF: \"FG\",\r\n    LRD: \"L$\",\r\n    CVE: \"$\",\r\n    STN: \"Db\",\r\n    MRO: \"UM\",\r\n    MGA: \"Ar\",\r\n    SCR: \"₨\",\r\n    MUR: \"₨\",\r\n    YER: \"﷼\",\r\n    AFN: \"؋\",\r\n    PKR: \"₨\",\r\n    LKR: \"₨\",\r\n    NPR: \"₨\",\r\n    BDT: \"৳\",\r\n    MMK: \"K\",\r\n    THB: \"฿\",\r\n    LAK: \"₭\",\r\n    KHR: \"៛\",\r\n    VND: \"₫\",\r\n    IDR: \"Rp\",\r\n    MYR: \"RM\",\r\n    PHP: \"₱\",\r\n    TWD: \"NT$\",\r\n    MOP: \"MOP$\",\r\n    BND: \"B$\",\r\n    FJD: \"FJ$\",\r\n    PGK: \"K\",\r\n    WST: \"WS$\",\r\n    TOP: \"T$\",\r\n    VUV: \"Vt\",\r\n    SBD: \"SI$\",\r\n    NZD: \"NZ$\",\r\n    XPF: \"₣\",\r\n    ARS: \"$\",\r\n    BOB: \"Bs\",\r\n    CLP: \"$\",\r\n    COP: \"$\",\r\n    PYG: \"₲\",\r\n    PEN: \"S/\",\r\n    UYU: \"$U\",\r\n    VES: \"Bs.S\",\r\n    GYD: \"G$\",\r\n    SRD: \"$\",\r\n    TTD: \"TT$\",\r\n    BBD: \"Bds$\",\r\n    JMD: \"J$\",\r\n    BZD: \"BZ$\",\r\n    GTQ: \"Q\",\r\n    HNL: \"L\",\r\n    NIO: \"C$\",\r\n    CRC: \"₡\",\r\n    PAB: \"B/.\",\r\n    DOP: \"RD$\",\r\n    HTG: \"G\",\r\n    CUP: \"$\",\r\n    XCD: \"$\",\r\n    AWG: \"ƒ\",\r\n    BMD: \"$\",\r\n    KYD: \"$\",\r\n    FKP: \"£\",\r\n    SHP: \"£\",\r\n    GIP: \"£\",\r\n    JEP: \"£\",\r\n    GGP: \"£\",\r\n    IMP: \"£\",\r\n  }\r\n  \r\n  return symbols[currency] || currency\r\n}\r\n\r\n/**\r\n * Parse currency string to cents\r\n * \r\n * @param currencyString - Formatted currency string (e.g., \"$123.45\")\r\n * @returns Amount in cents\r\n */\r\nexport function parseCurrencyToCents(currencyString: string): number {\r\n  // Remove currency symbols and non-numeric characters except decimal point\r\n  const cleaned = currencyString.replace(/[^\\d.-]/g, \"\")\r\n  const amount = parseFloat(cleaned)\r\n  return Math.round(amount * 100)\r\n}\r\n\r\n/**\r\n * Convert cents to dollars\r\n */\r\nexport function centsToDollars(cents: number): number {\r\n  return cents / 100\r\n}\r\n\r\n/**\r\n * Convert dollars to cents\r\n */\r\nexport function dollarsToCents(dollars: number): number {\r\n  return Math.round(dollars * 100)\r\n}\r\n\r\n// ============================================================================\r\n// API MIGRATION GUIDE\r\n// ============================================================================\r\n\r\n/**\r\n * MIGRATION GUIDE: How to swap to real API endpoints\r\n * \r\n * 1. Update API_CONFIG.BASE_URL to your production API URL\r\n * 2. Replace mock data calls with actual HTTP requests:\r\n *    - mockDataStore.getMetrics() → apiClient.get('/metrics/{month}')\r\n *    - mockDataStore.getTransactions() → apiClient.get('/transactions')\r\n *    - mockDataStore.getAdvice() → apiClient.get('/advice/{mode}')\r\n * \r\n * 3. Update error handling for network failures\r\n * 4. Add authentication if needed:\r\n *    - Add auth token to headers\r\n *    - Implement token refresh logic\r\n *    - Handle 401/403 responses\r\n * \r\n * 5. Add caching if needed:\r\n *    - Implement response caching\r\n *    - Add cache invalidation\r\n *    - Handle stale data\r\n * \r\n * 6. Add request/response interceptors for:\r\n *    - Logging\r\n *    - Error reporting\r\n *    - Performance monitoring\r\n * \r\n * Example real API implementation:\r\n * \r\n * export async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\r\n *   return apiClient.get<MonthMetrics>(`/metrics/${month}`)\r\n * }\r\n * \r\n * export async function fetchTransactions(params: TransactionQueryParams): Promise<ApiResponse<Transaction[]>> {\r\n *   const queryParams = new URLSearchParams()\r\n *   Object.entries(params).forEach(([key, value]) => {\r\n *     if (value !== undefined) {\r\n *       queryParams.append(key, String(value))\r\n *     }\r\n *   })\r\n *   return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\r\n * }\r\n * \r\n * export async function fetchAdvice(mode: string, month: string): Promise<ApiResponse<CopilotAdvice[]>> {\r\n *   return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\r\n * }\r\n */\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1229, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/wrapped/WrappedSummaryCard.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { motion } from \"framer-motion\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { MonthMetrics } from \"@/lib/types\"\r\nimport { formatCurrency } from \"@/lib/api\"\r\nimport { TrendingUp, TrendingDown, DollarSign, PiggyBank } from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface WrappedSummaryCardProps {\r\n  metrics: MonthMetrics\r\n  className?: string\r\n}\r\n\r\nexport function WrappedSummaryCard({ metrics, className }: WrappedSummaryCardProps) {\r\n  const isPositiveNetIncome = metrics.netIncome.amount >= 0\r\n  const isGoodSavingsRate = metrics.savingsRate >= 20\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6, delay: 0.1 }}\r\n      className={cn(\"relative\", className)}\r\n    >\r\n      {/* Ambient gradient background */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-br from-blue-50/50 via-purple-50/30 to-pink-50/50 rounded-xl blur-xl -z-10\" />\r\n      \r\n      <Card className=\"relative overflow-hidden border-0 bg-gradient-to-br from-white/90 to-white/70 backdrop-blur-sm shadow-xl\">\r\n        <CardContent className=\"p-8\">\r\n          {/* Header */}\r\n          <motion.div\r\n            initial={{ opacity: 0, x: -20 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.2 }}\r\n            className=\"mb-6\"\r\n          >\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\r\n              Your {new Date(metrics.month + '-01').toLocaleDateString('en-US', { month: 'long', year: 'numeric' })} Wrapped\r\n            </h2>\r\n            <p className=\"text-gray-600 text-sm\">\r\n              A complete breakdown of your financial journey this month\r\n            </p>\r\n          </motion.div>\r\n\r\n          {/* Key Metrics Grid */}\r\n          <div className=\"grid grid-cols-2 gap-6\">\r\n            {/* Net Income */}\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.4, delay: 0.3 }}\r\n              className=\"space-y-2\"\r\n            >\r\n              <div className=\"flex items-center gap-2\">\r\n                <DollarSign className=\"h-5 w-5 text-gray-600\" />\r\n                <span className=\"text-sm font-medium text-gray-600\">Net Income</span>\r\n              </div>\r\n              <div className={cn(\r\n                \"text-3xl font-bold\",\r\n                isPositiveNetIncome ? \"text-green-600\" : \"text-red-600\"\r\n              )}>\r\n                {formatCurrency(metrics.netIncome.amount, metrics.netIncome.currency)}\r\n              </div>\r\n              <div className=\"flex items-center gap-1 text-xs\">\r\n                {isPositiveNetIncome ? (\r\n                  <TrendingUp className=\"h-3 w-3 text-green-500\" />\r\n                ) : (\r\n                  <TrendingDown className=\"h-3 w-3 text-red-500\" />\r\n                )}\r\n                <span className={cn(\r\n                  isPositiveNetIncome ? \"text-green-600\" : \"text-red-600\"\r\n                )}>\r\n                  {isPositiveNetIncome ? \"Positive\" : \"Negative\"} cash flow\r\n                </span>\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* Savings Rate */}\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.4, delay: 0.4 }}\r\n              className=\"space-y-2\"\r\n            >\r\n              <div className=\"flex items-center gap-2\">\r\n                <PiggyBank className=\"h-5 w-5 text-gray-600\" />\r\n                <span className=\"text-sm font-medium text-gray-600\">Savings Rate</span>\r\n              </div>\r\n              <div className={cn(\r\n                \"text-3xl font-bold\",\r\n                isGoodSavingsRate ? \"text-green-600\" : \"text-orange-600\"\r\n              )}>\r\n                {metrics.savingsRate.toFixed(1)}%\r\n              </div>\r\n              <div className=\"flex items-center gap-1 text-xs\">\r\n                <div className={cn(\r\n                  \"w-2 h-2 rounded-full\",\r\n                  isGoodSavingsRate ? \"bg-green-500\" : \"bg-orange-500\"\r\n                )} />\r\n                <span className={cn(\r\n                  isGoodSavingsRate ? \"text-green-600\" : \"text-orange-600\"\r\n                )}>\r\n                  {isGoodSavingsRate ? \"Great job!\" : \"Room to improve\"}\r\n                </span>\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* Total Income */}\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.4, delay: 0.5 }}\r\n              className=\"space-y-2\"\r\n            >\r\n              <div className=\"flex items-center gap-2\">\r\n                <TrendingUp className=\"h-5 w-5 text-gray-600\" />\r\n                <span className=\"text-sm font-medium text-gray-600\">Total Income</span>\r\n              </div>\r\n              <div className=\"text-2xl font-bold text-green-600\">\r\n                {formatCurrency(metrics.totalIncome.amount, metrics.totalIncome.currency)}\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">\r\n                +{metrics.trends.monthOverMonth.incomeChange.toFixed(1)}% from last month\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* Total Expenses */}\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.4, delay: 0.6 }}\r\n              className=\"space-y-2\"\r\n            >\r\n              <div className=\"flex items-center gap-2\">\r\n                <TrendingDown className=\"h-5 w-5 text-gray-600\" />\r\n                <span className=\"text-sm font-medium text-gray-600\">Total Expenses</span>\r\n              </div>\r\n              <div className=\"text-2xl font-bold text-red-600\">\r\n                {formatCurrency(metrics.totalExpenses.amount, metrics.totalExpenses.currency)}\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">\r\n                {metrics.trends.monthOverMonth.expenseChange > 0 ? '+' : ''}\r\n                {metrics.trends.monthOverMonth.expenseChange.toFixed(1)}% from last month\r\n              </div>\r\n            </motion.div>\r\n          </div>\r\n\r\n          {/* Insights */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.7 }}\r\n            className=\"mt-6 p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg border border-blue-100\"\r\n          >\r\n            <div className=\"flex items-start gap-3\">\r\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"text-sm font-medium text-text mb-1\">This month&apos;s highlight</p>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  You spent most on <span className=\"font-semibold text-text\">\r\n                    {metrics.spendingPatterns.mostExpensiveCategory}\r\n                  </span> and made <span className=\"font-semibold text-text\">\r\n                    {metrics.categoryBreakdown.reduce((sum, cat) => sum + cat.transactionCount, 0)}\r\n                  </span> transactions in <span className=\"font-semibold text-text\">\r\n                    {metrics.spendingPatterns.mostFrequentCategory}\r\n                  </span>.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1742, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/charts/LazyChart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { Suspense, lazy } from \"react\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\n// import { cn } from \"@/lib/utils\"\r\n\r\n// Lazy load chart components\r\nconst VizBar = lazy(() => import(\"@/lib/viz\").then(module => ({ default: module.VizBar })))\r\nconst VizLine = lazy(() => import(\"@/lib/viz\").then(module => ({ default: module.VizLine })))\r\n\r\ninterface LazyChartProps {\r\n  type: 'bar' | 'line'\r\n  data: Record<string, unknown>[]\r\n  xKey: string\r\n  yKey: string\r\n  title?: string\r\n  description?: string\r\n  className?: string\r\n  [key: string]: unknown\r\n}\r\n\r\nfunction ChartSkeleton() {\r\n  return (\r\n    <Card>\r\n      <CardContent className=\"p-6\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"h-4 bg-muted animate-pulse rounded w-1/3\" />\r\n          <div className=\"h-64 bg-muted animate-pulse rounded\" />\r\n          <div className=\"h-4 bg-muted animate-pulse rounded w-1/4\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport function LazyChart({ type, ...props }: LazyChartProps) {\r\n  const ChartComponent = type === 'bar' ? VizBar : VizLine\r\n\r\n  return (\r\n    <Suspense fallback={<ChartSkeleton />}>\r\n      <ChartComponent {...props} />\r\n    </Suspense>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;;;;AAFA;;;;AAIA,mCAAmC;AAEnC,6BAA6B;AAC7B,MAAM,uBAAS,IAAA,0NAAI,EAAC,IAAM,yGAAoB,IAAI,CAAC,CAAA,SAAU,CAAC;YAAE,SAAS,OAAO,MAAM;QAAC,CAAC;AACxF,MAAM,wBAAU,IAAA,0NAAI,EAAC,IAAM,yGAAoB,IAAI,CAAC,CAAA,SAAU,CAAC;YAAE,SAAS,OAAO,OAAO;QAAC,CAAC;AAa1F,SAAS;IACP,qBACE,2PAAC;kBACC,cAAA,2PAAC;YAAY,WAAU;sBACrB,cAAA,2PAAC;gBAAI,WAAU;;kCACb,2PAAC;wBAAI,WAAU;;;;;;kCACf,2PAAC;wBAAI,WAAU;;;;;;kCACf,2PAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;AAKzB;AAEO,SAAS,UAAU,EAAE,IAAI,EAAE,GAAG,OAAuB;IAC1D,MAAM,iBAAiB,SAAS,QAAQ,SAAS;IAEjD,qBACE,2PAAC,8NAAQ;QAAC,wBAAU,2PAAC;;;;;kBACnB,cAAA,2PAAC;YAAgB,GAAG,KAAK;;;;;;;;;;;AAG/B","debugId":null}},
    {"offset": {"line": 1835, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/wrapped/TopMerchants.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { motion } from \"framer-motion\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { MonthMetrics } from \"@/lib/types\"\r\nimport { formatCurrency } from \"@/lib/api\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Store, CreditCard, MapPin } from \"lucide-react\"\r\n\r\ninterface TopMerchantsProps {\r\n  metrics: MonthMetrics\r\n  className?: string\r\n}\r\n\r\n// Generate mock merchant data based on category breakdown\r\nfunction generateMerchantData(metrics: MonthMetrics) {\r\n  const merchants = [\r\n    { name: \"Amazon\", category: \"shopping\", amount: 0, transactions: 0, location: \"Online\" },\r\n    { name: \"Starbucks\", category: \"food\", amount: 0, transactions: 0, location: \"Local\" },\r\n    { name: \"Shell\", category: \"transportation\", amount: 0, transactions: 0, location: \"Local\" },\r\n    { name: \"Netflix\", category: \"entertainment\", amount: 0, transactions: 0, location: \"Online\" },\r\n    { name: \"Target\", category: \"shopping\", amount: 0, transactions: 0, location: \"Local\" },\r\n    { name: \"Uber\", category: \"transportation\", amount: 0, transactions: 0, location: \"Online\" },\r\n    { name: \"Chipotle\", category: \"food\", amount: 0, transactions: 0, location: \"Local\" },\r\n    { name: \"Spotify\", category: \"entertainment\", amount: 0, transactions: 0, location: \"Online\" },\r\n    { name: \"Walmart\", category: \"shopping\", amount: 0, transactions: 0, location: \"Local\" },\r\n    { name: \"Apple\", category: \"shopping\", amount: 0, transactions: 0, location: \"Online\" }\r\n  ]\r\n\r\n  // Distribute spending across merchants based on categories\r\n  metrics.categoryBreakdown.forEach(categoryData => {\r\n    const categoryMerchants = merchants.filter(m => m.category === categoryData.category)\r\n    if (categoryMerchants.length > 0) {\r\n      const amountPerMerchant = categoryData.amount.amount / categoryMerchants.length\r\n      const transactionsPerMerchant = Math.ceil(categoryData.transactionCount / categoryMerchants.length)\r\n      \r\n      categoryMerchants.forEach(merchant => {\r\n        merchant.amount = amountPerMerchant\r\n        merchant.transactions = transactionsPerMerchant\r\n      })\r\n    }\r\n  })\r\n\r\n  return merchants\r\n    .filter(m => m.amount > 0)\r\n    .sort((a, b) => b.amount - a.amount)\r\n    .slice(0, 6)\r\n}\r\n\r\nconst MERCHANT_ICONS: Record<string, React.ReactNode> = {\r\n  \"Amazon\": <Store className=\"h-4 w-4\" />,\r\n  \"Starbucks\": <Store className=\"h-4 w-4\" />,\r\n  \"Shell\": <Store className=\"h-4 w-4\" />,\r\n  \"Netflix\": <CreditCard className=\"h-4 w-4\" />,\r\n  \"Target\": <Store className=\"h-4 w-4\" />,\r\n  \"Uber\": <CreditCard className=\"h-4 w-4\" />,\r\n  \"Chipotle\": <Store className=\"h-4 w-4\" />,\r\n  \"Spotify\": <CreditCard className=\"h-4 w-4\" />,\r\n  \"Walmart\": <Store className=\"h-4 w-4\" />,\r\n  \"Apple\": <CreditCard className=\"h-4 w-4\" />\r\n}\r\n\r\nexport function TopMerchants({ metrics, className }: TopMerchantsProps) {\r\n  const merchantData = generateMerchantData(metrics)\r\n  const totalMerchantSpending = merchantData.reduce((sum, merchant) => sum + merchant.amount, 0)\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6, delay: 0.4 }}\r\n      className={cn(\"relative\", className)}\r\n    >\r\n      <Card className=\"relative overflow-hidden border-0 bg-gradient-to-br from-white/90 to-white/70 backdrop-blur-sm shadow-xl\">\r\n        <CardHeader className=\"pb-4\">\r\n          <CardTitle className=\"text-xl font-bold text-gray-900\">\r\n            Top Merchants\r\n          </CardTitle>\r\n          <p className=\"text-sm text-gray-600\">\r\n            Where you spent the most this month\r\n          </p>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          {/* Merchants List */}\r\n          <div className=\"space-y-3\">\r\n            {merchantData.map((merchant, index) => {\r\n              const percentage = totalMerchantSpending > 0 ? (merchant.amount / totalMerchantSpending) * 100 : 0\r\n              \r\n              return (\r\n                <motion.div\r\n                  key={merchant.name}\r\n                  initial={{ opacity: 0, x: -20 }}\r\n                  animate={{ opacity: 1, x: 0 }}\r\n                  transition={{ duration: 0.4, delay: 0.1 + index * 0.05 }}\r\n                  className=\"group\"\r\n                >\r\n                  <div className=\"flex items-center justify-between p-3 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors duration-200\">\r\n                    <div className=\"flex items-center gap-3 flex-1 min-w-0\">\r\n                      <div className=\"flex-shrink-0 p-2 bg-white rounded-lg shadow-sm\">\r\n                        {MERCHANT_ICONS[merchant.name] || <Store className=\"h-4 w-4\" />}\r\n                      </div>\r\n                      \r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div className=\"flex items-center gap-2 mb-1\">\r\n                          <h3 className=\"font-medium text-gray-900 truncate\">\r\n                            {merchant.name}\r\n                          </h3>\r\n                          <div className=\"flex items-center gap-1 text-xs text-gray-500\">\r\n                            <MapPin className=\"h-3 w-3\" />\r\n                            <span>{merchant.location}</span>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                          <span>{merchant.transactions} transaction{merchant.transactions !== 1 ? 's' : ''}</span>\r\n                          <span>•</span>\r\n                          <span>{percentage.toFixed(1)}% of total</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"text-right flex-shrink-0 ml-4\">\r\n                      <div className=\"font-bold text-gray-900\">\r\n                        {formatCurrency(merchant.amount, metrics.totalExpenses.currency)}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500\">\r\n                        {formatCurrency(merchant.amount / merchant.transactions, metrics.totalExpenses.currency, { showCents: false })} avg\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              )\r\n            })}\r\n          </div>\r\n\r\n          {/* Summary Stats */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.7 }}\r\n            className=\"pt-4 border-t border-gray-200\"\r\n          >\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                <div className=\"text-2xl font-bold text-blue-600\">\r\n                  {merchantData.length}\r\n                </div>\r\n                <div className=\"text-xs text-blue-600\">Unique Merchants</div>\r\n              </div>\r\n              \r\n              <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                <div className=\"text-2xl font-bold text-green-600\">\r\n                  {formatCurrency(totalMerchantSpending, metrics.totalExpenses.currency, { showCents: false })}\r\n                </div>\r\n                <div className=\"text-xs text-green-600\">Total Spent</div>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Insights */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.8 }}\r\n            className=\"p-4 bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg border border-purple-100\"\r\n          >\r\n            <div className=\"flex items-start gap-3\">\r\n              <div className=\"w-2 h-2 bg-purple-500 rounded-full mt-2 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-900 mb-1\">Spending insight</p>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  You spent most at <span className=\"font-semibold text-gray-900\">\r\n                    {merchantData[0]?.name}\r\n                  </span> with <span className=\"font-semibold text-gray-900\">\r\n                    {merchantData[0]?.transactions}\r\n                  </span> transactions totaling <span className=\"font-semibold text-gray-900\">\r\n                    {formatCurrency(merchantData[0]?.amount || 0, metrics.totalExpenses.currency)}\r\n                  </span>.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Screen reader fallback */}\r\n          <div className=\"sr-only\">\r\n            <table>\r\n              <caption>Top merchants for {metrics.month}</caption>\r\n              <thead>\r\n                <tr>\r\n                  <th>Merchant</th>\r\n                  <th>Location</th>\r\n                  <th>Amount Spent</th>\r\n                  <th>Transaction Count</th>\r\n                  <th>Average per Transaction</th>\r\n                  <th>Percentage of Total</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {merchantData.map(merchant => (\r\n                  <tr key={merchant.name}>\r\n                    <td>{merchant.name}</td>\r\n                    <td>{merchant.location}</td>\r\n                    <td>{formatCurrency(merchant.amount, metrics.totalExpenses.currency)}</td>\r\n                    <td>{merchant.transactions}</td>\r\n                    <td>{formatCurrency(merchant.amount / merchant.transactions, metrics.totalExpenses.currency)}</td>\r\n                    <td>{((merchant.amount / totalMerchantSpending) * 100).toFixed(1)}%</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2573, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/wrapped/WrappedHero.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { motion, useReducedMotion } from \"framer-motion\"\r\nimport { MonthMetrics } from \"@/lib/types\"\r\nimport { WrappedSummaryCard } from \"./WrappedSummaryCard\"\r\nimport { LazyChart } from \"@/components/charts/LazyChart\"\r\nimport { TopMerchants } from \"./TopMerchants\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface WrappedHeroProps {\r\n  metrics: MonthMetrics\r\n  className?: string\r\n}\r\n\r\n// Confetti animation component\r\nfunction ConfettiAnimation() {\r\n  const shouldReduceMotion = useReducedMotion()\r\n  \r\n  if (shouldReduceMotion) return null\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\r\n      {[...Array(20)].map((_, i) => (\r\n        <motion.div\r\n          key={i}\r\n          className=\"absolute w-2 h-2 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full\"\r\n          initial={{ \r\n            x: Math.random() * window.innerWidth,\r\n            y: -10,\r\n            rotate: 0,\r\n            opacity: 1\r\n          }}\r\n          animate={{\r\n            y: window.innerHeight + 10,\r\n            rotate: 360,\r\n            opacity: 0\r\n          }}\r\n          transition={{\r\n            duration: 3 + Math.random() * 2,\r\n            delay: Math.random() * 2,\r\n            ease: \"easeOut\"\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n// Ambient gradient ribbon\r\nfunction AmbientRibbon() {\r\n  const shouldReduceMotion = useReducedMotion()\r\n  \r\n  return (\r\n    <motion.div\r\n      className=\"absolute inset-0 overflow-hidden pointer-events-none\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 1, delay: 0.5 }}\r\n    >\r\n      <motion.div\r\n        className=\"absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-blue-400/20 via-purple-400/20 to-pink-400/20 rounded-full blur-3xl\"\r\n        animate={shouldReduceMotion ? {} : {\r\n          x: [0, 50, 0],\r\n          y: [0, -30, 0],\r\n          scale: [1, 1.1, 1]\r\n        }}\r\n        transition={{\r\n          duration: 8,\r\n          repeat: Infinity,\r\n          ease: \"easeInOut\"\r\n        }}\r\n      />\r\n      <motion.div\r\n        className=\"absolute -bottom-40 -left-40 w-96 h-96 bg-gradient-to-tr from-green-400/20 via-cyan-400/20 to-blue-400/20 rounded-full blur-3xl\"\r\n        animate={shouldReduceMotion ? {} : {\r\n          x: [0, -40, 0],\r\n          y: [0, 20, 0],\r\n          scale: [1, 0.9, 1]\r\n        }}\r\n        transition={{\r\n          duration: 10,\r\n          repeat: Infinity,\r\n          ease: \"easeInOut\"\r\n        }}\r\n      />\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport function WrappedHero({ metrics, className }: WrappedHeroProps) {\r\n  const shouldReduceMotion = useReducedMotion()\r\n\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.8 }}\r\n      className={cn(\"relative min-h-screen py-12\", className)}\r\n    >\r\n      {/* Background Elements */}\r\n      <AmbientRibbon />\r\n      <ConfettiAnimation />\r\n      \r\n      {/* Main Content */}\r\n      <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Hero Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 30 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.8, delay: 0.2 }}\r\n          className=\"text-center mb-12\"\r\n        >\r\n          <motion.h1\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.6, delay: 0.4 }}\r\n            className=\"text-4xl md:text-6xl font-bold tracking-tight bg-gradient-to-r from-text via-accent-1 to-purple-600 bg-clip-text text-transparent mb-4\"\r\n          >\r\n            Your Financial Wrapped\r\n          </motion.h1>\r\n          <motion.p\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.6, delay: 0.6 }}\r\n            className=\"text-xl text-muted-foreground max-w-2xl mx-auto leading-relaxed\"\r\n          >\r\n            Discover your spending patterns, top merchants, and financial insights for{\" \"}\r\n            <span className=\"font-semibold text-text\">\r\n              {new Date(metrics.month + '-01').toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\r\n            </span>\r\n          </motion.p>\r\n        </motion.div>\r\n\r\n        {/* Asymmetric Grid Layout */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\r\n          {/* Left Column - Summary Card (spans 5 columns) */}\r\n          <motion.div\r\n            initial={{ opacity: 0, x: -50 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{ duration: 0.8, delay: 0.3 }}\r\n            className=\"lg:col-span-5\"\r\n          >\r\n            <WrappedSummaryCard metrics={metrics} />\r\n          </motion.div>\r\n\r\n          {/* Right Column - Charts and Merchants (spans 7 columns) */}\r\n          <div className=\"lg:col-span-7 space-y-6\">\r\n            {/* Top Row - Category Chart (spans full width) */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 50 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.8, delay: 0.4 }}\r\n            >\r\n              <LazyChart\r\n                type=\"bar\"\r\n                data={metrics.categoryBreakdown.map(cat => ({\r\n                  category: cat.category,\r\n                  amount: cat.amount.amount,\r\n                  percentage: cat.percentage\r\n                }))}\r\n                xKey=\"category\"\r\n                yKey=\"amount\"\r\n                title=\"Spending by Category\"\r\n                description=\"Monthly spending breakdown by category\"\r\n              />\r\n            </motion.div>\r\n\r\n            {/* Bottom Row - Two columns for Trend and Merchants */}\r\n            <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-6\">\r\n              {/* Trend Line Chart */}\r\n              <motion.div\r\n                initial={{ opacity: 0, x: -30 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                transition={{ duration: 0.8, delay: 0.5 }}\r\n              >\r\n                <LazyChart\r\n                  type=\"line\"\r\n                  data={metrics.trend_daily.map(day => ({\r\n                    day: new Date(day.date).getDate().toString(),\r\n                    spending: day.totalSpending.amount\r\n                  }))}\r\n                  xKey=\"day\"\r\n                  yKey=\"spending\"\r\n                  title=\"Daily Spending Trend\"\r\n                  description=\"Daily spending pattern throughout the month\"\r\n                />\r\n              </motion.div>\r\n\r\n              {/* Top Merchants */}\r\n              <motion.div\r\n                initial={{ opacity: 0, x: 30 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                transition={{ duration: 0.8, delay: 0.6 }}\r\n              >\r\n                <TopMerchants metrics={metrics} />\r\n              </motion.div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Call to Action */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 30 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.8, delay: 0.8 }}\r\n          className=\"text-center mt-12\"\r\n        >\r\n          <motion.div\r\n            whileHover={shouldReduceMotion ? {} : { scale: 1.05 }}\r\n            whileTap={shouldReduceMotion ? {} : { scale: 0.95 }}\r\n            className=\"inline-block\"\r\n          >\r\n            <button className=\"px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl shadow-lg hover:shadow-xl transition-all duration-300\">\r\n              View Detailed Analytics\r\n            </button>\r\n          </motion.div>\r\n          <p className=\"text-sm text-gray-500 mt-4\">\r\n            Click on any category bar to filter your transactions\r\n          </p>\r\n        </motion.div>\r\n      </div>\r\n    </motion.section>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3023, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/viz/theme.ts"],"sourcesContent":["/**\r\n * Recharts Theme System\r\n * \r\n * Provides consistent theming, formatters, and color scales for data visualization\r\n * using the Financify design system tokens.\r\n */\r\n\r\nimport { formatCurrency } from \"@/lib/api\"\r\n\r\n// ============================================================================\r\n// COLOR SCALE GENERATOR\r\n// ============================================================================\r\n\r\n/**\r\n * Generate color scales from design tokens\r\n * Creates 6 categories with multiple shades for data visualization\r\n */\r\nexport const colorScales = {\r\n  // Primary scale (blue spectrum)\r\n  primary: {\r\n    50: \"hsl(var(--primary-50))\",\r\n    100: \"hsl(var(--primary-100))\",\r\n    200: \"hsl(var(--primary-200))\",\r\n    300: \"hsl(var(--primary-300))\",\r\n    400: \"hsl(var(--primary-400))\",\r\n    500: \"hsl(var(--primary-500))\",\r\n    600: \"hsl(var(--primary-600))\",\r\n    700: \"hsl(var(--primary-700))\",\r\n    800: \"hsl(var(--primary-800))\",\r\n    900: \"hsl(var(--primary-900))\",\r\n    950: \"hsl(var(--primary-950))\",\r\n  },\r\n  \r\n  // Success scale (green spectrum)\r\n  success: {\r\n    50: \"hsl(var(--success-foreground))\",\r\n    100: \"hsl(var(--success-foreground))\",\r\n    200: \"hsl(var(--success-foreground))\",\r\n    300: \"hsl(var(--success-foreground))\",\r\n    400: \"hsl(var(--success-foreground))\",\r\n    500: \"hsl(var(--success))\",\r\n    600: \"hsl(var(--success))\",\r\n    700: \"hsl(var(--success))\",\r\n    800: \"hsl(var(--success))\",\r\n    900: \"hsl(var(--success))\",\r\n    950: \"hsl(var(--success))\",\r\n  },\r\n  \r\n  // Warning scale (orange spectrum)\r\n  warning: {\r\n    50: \"hsl(var(--warning-foreground))\",\r\n    100: \"hsl(var(--warning-foreground))\",\r\n    200: \"hsl(var(--warning-foreground))\",\r\n    300: \"hsl(var(--warning-foreground))\",\r\n    400: \"hsl(var(--warning-foreground))\",\r\n    500: \"hsl(var(--warning))\",\r\n    600: \"hsl(var(--warning))\",\r\n    700: \"hsl(var(--warning))\",\r\n    800: \"hsl(var(--warning))\",\r\n    900: \"hsl(var(--warning))\",\r\n    950: \"hsl(var(--warning))\",\r\n  },\r\n  \r\n  // Destructive scale (red spectrum)\r\n  destructive: {\r\n    50: \"hsl(var(--destructive-foreground))\",\r\n    100: \"hsl(var(--destructive-foreground))\",\r\n    200: \"hsl(var(--destructive-foreground))\",\r\n    300: \"hsl(var(--destructive-foreground))\",\r\n    400: \"hsl(var(--destructive-foreground))\",\r\n    500: \"hsl(var(--destructive))\",\r\n    600: \"hsl(var(--destructive))\",\r\n    700: \"hsl(var(--destructive))\",\r\n    800: \"hsl(var(--destructive))\",\r\n    900: \"hsl(var(--destructive))\",\r\n    950: \"hsl(var(--destructive))\",\r\n  },\r\n  \r\n  // Accent scales\r\n  accent1: {\r\n    50: \"hsl(var(--accent-1) / 0.1)\",\r\n    100: \"hsl(var(--accent-1) / 0.2)\",\r\n    200: \"hsl(var(--accent-1) / 0.3)\",\r\n    300: \"hsl(var(--accent-1) / 0.4)\",\r\n    400: \"hsl(var(--accent-1) / 0.6)\",\r\n    500: \"hsl(var(--accent-1))\",\r\n    600: \"hsl(var(--accent-1) / 0.8)\",\r\n    700: \"hsl(var(--accent-1) / 0.9)\",\r\n    800: \"hsl(var(--accent-1) / 0.95)\",\r\n    900: \"hsl(var(--accent-1) / 0.98)\",\r\n    950: \"hsl(var(--accent-1) / 1)\",\r\n  },\r\n  \r\n  accent2: {\r\n    50: \"hsl(var(--accent-2) / 0.1)\",\r\n    100: \"hsl(var(--accent-2) / 0.2)\",\r\n    200: \"hsl(var(--accent-2) / 0.3)\",\r\n    300: \"hsl(var(--accent-2) / 0.4)\",\r\n    400: \"hsl(var(--accent-2) / 0.6)\",\r\n    500: \"hsl(var(--accent-2))\",\r\n    600: \"hsl(var(--accent-2) / 0.8)\",\r\n    700: \"hsl(var(--accent-2) / 0.9)\",\r\n    800: \"hsl(var(--accent-2) / 0.95)\",\r\n    900: \"hsl(var(--accent-2) / 0.98)\",\r\n    950: \"hsl(var(--accent-2) / 1)\",\r\n  },\r\n  \r\n  accent3: {\r\n    50: \"hsl(var(--accent-3) / 0.1)\",\r\n    100: \"hsl(var(--accent-3) / 0.2)\",\r\n    200: \"hsl(var(--accent-3) / 0.3)\",\r\n    300: \"hsl(var(--accent-3) / 0.4)\",\r\n    400: \"hsl(var(--accent-3) / 0.6)\",\r\n    500: \"hsl(var(--accent-3))\",\r\n    600: \"hsl(var(--accent-3) / 0.8)\",\r\n    700: \"hsl(var(--accent-3) / 0.9)\",\r\n    800: \"hsl(var(--accent-3) / 0.95)\",\r\n    900: \"hsl(var(--accent-3) / 0.98)\",\r\n    950: \"hsl(var(--accent-3) / 1)\",\r\n  },\r\n} as const\r\n\r\n/**\r\n * Default color palette for charts (6 categories)\r\n * Uses semantic colors that work well together\r\n */\r\nexport const defaultColors = [\r\n  colorScales.primary[500],\r\n  colorScales.accent1[500],\r\n  colorScales.success[500],\r\n  colorScales.warning[500],\r\n  colorScales.accent2[500],\r\n  colorScales.destructive[500],\r\n] as const\r\n\r\n/**\r\n * Generate color palette for specific number of categories\r\n */\r\nexport function generateColorPalette(count: number): string[] {\r\n  const baseColors = [\r\n    colorScales.primary[500],\r\n    colorScales.accent1[500],\r\n    colorScales.success[500],\r\n    colorScales.warning[500],\r\n    colorScales.accent2[500],\r\n    colorScales.destructive[500],\r\n    colorScales.accent3[500],\r\n    colorScales.primary[700],\r\n    colorScales.accent1[700],\r\n    colorScales.success[700],\r\n  ]\r\n  \r\n  return Array.from({ length: count }, (_, i) => baseColors[i % baseColors.length])\r\n}\r\n\r\n// ============================================================================\r\n// FORMATTERS\r\n// ============================================================================\r\n\r\n/**\r\n * Currency formatter with tabular numbers\r\n */\r\nexport function formatCurrencyValue(value: number, currency: string = \"USD\"): string {\r\n  return formatCurrency(value, currency, { showCents: false })\r\n}\r\n\r\n/**\r\n * Date formatter for chart axes\r\n */\r\nexport function formatDateAxis(value: string | number): string {\r\n  const date = new Date(value)\r\n  return date.toLocaleDateString('en-US', { \r\n    month: 'short', \r\n    day: 'numeric' \r\n  })\r\n}\r\n\r\n/**\r\n * Month formatter for chart axes\r\n */\r\nexport function formatMonthAxis(value: string | number): string {\r\n  const date = new Date(value)\r\n  return date.toLocaleDateString('en-US', { \r\n    month: 'short' \r\n  })\r\n}\r\n\r\n/**\r\n * Percentage formatter\r\n */\r\nexport function formatPercentage(value: number): string {\r\n  return `${value.toFixed(1)}%`\r\n}\r\n\r\n/**\r\n * Number formatter with K/M suffixes\r\n */\r\nexport function formatCompactNumber(value: number): string {\r\n  if (value >= 1000000) {\r\n    return `${(value / 1000000).toFixed(1)}M`\r\n  }\r\n  if (value >= 1000) {\r\n    return `${(value / 1000).toFixed(1)}K`\r\n  }\r\n  return value.toString()\r\n}\r\n\r\n// ============================================================================\r\n// CHART THEME CONFIGURATION\r\n// ============================================================================\r\n\r\n/**\r\n * Base chart theme configuration\r\n */\r\nexport const chartTheme = {\r\n  // Colors\r\n  colors: defaultColors,\r\n  \r\n  // Typography\r\n  fontFamily: 'var(--font-sans)',\r\n  fontSize: {\r\n    xs: '0.75rem',\r\n    sm: '0.875rem',\r\n    base: '1rem',\r\n    lg: '1.125rem',\r\n    xl: '1.25rem',\r\n  },\r\n  \r\n  // Spacing\r\n  margin: {\r\n    top: 20,\r\n    right: 30,\r\n    left: 20,\r\n    bottom: 20,\r\n  },\r\n  \r\n  // Grid styling\r\n  grid: {\r\n    stroke: 'hsl(var(--border))',\r\n    strokeWidth: 1,\r\n    strokeDasharray: '3 3',\r\n  },\r\n  \r\n  // Axis styling\r\n  axis: {\r\n    stroke: 'hsl(var(--text-tertiary))',\r\n    strokeWidth: 1,\r\n    fontSize: '0.875rem',\r\n    fontFamily: 'var(--font-sans)',\r\n    tick: {\r\n      fill: 'hsl(var(--text-tertiary))',\r\n      fontSize: '0.75rem',\r\n    },\r\n  },\r\n  \r\n  // Legend styling\r\n  legend: {\r\n    fontSize: '0.875rem',\r\n    fontFamily: 'var(--font-sans)',\r\n    fill: 'hsl(var(--text))',\r\n  },\r\n  \r\n  // Tooltip styling\r\n  tooltip: {\r\n    backgroundColor: 'hsl(var(--paper-elevated))',\r\n    border: '1px solid hsl(var(--border))',\r\n    borderRadius: '0.5rem',\r\n    boxShadow: 'var(--shadow-lg)',\r\n    fontSize: '0.875rem',\r\n    fontFamily: 'var(--font-sans)',\r\n    padding: '0.75rem',\r\n  },\r\n} as const\r\n\r\n// ============================================================================\r\n// RESPONSIVE BREAKPOINTS\r\n// ============================================================================\r\n\r\nexport const breakpoints = {\r\n  sm: 640,\r\n  md: 768,\r\n  lg: 1024,\r\n  xl: 1280,\r\n  '2xl': 1536,\r\n} as const\r\n\r\n/**\r\n * Get responsive chart dimensions\r\n */\r\nexport function getResponsiveDimensions(\r\n  baseWidth: number = 400,\r\n  baseHeight: number = 300,\r\n  containerWidth?: number\r\n) {\r\n  if (!containerWidth) {\r\n    return { width: baseWidth, height: baseHeight }\r\n  }\r\n  \r\n  // Scale down for smaller screens\r\n  if (containerWidth < breakpoints.sm) {\r\n    return {\r\n      width: Math.min(containerWidth - 32, baseWidth),\r\n      height: Math.max(200, baseHeight * 0.8),\r\n    }\r\n  }\r\n  \r\n  if (containerWidth < breakpoints.md) {\r\n    return {\r\n      width: Math.min(containerWidth - 48, baseWidth),\r\n      height: Math.max(250, baseHeight * 0.9),\r\n    }\r\n  }\r\n  \r\n  return { width: baseWidth, height: baseHeight }\r\n}\r\n\r\n// ============================================================================\r\n// ACCESSIBILITY HELPERS\r\n// ============================================================================\r\n\r\n/**\r\n * Generate accessible color combinations\r\n */\r\nexport function getAccessibleColors(): string[] {\r\n  // High contrast colors that work well with the background\r\n  return [\r\n    colorScales.primary[600],\r\n    colorScales.success[600],\r\n    colorScales.warning[600],\r\n    colorScales.destructive[600],\r\n    colorScales.accent1[600],\r\n    colorScales.accent2[600],\r\n  ]\r\n}\r\n\r\n/**\r\n * Generate screen reader descriptions for charts\r\n */\r\nexport function generateChartDescription(\r\n  chartType: 'bar' | 'line' | 'area' | 'pie',\r\n  data: Record<string, unknown>[],\r\n  title?: string\r\n): string {\r\n  const dataPoints = data.length\r\n  const description = `${chartType} chart${title ? `: ${title}` : ''} with ${dataPoints} data points`\r\n  \r\n  if (dataPoints > 0) {\r\n    const values = data.map(d => typeof d === 'object' ? Object.values(d).find(v => typeof v === 'number') : d)\r\n    const max = Math.max(...values.filter(v => typeof v === 'number'))\r\n    const min = Math.min(...values.filter(v => typeof v === 'number'))\r\n    return `${description}. Values range from ${formatCurrencyValue(min)} to ${formatCurrencyValue(max)}.`\r\n  }\r\n  \r\n  return description\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3322, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/viz/components.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  Line,\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  // Cell,\r\n} from \"recharts\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { \r\n  chartTheme, \r\n  generateColorPalette, \r\n  formatCurrencyValue, \r\n  formatDateAxis,\r\n  // formatPercentage,\r\n  getResponsiveDimensions,\r\n  generateChartDescription,\r\n  // type ColorScale\r\n} from \"./theme\"\r\n\r\n// ============================================================================\r\n// TYPES\r\n// ============================================================================\r\n\r\nexport interface VizBarProps {\r\n  data: Record<string, unknown>[]\r\n  xKey: string\r\n  yKey: string\r\n  width?: number\r\n  height?: number\r\n  className?: string\r\n  colors?: string[]\r\n  showGrid?: boolean\r\n  showLegend?: boolean\r\n  showTooltip?: boolean\r\n  title?: string\r\n  description?: string\r\n  onBarClick?: (data: Record<string, unknown>, index: number) => void\r\n  selectedIndex?: number\r\n  responsive?: boolean\r\n  containerWidth?: number\r\n}\r\n\r\nexport interface VizLineProps {\r\n  data: Record<string, unknown>[]\r\n  xKey: string\r\n  yKey: string | string[]\r\n  width?: number\r\n  height?: number\r\n  className?: string\r\n  colors?: string[]\r\n  showGrid?: boolean\r\n  showLegend?: boolean\r\n  showTooltip?: boolean\r\n  title?: string\r\n  description?: string\r\n  onPointClick?: (data: Record<string, unknown>, index: number) => void\r\n  selectedIndex?: number\r\n  responsive?: boolean\r\n  containerWidth?: number\r\n  type?: 'line' | 'area'\r\n  strokeWidth?: number\r\n  fillOpacity?: number\r\n}\r\n\r\n// ============================================================================\r\n// CUSTOM TOOLTIP COMPONENT\r\n// ============================================================================\r\n\r\ninterface CustomTooltipProps {\r\n  active?: boolean\r\n  payload?: Record<string, unknown>[]\r\n  label?: string\r\n  formatter?: (value: unknown, name: string) => [string, string]\r\n  labelFormatter?: (label: string) => string\r\n}\r\n\r\nfunction CustomTooltip({ \r\n  active, \r\n  payload, \r\n  label, \r\n  formatter,\r\n  labelFormatter \r\n}: CustomTooltipProps) {\r\n  if (!active || !payload || payload.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"rounded-lg border border-border bg-paper-elevated p-3 shadow-lg\"\r\n      style={chartTheme.tooltip}\r\n    >\r\n      <p className=\"font-medium text-text mb-2\">\r\n        {labelFormatter ? labelFormatter(label || '') : label}\r\n      </p>\r\n      {payload.map((entry, index) => (\r\n        <div key={index} className=\"flex items-center gap-2 text-sm\">\r\n          <div \r\n            className=\"w-3 h-3 rounded-full\" \r\n            style={{ backgroundColor: entry.color as string }}\r\n          />\r\n          <span className=\"text-text-secondary\">\r\n            {entry.dataKey as string}:\r\n          </span>\r\n          <span className=\"font-mono tabular-nums text-text\">\r\n            {formatter ? formatter(entry.value, entry.dataKey as string)[0] : String(entry.value)}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// CUSTOM LEGEND COMPONENT\r\n// ============================================================================\r\n\r\ninterface CustomLegendProps {\r\n  payload?: Record<string, unknown>[]\r\n  verticalAlign?: 'top' | 'bottom'\r\n  align?: 'left' | 'center' | 'right'\r\n}\r\n\r\nfunction CustomLegend({ payload, verticalAlign = 'bottom', align = 'center' }: CustomLegendProps) {\r\n  if (!payload || payload.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className={`flex flex-wrap gap-4 justify-${align === 'center' ? 'center' : align === 'right' ? 'end' : 'start'} ${\r\n        verticalAlign === 'top' ? 'mb-4' : 'mt-4'\r\n      }`}\r\n    >\r\n      {payload.map((entry, index) => (\r\n        <div key={index} className=\"flex items-center gap-2 text-sm\">\r\n          <div \r\n            className=\"w-3 h-3 rounded-full\" \r\n            style={{ backgroundColor: entry.color as string }}\r\n          />\r\n          <span className=\"text-text-secondary\">\r\n            {String(entry.value)}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// VIZ BAR COMPONENT\r\n// ============================================================================\r\n\r\nexport function VizBar({\r\n  data,\r\n  xKey,\r\n  yKey,\r\n  width = 400,\r\n  height = 300,\r\n  className,\r\n  colors = generateColorPalette(1),\r\n  showGrid = true,\r\n  showLegend = false,\r\n  showTooltip = true,\r\n  title,\r\n  description,\r\n  onBarClick,\r\n  // selectedIndex,\r\n  responsive = true,\r\n  containerWidth,\r\n}: VizBarProps) {\r\n  const dimensions = responsive \r\n    ? getResponsiveDimensions(width, height, containerWidth)\r\n    : { width, height }\r\n\r\n  const chartDescription = description || generateChartDescription('bar', data, title)\r\n\r\n  return (\r\n    <div className={cn(\"w-full\", className)}>\r\n      {title && (\r\n        <h3 className=\"text-lg font-semibold text-text mb-2\">{title}</h3>\r\n      )}\r\n      \r\n      <div \r\n        className=\"w-full focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 rounded-md\"\r\n        role=\"img\"\r\n        aria-label={chartDescription}\r\n        tabIndex={0}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter' || e.key === ' ') {\r\n            e.preventDefault()\r\n            // Focus management for keyboard users\r\n            const firstBar = e.currentTarget.querySelector('[role=\"button\"]')\r\n            if (firstBar) {\r\n              (firstBar as HTMLElement).focus()\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        <ResponsiveContainer width=\"100%\" height={dimensions.height}>\r\n          <BarChart\r\n            data={data}\r\n            margin={chartTheme.margin}\r\n            // onClick={onBarClick}\r\n          >\r\n            {showGrid && (\r\n              <CartesianGrid \r\n                strokeDasharray={chartTheme.grid.strokeDasharray}\r\n                stroke={chartTheme.grid.stroke}\r\n                strokeWidth={chartTheme.grid.strokeWidth}\r\n              />\r\n            )}\r\n            \r\n            <XAxis\r\n              dataKey={xKey}\r\n              stroke={chartTheme.axis.stroke}\r\n              strokeWidth={chartTheme.axis.strokeWidth}\r\n              fontSize={chartTheme.axis.tick.fontSize}\r\n              fontFamily={chartTheme.axis.fontFamily}\r\n              tick={{ fill: chartTheme.axis.tick.fill }}\r\n              tickFormatter={formatDateAxis}\r\n            />\r\n            \r\n            <YAxis\r\n              stroke={chartTheme.axis.stroke}\r\n              strokeWidth={chartTheme.axis.strokeWidth}\r\n              fontSize={chartTheme.axis.tick.fontSize}\r\n              fontFamily={chartTheme.axis.fontFamily}\r\n              tick={{ fill: chartTheme.axis.tick.fill }}\r\n              tickFormatter={(value) => formatCurrencyValue(value)}\r\n            />\r\n            \r\n            {showTooltip && (\r\n              <Tooltip\r\n                content={<CustomTooltip />}\r\n                formatter={(value) => [formatCurrencyValue(Number(value)), '']}\r\n                labelFormatter={formatDateAxis}\r\n              />\r\n            )}\r\n            \r\n            {showLegend && (\r\n              <Legend content={<CustomLegend />} />\r\n            )}\r\n            \r\n            <Bar\r\n              dataKey={yKey}\r\n              fill={colors[0]}\r\n              radius={[4, 4, 0, 0]}\r\n              // onClick={onBarClick}\r\n              className={cn(\r\n                \"transition-all duration-200 hover:opacity-80\",\r\n                // selectedIndex !== undefined && \"opacity-50 hover:opacity-100\"\r\n              )}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      \r\n      {/* Screen reader fallback table */}\r\n      <div className=\"sr-only\">\r\n        <table>\r\n          <caption>{chartDescription}</caption>\r\n          <thead>\r\n            <tr>\r\n              <th>{xKey}</th>\r\n              <th>{yKey}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{formatDateAxis(String(item[xKey]))}</td>\r\n                <td>{formatCurrencyValue(Number(item[yKey]))}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// VIZ LINE COMPONENT\r\n// ============================================================================\r\n\r\nexport function VizLine({\r\n  data,\r\n  xKey,\r\n  yKey,\r\n  width = 400,\r\n  height = 300,\r\n  className,\r\n  colors = generateColorPalette(1),\r\n  showGrid = true,\r\n  showLegend = false,\r\n  showTooltip = true,\r\n  title,\r\n  description,\r\n  onPointClick,\r\n  // selectedIndex,\r\n  responsive = true,\r\n  containerWidth,\r\n  type = 'line',\r\n  strokeWidth = 2,\r\n  fillOpacity = 0.6,\r\n}: VizLineProps) {\r\n  const dimensions = responsive \r\n    ? getResponsiveDimensions(width, height, containerWidth)\r\n    : { width, height }\r\n\r\n  const chartDescription = description || generateChartDescription(type, data, title)\r\n  const yKeys = Array.isArray(yKey) ? yKey : [yKey]\r\n\r\n  const renderChart = () => {\r\n    if (type === 'area') {\r\n      return (\r\n        <AreaChart\r\n          data={data}\r\n          margin={chartTheme.margin}\r\n          // onClick={onPointClick}\r\n        >\r\n          {showGrid && (\r\n            <CartesianGrid \r\n              strokeDasharray={chartTheme.grid.strokeDasharray}\r\n              stroke={chartTheme.grid.stroke}\r\n              strokeWidth={chartTheme.grid.strokeWidth}\r\n            />\r\n          )}\r\n          \r\n          <XAxis\r\n            dataKey={xKey}\r\n            stroke={chartTheme.axis.stroke}\r\n            strokeWidth={chartTheme.axis.strokeWidth}\r\n            fontSize={chartTheme.axis.tick.fontSize}\r\n            fontFamily={chartTheme.axis.fontFamily}\r\n            tick={{ fill: chartTheme.axis.tick.fill }}\r\n            tickFormatter={formatDateAxis}\r\n          />\r\n          \r\n          <YAxis\r\n            stroke={chartTheme.axis.stroke}\r\n            strokeWidth={chartTheme.axis.strokeWidth}\r\n            fontSize={chartTheme.axis.tick.fontSize}\r\n            fontFamily={chartTheme.axis.fontFamily}\r\n            tick={{ fill: chartTheme.axis.tick.fill }}\r\n            tickFormatter={(value) => formatCurrencyValue(value)}\r\n          />\r\n          \r\n          {showTooltip && (\r\n            <Tooltip\r\n              content={<CustomTooltip />}\r\n              formatter={(value) => [formatCurrencyValue(Number(value)), '']}\r\n              labelFormatter={formatDateAxis}\r\n            />\r\n          )}\r\n          \r\n          {showLegend && (\r\n            <Legend content={<CustomLegend />} />\r\n          )}\r\n          \r\n          {yKeys.map((key, index) => (\r\n            <Area\r\n              key={key}\r\n              type=\"monotone\"\r\n              dataKey={key}\r\n              stackId=\"1\"\r\n              stroke={colors[index % colors.length]}\r\n              fill={colors[index % colors.length]}\r\n              fillOpacity={fillOpacity}\r\n              strokeWidth={strokeWidth}\r\n              dot={{ r: 4, fill: colors[index % colors.length] }}\r\n              activeDot={{ r: 6, stroke: colors[index % colors.length], strokeWidth: 2 }}\r\n            />\r\n          ))}\r\n        </AreaChart>\r\n      )\r\n    }\r\n\r\n    return (\r\n          <LineChart\r\n            data={data}\r\n            margin={chartTheme.margin}\r\n            // onClick={onPointClick}\r\n          >\r\n        {showGrid && (\r\n          <CartesianGrid \r\n            strokeDasharray={chartTheme.grid.strokeDasharray}\r\n            stroke={chartTheme.grid.stroke}\r\n            strokeWidth={chartTheme.grid.strokeWidth}\r\n          />\r\n        )}\r\n        \r\n        <XAxis\r\n          dataKey={xKey}\r\n          stroke={chartTheme.axis.stroke}\r\n          strokeWidth={chartTheme.axis.strokeWidth}\r\n          fontSize={chartTheme.axis.tick.fontSize}\r\n          fontFamily={chartTheme.axis.fontFamily}\r\n          tick={{ fill: chartTheme.axis.tick.fill }}\r\n          tickFormatter={formatDateAxis}\r\n        />\r\n        \r\n        <YAxis\r\n          stroke={chartTheme.axis.stroke}\r\n          strokeWidth={chartTheme.axis.strokeWidth}\r\n          fontSize={chartTheme.axis.tick.fontSize}\r\n          fontFamily={chartTheme.axis.fontFamily}\r\n          tick={{ fill: chartTheme.axis.tick.fill }}\r\n          tickFormatter={(value) => formatCurrencyValue(value)}\r\n        />\r\n        \r\n        {showTooltip && (\r\n          <Tooltip\r\n            content={<CustomTooltip />}\r\n            formatter={(value) => [formatCurrencyValue(Number(value)), '']}\r\n            labelFormatter={formatDateAxis}\r\n          />\r\n        )}\r\n        \r\n        {showLegend && (\r\n          <Legend content={<CustomLegend />} />\r\n        )}\r\n        \r\n        {yKeys.map((key, index) => (\r\n          <Line\r\n            key={key}\r\n            type=\"monotone\"\r\n            dataKey={key}\r\n            stroke={colors[index % colors.length]}\r\n            strokeWidth={strokeWidth}\r\n            dot={{ r: 4, fill: colors[index % colors.length] }}\r\n            activeDot={{ r: 6, stroke: colors[index % colors.length], strokeWidth: 2 }}\r\n          />\r\n        ))}\r\n      </LineChart>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"w-full\", className)}>\r\n      {title && (\r\n        <h3 className=\"text-lg font-semibold text-text mb-2\">{title}</h3>\r\n      )}\r\n      \r\n      <div \r\n        className=\"w-full focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 rounded-md\"\r\n        role=\"img\"\r\n        aria-label={chartDescription}\r\n        tabIndex={0}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter' || e.key === ' ') {\r\n            e.preventDefault()\r\n            // Focus management for keyboard users\r\n            const firstPoint = e.currentTarget.querySelector('[role=\"button\"]')\r\n            if (firstPoint) {\r\n              (firstPoint as HTMLElement).focus()\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        <ResponsiveContainer width=\"100%\" height={dimensions.height}>\r\n          {renderChart()}\r\n        </ResponsiveContainer>\r\n      </div>\r\n      \r\n      {/* Screen reader fallback table */}\r\n      <div className=\"sr-only\">\r\n        <table>\r\n          <caption>{chartDescription}</caption>\r\n          <thead>\r\n            <tr>\r\n              <th>{xKey}</th>\r\n              {yKeys.map(key => (\r\n                <th key={key}>{key}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{formatDateAxis(String(item[xKey]))}</td>\r\n                {yKeys.map(key => (\r\n                  <td key={key}>{formatCurrencyValue(Number(item[key]))}</td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// EXPORTS\r\n// ============================================================================\r\n\r\nexport { CustomTooltip, CustomLegend }\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4009, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/viz/index.ts"],"sourcesContent":["// Re-export all visualization components and utilities\r\nexport * from './theme'\r\nexport * from './components'\r\n\r\n// Convenience exports for common use cases\r\nexport { VizBar, VizLine } from './components'\r\nexport { \r\n  chartTheme, \r\n  defaultColors, \r\n  generateColorPalette,\r\n  formatCurrencyValue,\r\n  formatDateAxis,\r\n  formatPercentage \r\n} from './theme'\r\n"],"names":[],"mappings":"AAAA,uDAAuD;;AACvD;AACA","debugId":null}},
    {"offset": {"line": 4021, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/wrapped/CategoryBarChart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { motion } from \"framer-motion\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { MonthMetrics, TransactionCategory } from \"@/lib/types\"\r\nimport { formatCurrency } from \"@/lib/api\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { useSearchParams, useRouter } from \"next/navigation\"\r\nimport { useCallback } from \"react\"\r\nimport { VizBar } from \"@/lib/viz\"\r\n\r\ninterface CategoryBarChartProps {\r\n  metrics: MonthMetrics\r\n  className?: string\r\n}\r\n\r\nconst CATEGORY_COLORS: Record<TransactionCategory, string> = {\r\n  tuition: \"bg-blue-500\",\r\n  books: \"bg-indigo-500\", \r\n  housing: \"bg-purple-500\",\r\n  food: \"bg-green-500\",\r\n  transportation: \"bg-yellow-500\",\r\n  entertainment: \"bg-pink-500\",\r\n  healthcare: \"bg-red-500\",\r\n  utilities: \"bg-orange-500\",\r\n  shopping: \"bg-cyan-500\",\r\n  income: \"bg-emerald-500\",\r\n  refund: \"bg-teal-500\",\r\n  other: \"bg-gray-500\"\r\n}\r\n\r\nconst CATEGORY_LABELS: Record<TransactionCategory, string> = {\r\n  tuition: \"Tuition\",\r\n  books: \"Books & Supplies\",\r\n  housing: \"Housing\",\r\n  food: \"Food & Dining\",\r\n  transportation: \"Transportation\",\r\n  entertainment: \"Entertainment\",\r\n  healthcare: \"Healthcare\",\r\n  utilities: \"Utilities\",\r\n  shopping: \"Shopping\",\r\n  income: \"Income\",\r\n  refund: \"Refunds\",\r\n  other: \"Other\"\r\n}\r\n\r\nexport function CategoryBarChart({ metrics, className }: CategoryBarChartProps) {\r\n  const searchParams = useSearchParams()\r\n  const router = useRouter()\r\n  const selectedCategory = searchParams.get('category') as TransactionCategory | null\r\n\r\n  const handleCategoryClick = useCallback((category: TransactionCategory) => {\r\n    const params = new URLSearchParams(searchParams.toString())\r\n    \r\n    if (selectedCategory === category) {\r\n      // If clicking the same category, remove the filter\r\n      params.delete('category')\r\n    } else {\r\n      // Set the new category filter\r\n      params.set('category', category)\r\n    }\r\n    \r\n    router.push(`?${params.toString()}`, { scroll: false })\r\n  }, [searchParams, router, selectedCategory])\r\n\r\n  // Sort categories by amount (highest first) and take top 8\r\n  const topCategories = metrics.categoryBreakdown\r\n    .filter(cat => cat.category !== 'income' && cat.category !== 'refund')\r\n    .sort((a, b) => b.amount.amount - a.amount.amount)\r\n    .slice(0, 8)\r\n\r\n  const maxAmount = Math.max(...topCategories.map(cat => cat.amount.amount))\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6, delay: 0.2 }}\r\n      className={cn(\"relative\", className)}\r\n    >\r\n      <Card className=\"relative overflow-hidden border-0 bg-gradient-to-br from-white/90 to-white/70 backdrop-blur-sm shadow-xl\">\r\n        <CardHeader className=\"pb-4\">\r\n          <CardTitle className=\"text-xl font-bold text-gray-900\">\r\n            Spending by Category\r\n          </CardTitle>\r\n          <p className=\"text-sm text-gray-600\">\r\n            Click on a category to filter your transactions\r\n          </p>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          {/* Chart */}\r\n          <div className=\"h-64\">\r\n            <VizBar\r\n              data={topCategories.map(cat => ({\r\n                category: CATEGORY_LABELS[cat.category],\r\n                amount: cat.amount.amount,\r\n                percentage: cat.percentage,\r\n                transactionCount: cat.transactionCount,\r\n                originalCategory: cat.category\r\n              }))}\r\n              xKey=\"category\"\r\n              yKey=\"amount\"\r\n              title=\"Spending by Category\"\r\n              description=\"Click on a category bar to filter your transactions\"\r\n              colors={topCategories.map(cat => {\r\n                const colorClass = CATEGORY_COLORS[cat.category]\r\n                // Map Tailwind color classes to actual hex values\r\n                const colorMap: Record<string, string> = {\r\n                  'bg-blue-500': '#3b82f6',\r\n                  'bg-indigo-500': '#6366f1',\r\n                  'bg-purple-500': '#8b5cf6',\r\n                  'bg-green-500': '#10b981',\r\n                  'bg-yellow-500': '#f59e0b',\r\n                  'bg-pink-500': '#ec4899',\r\n                  'bg-red-500': '#ef4444',\r\n                  'bg-orange-500': '#f97316',\r\n                  'bg-cyan-500': '#06b6d4',\r\n                  'bg-gray-500': '#6b7280',\r\n                }\r\n                return colorMap[colorClass] || '#6b7280'\r\n              })}\r\n              onBarClick={(data) => handleCategoryClick(data.originalCategory as TransactionCategory)}\r\n              selectedIndex={selectedCategory ? topCategories.findIndex(cat => cat.category === selectedCategory) : undefined}\r\n              responsive\r\n              showTooltip\r\n              showLegend={false}\r\n            />\r\n          </div>\r\n          \r\n          {/* Category List for Mobile */}\r\n          <div className=\"space-y-3 md:hidden\">\r\n            {topCategories.map((category, index) => {\r\n              const percentage = maxAmount > 0 ? (category.amount.amount / maxAmount) * 100 : 0\r\n              const isSelected = selectedCategory === category.category\r\n              \r\n              return (\r\n                <motion.div\r\n                  key={category.category}\r\n                  initial={{ opacity: 0, x: -20 }}\r\n                  animate={{ opacity: 1, x: 0 }}\r\n                  transition={{ duration: 0.4, delay: 0.1 + index * 0.05 }}\r\n                  className=\"group\"\r\n                >\r\n                  <button\r\n                    onClick={() => handleCategoryClick(category.category)}\r\n                    className={cn(\r\n                      \"w-full text-left p-3 rounded-lg transition-all duration-200 hover:shadow-md\",\r\n                      isSelected \r\n                        ? \"bg-blue-50 border-2 border-blue-200 shadow-md\" \r\n                        : \"bg-gray-50 hover:bg-gray-100 border-2 border-transparent\"\r\n                    )}\r\n                    aria-label={`Filter by ${CATEGORY_LABELS[category.category]} category`}\r\n                  >\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <div className={cn(\r\n                          \"w-3 h-3 rounded-full flex-shrink-0\",\r\n                          CATEGORY_COLORS[category.category]\r\n                        )} />\r\n                        <span className=\"font-medium text-gray-900\">\r\n                          {CATEGORY_LABELS[category.category]}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <div className=\"font-bold text-gray-900\">\r\n                          {formatCurrency(category.amount.amount, category.amount.currency)}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          {category.percentage.toFixed(1)}%\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {/* Progress Bar */}\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2 overflow-hidden\">\r\n                      <motion.div\r\n                        className={cn(\r\n                          \"h-full rounded-full transition-all duration-300\",\r\n                          CATEGORY_COLORS[category.category],\r\n                          isSelected && \"ring-2 ring-blue-300\"\r\n                        )}\r\n                        initial={{ width: 0 }}\r\n                        animate={{ width: `${percentage}%` }}\r\n                        transition={{ duration: 0.8, delay: 0.2 + index * 0.1 }}\r\n                      />\r\n                    </div>\r\n                    \r\n                    {/* Transaction Count */}\r\n                    <div className=\"mt-2 text-xs text-gray-500\">\r\n                      {category.transactionCount} transaction{category.transactionCount !== 1 ? 's' : ''}\r\n                    </div>\r\n                  </button>\r\n                </motion.div>\r\n              )\r\n            })}\r\n          </div>\r\n\r\n          {/* Summary */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.8 }}\r\n            className=\"pt-4 border-t border-gray-200\"\r\n          >\r\n            <div className=\"flex items-center justify-between text-sm\">\r\n              <span className=\"text-gray-600\">\r\n                {selectedCategory ? `Filtered by ${CATEGORY_LABELS[selectedCategory]}` : 'All categories shown'}\r\n              </span>\r\n              {selectedCategory && (\r\n                <button\r\n                  onClick={() => handleCategoryClick(selectedCategory)}\r\n                  className=\"text-blue-600 hover:text-blue-700 font-medium\"\r\n                >\r\n                  Clear filter\r\n                </button>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Screen reader fallback table */}\r\n          <div className=\"sr-only\">\r\n            <table>\r\n              <caption>Spending by category breakdown</caption>\r\n              <thead>\r\n                <tr>\r\n                  <th>Category</th>\r\n                  <th>Amount</th>\r\n                  <th>Percentage</th>\r\n                  <th>Transaction Count</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {topCategories.map(category => (\r\n                  <tr key={category.category}>\r\n                    <td>{CATEGORY_LABELS[category.category]}</td>\r\n                    <td>{formatCurrency(category.amount.amount, category.amount.currency)}</td>\r\n                    <td>{category.percentage.toFixed(1)}%</td>\r\n                    <td>{category.transactionCount}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4504, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/wrapped/TrendLineChart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { MonthMetrics } from \"@/lib/types\"\r\nimport { formatCurrency } from \"@/lib/api\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { TrendingUp, TrendingDown } from \"lucide-react\"\r\nimport { VizLine } from \"@/lib/viz\"\r\n\r\ninterface TrendLineChartProps {\r\n  metrics: MonthMetrics\r\n  className?: string\r\n}\r\n\r\n// Generate mock daily spending data for the trend line\r\nfunction generateDailySpendingData(metrics: MonthMetrics) {\r\n  const daysInMonth = new Date(metrics.month + '-01').getDate()\r\n  const data: Array<{ day: string; date: string; spending: number; cumulative: number }> = []\r\n  \r\n  // Create a realistic spending pattern with some variation\r\n  const baseDailyAmount = metrics.spendingPatterns.averageDailySpending.amount\r\n  // const highestDayAmount = metrics.spendingPatterns.highestSpendingDay.amount.amount\r\n  \r\n  for (let day = 1; day <= daysInMonth; day++) {\r\n    // Add some realistic variation to daily spending\r\n    const variation = (Math.sin(day * 0.3) * 0.3 + Math.random() * 0.4 - 0.2)\r\n    const isWeekend = new Date(metrics.month + `-${day.toString().padStart(2, '0')}`).getDay() % 6 === 0\r\n    const weekendMultiplier = isWeekend ? 1.2 : 0.9\r\n    \r\n    const amount = Math.max(0, baseDailyAmount * (1 + variation) * weekendMultiplier)\r\n    \r\n    data.push({\r\n      day: day.toString(),\r\n      date: `${metrics.month}-${day.toString().padStart(2, '0')}`,\r\n      spending: Math.round(amount),\r\n      cumulative: data.length > 0 ? data[data.length - 1].cumulative + Math.round(amount) : Math.round(amount)\r\n    })\r\n  }\r\n  \r\n  return data\r\n}\r\n\r\nexport function TrendLineChart({ metrics, className }: TrendLineChartProps) {\r\n  const dailyData = generateDailySpendingData(metrics)\r\n  \r\n  const totalSpending = dailyData.reduce((sum, day) => sum + day.spending, 0)\r\n  const averageDaily = totalSpending / dailyData.length\r\n  const highestDay = dailyData.reduce((max, day) => day.spending > max.spending ? day : max, dailyData[0])\r\n  \r\n  const isTrendingUp = metrics.trends.weekOverWeek.expenseChange > 0\r\n  const trendIcon = isTrendingUp ? TrendingUp : TrendingDown\r\n  const trendColor = isTrendingUp ? \"text-red-500\" : \"text-green-500\"\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6, delay: 0.3 }}\r\n      className={cn(\"relative\", className)}\r\n    >\r\n      <Card className=\"relative overflow-hidden border-0 bg-gradient-to-br from-white/90 to-white/70 backdrop-blur-sm shadow-xl\">\r\n        <CardHeader className=\"pb-4\">\r\n          <CardTitle className=\"text-xl font-bold text-gray-900\">\r\n            Daily Spending Trend\r\n          </CardTitle>\r\n          <p className=\"text-sm text-gray-600\">\r\n            Your spending pattern throughout the month\r\n          </p>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-6\">\r\n          {/* Key Stats */}\r\n          <div className=\"grid grid-cols-3 gap-4\">\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.4, delay: 0.4 }}\r\n              className=\"text-center p-3 bg-gray-50 rounded-lg\"\r\n            >\r\n              <div className=\"text-2xl font-bold text-gray-900\">\r\n                {formatCurrency(averageDaily, metrics.totalExpenses.currency, { showCents: false })}\r\n              </div>\r\n              <div className=\"text-xs text-gray-600\">Daily Average</div>\r\n            </motion.div>\r\n            \r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.4, delay: 0.5 }}\r\n              className=\"text-center p-3 bg-gray-50 rounded-lg\"\r\n            >\r\n              <div className=\"text-2xl font-bold text-gray-900\">\r\n                {highestDay.day}\r\n              </div>\r\n              <div className=\"text-xs text-gray-600\">Highest Day</div>\r\n            </motion.div>\r\n            \r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.4, delay: 0.6 }}\r\n              className=\"text-center p-3 bg-gray-50 rounded-lg\"\r\n            >\r\n              <div className=\"text-2xl font-bold text-gray-900\">\r\n                {dailyData.filter(d => d.spending > averageDaily).length}\r\n              </div>\r\n              <div className=\"text-xs text-gray-600\">Above Avg Days</div>\r\n            </motion.div>\r\n          </div>\r\n\r\n          {/* Chart */}\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.95 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.5, delay: 0.7 }}\r\n            className=\"h-64\"\r\n          >\r\n            <VizLine\r\n              data={dailyData}\r\n              xKey=\"day\"\r\n              yKey=\"spending\"\r\n              title=\"Daily Spending Trend\"\r\n              description=\"Your spending pattern throughout the month\"\r\n              type=\"line\"\r\n              strokeWidth={2}\r\n              responsive\r\n              showTooltip\r\n              showLegend={false}\r\n              onPointClick={(data) => {\r\n                // Optional: Handle point clicks for drill-down functionality\r\n                console.log('Clicked on day:', data.day, 'Spending:', data.spending)\r\n              }}\r\n            />\r\n          </motion.div>\r\n\r\n          {/* Trend Analysis */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.8 }}\r\n            className=\"p-4 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-100\"\r\n          >\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className={cn(\"p-2 rounded-full\", isTrendingUp ? \"bg-red-100\" : \"bg-green-100\")}>\r\n                {React.createElement(trendIcon, { \r\n                  className: cn(\"h-4 w-4\", trendColor) \r\n                })}\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-900 mb-1\">Spending Trend</p>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {isTrendingUp ? (\r\n                    <>Your spending is <span className=\"font-semibold text-red-600\">increasing</span> by {Math.abs(metrics.trends.weekOverWeek.expenseChange).toFixed(1)}% week over week.</>\r\n                  ) : (\r\n                    <>Your spending is <span className=\"font-semibold text-green-600\">decreasing</span> by {Math.abs(metrics.trends.weekOverWeek.expenseChange).toFixed(1)}% week over week.</>\r\n                  )}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Screen reader fallback */}\r\n          <div className=\"sr-only\">\r\n            <table>\r\n              <caption>Daily spending data for {metrics.month}</caption>\r\n              <thead>\r\n                <tr>\r\n                  <th>Day</th>\r\n                  <th>Date</th>\r\n                  <th>Daily Spending</th>\r\n                  <th>Cumulative Spending</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dailyData.map(day => (\r\n                  <tr key={day.day}>\r\n                    <td>{day.day}</td>\r\n                    <td>{day.date}</td>\r\n                    <td>{formatCurrency(day.spending, metrics.totalExpenses.currency)}</td>\r\n                    <td>{formatCurrency(day.cumulative, metrics.totalExpenses.currency)}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4990, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/components/wrapped/index.ts"],"sourcesContent":["export { WrappedHero } from \"./WrappedHero\"\r\nexport { WrappedSummaryCard } from \"./WrappedSummaryCard\"\r\nexport { CategoryBarChart } from \"./CategoryBarChart\"\r\nexport { TrendLineChart } from \"./TrendLineChart\"\r\nexport { TopMerchants } from \"./TopMerchants\"\r\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 5005, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-transactions.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchTransactions } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const transactionKeys = {\r\n  all: ['transactions'] as const,\r\n  lists: () => [...transactionKeys.all, 'list'] as const,\r\n  list: (page: number, limit: number) => [...transactionKeys.lists(), { page, limit }] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useTransactions(page = 1, limit = 10) {\r\n  return useQuery({\r\n    queryKey: transactionKeys.list(page, limit),\r\n    queryFn: () => fetchTransactions({ page, limit }),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,kBAAkB;IAC7B,KAAK;QAAC;KAAe;IACrB,OAAO,IAAM;eAAI,gBAAgB,GAAG;YAAE;SAAO;IAC7C,MAAM,CAAC,MAAc,QAAkB;eAAI,gBAAgB,KAAK;YAAI;gBAAE;gBAAM;YAAM;SAAE;AACtF;AAGO,SAAS,gBAAgB,OAAO,CAAC,EAAE,QAAQ,EAAE;IAClD,OAAO,IAAA,oMAAQ,EAAC;QACd,UAAU,gBAAgB,IAAI,CAAC,MAAM;QACrC,SAAS,IAAM,IAAA,mJAAiB,EAAC;gBAAE;gBAAM;YAAM;QAC/C,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 5045, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-accounts.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchMonthMetrics } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const accountKeys = {\r\n  all: ['accounts'] as const,\r\n  lists: () => [...accountKeys.all, 'list'] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useAccounts() {\r\n  return useQuery({\r\n    queryKey: accountKeys.lists(),\r\n    queryFn: () => fetchMonthMetrics(new Date().toISOString().slice(0, 7)),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,cAAc;IACzB,KAAK;QAAC;KAAW;IACjB,OAAO,IAAM;eAAI,YAAY,GAAG;YAAE;SAAO;AAC3C;AAGO,SAAS;IACd,OAAO,IAAA,oMAAQ,EAAC;QACd,UAAU,YAAY,KAAK;QAC3B,SAAS,IAAM,IAAA,mJAAiB,EAAC,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;QACnE,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 5075, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-budgets.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchMonthMetrics } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const budgetKeys = {\r\n  all: ['budgets'] as const,\r\n  lists: () => [...budgetKeys.all, 'list'] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useBudgets() {\r\n  return useQuery({\r\n    queryKey: budgetKeys.lists(),\r\n    queryFn: () => fetchMonthMetrics(new Date().toISOString().slice(0, 7)),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,aAAa;IACxB,KAAK;QAAC;KAAU;IAChB,OAAO,IAAM;eAAI,WAAW,GAAG;YAAE;SAAO;AAC1C;AAGO,SAAS;IACd,OAAO,IAAA,oMAAQ,EAAC;QACd,UAAU,WAAW,KAAK;QAC1B,SAAS,IAAM,IAAA,mJAAiB,EAAC,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;QACnE,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 5105, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-user.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchCurrentUser } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const userKeys = {\r\n  all: ['user'] as const,\r\n  current: () => [...userKeys.all, 'current'] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useCurrentUser() {\r\n  return useQuery({\r\n    queryKey: userKeys.current(),\r\n    queryFn: () => fetchCurrentUser(),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,WAAW;IACtB,KAAK;QAAC;KAAO;IACb,SAAS,IAAM;eAAI,SAAS,GAAG;YAAE;SAAU;AAC7C;AAGO,SAAS;IACd,OAAO,IAAA,oMAAQ,EAAC;QACd,UAAU,SAAS,OAAO;QAC1B,SAAS,IAAM,IAAA,kJAAgB;QAC/B,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 5135, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-month-metrics.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchMonthMetrics } from \"@/lib/api\"\r\n\r\n// Query keys\r\nexport const monthMetricsKeys = {\r\n  all: ['monthMetrics'] as const,\r\n  byMonth: (month: string) => [...monthMetricsKeys.all, 'byMonth', month] as const,\r\n}\r\n\r\n// Hooks\r\nexport function useMonthMetrics(month: string = new Date().toISOString().slice(0, 7)) {\r\n  console.log('useMonthMetrics called with month:', month)\r\n  \r\n  return useQuery({\r\n    queryKey: monthMetricsKeys.byMonth(month),\r\n    queryFn: () => {\r\n      console.log('Query function called for month:', month)\r\n      return fetchMonthMetrics(month)\r\n    },\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  })\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,mBAAmB;IAC9B,KAAK;QAAC;KAAe;IACrB,SAAS,CAAC,QAAkB;eAAI,iBAAiB,GAAG;YAAE;YAAW;SAAM;AACzE;AAGO,SAAS,gBAAgB,QAAgB,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG,EAAE;IAClF,QAAQ,GAAG,CAAC,sCAAsC;IAElD,OAAO,IAAA,oMAAQ,EAAC;QACd,UAAU,iBAAiB,OAAO,CAAC;QACnC,SAAS;YACP,QAAQ,GAAG,CAAC,oCAAoC;YAChD,OAAO,IAAA,mJAAiB,EAAC;QAC3B;QACA,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 5170, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-transaction-filters.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport { useCallback, useMemo } from \"react\"\r\nimport { useRouter, useSearchParams } from \"next/navigation\"\r\nimport { TransactionCategory } from \"@/lib/types\"\r\n\r\ninterface TransactionFilters {\r\n  categories: TransactionCategory[]\r\n  merchant: string\r\n  dateFrom: string\r\n  dateTo: string\r\n  sortBy: 'date' | 'amount' | 'merchant' | 'category'\r\n  sortOrder: 'asc' | 'desc'\r\n  density: 'comfortable' | 'compact'\r\n}\r\n\r\n// const DEFAULT_FILTERS: TransactionFilters = {\r\n//   categories: [],\r\n//   merchant: '',\r\n//   dateFrom: '',\r\n//   dateTo: '',\r\n//   sortBy: 'date',\r\n//   sortOrder: 'desc',\r\n//   density: 'comfortable'\r\n// }\r\n\r\nexport function useTransactionFilters() {\r\n  const router = useRouter()\r\n  const searchParams = useSearchParams()\r\n\r\n  const filters = useMemo(() => {\r\n    const categories = searchParams.get('categories')?.split(',').filter(Boolean) as TransactionCategory[] || []\r\n    const merchant = searchParams.get('merchant') || ''\r\n    const dateFrom = searchParams.get('from') || ''\r\n    const dateTo = searchParams.get('to') || ''\r\n    const sortBy = (searchParams.get('sortBy') as 'date' | 'amount' | 'merchant' | 'category') || 'date'\r\n    const sortOrder = (searchParams.get('sortOrder') as 'asc' | 'desc') || 'desc'\r\n    const density = (searchParams.get('density') as 'comfortable' | 'compact') || 'comfortable'\r\n\r\n    return {\r\n      categories,\r\n      merchant,\r\n      dateFrom,\r\n      dateTo,\r\n      sortBy,\r\n      sortOrder,\r\n      density\r\n    }\r\n  }, [searchParams])\r\n\r\n  const updateFilters = useCallback((updates: Partial<TransactionFilters>) => {\r\n    const params = new URLSearchParams(searchParams)\r\n    \r\n    // Update categories\r\n    if (updates.categories !== undefined) {\r\n      if (updates.categories.length > 0) {\r\n        params.set('categories', updates.categories.join(','))\r\n      } else {\r\n        params.delete('categories')\r\n      }\r\n    }\r\n\r\n    // Update merchant\r\n    if (updates.merchant !== undefined) {\r\n      if (updates.merchant) {\r\n        params.set('merchant', updates.merchant)\r\n      } else {\r\n        params.delete('merchant')\r\n      }\r\n    }\r\n\r\n    // Update date range\r\n    if (updates.dateFrom !== undefined) {\r\n      if (updates.dateFrom) {\r\n        params.set('from', updates.dateFrom)\r\n      } else {\r\n        params.delete('from')\r\n      }\r\n    }\r\n\r\n    if (updates.dateTo !== undefined) {\r\n      if (updates.dateTo) {\r\n        params.set('to', updates.dateTo)\r\n      } else {\r\n        params.delete('to')\r\n      }\r\n    }\r\n\r\n    // Update sorting\r\n    if (updates.sortBy !== undefined) {\r\n      params.set('sortBy', updates.sortBy)\r\n    }\r\n\r\n    if (updates.sortOrder !== undefined) {\r\n      params.set('sortOrder', updates.sortOrder)\r\n    }\r\n\r\n    // Update density\r\n    if (updates.density !== undefined) {\r\n      params.set('density', updates.density)\r\n    }\r\n\r\n    // Update URL\r\n    const newUrl = `${window.location.pathname}?${params.toString()}`\r\n    router.push(newUrl, { scroll: false })\r\n  }, [router, searchParams])\r\n\r\n  const toggleCategory = useCallback((category: TransactionCategory) => {\r\n    const currentCategories = filters.categories\r\n    const newCategories = currentCategories.includes(category)\r\n      ? currentCategories.filter(c => c !== category)\r\n      : [...currentCategories, category]\r\n    \r\n    updateFilters({ categories: newCategories })\r\n  }, [filters.categories, updateFilters])\r\n\r\n  const clearAllFilters = useCallback(() => {\r\n    updateFilters({\r\n      categories: [],\r\n      merchant: '',\r\n      dateFrom: '',\r\n      dateTo: ''\r\n    })\r\n  }, [updateFilters])\r\n\r\n  const hasActiveFilters = useMemo(() => {\r\n    return filters.categories.length > 0 || \r\n           filters.merchant.length > 0 || \r\n           filters.dateFrom.length > 0 || \r\n           filters.dateTo.length > 0\r\n  }, [filters.categories, filters.merchant, filters.dateFrom, filters.dateTo])\r\n\r\n  return {\r\n    filters,\r\n    updateFilters,\r\n    toggleCategory,\r\n    clearAllFilters,\r\n    hasActiveFilters\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5298, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/use-budget-mode.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { useRouter, useSearchParams } from \"next/navigation\"\r\n\r\nexport type BudgetMode = 'budget' | 'maintain'\r\n\r\nexport function useBudgetMode() {\r\n  const router = useRouter()\r\n  const searchParams = useSearchParams()\r\n  const [mode, setMode] = useState<BudgetMode>('budget')\r\n  \r\n  useEffect(() => {\r\n    const modeParam = searchParams.get('mode')\r\n    if (modeParam === 'budget' || modeParam === 'maintain') {\r\n      setMode(modeParam)\r\n    }\r\n  }, [searchParams])\r\n  \r\n  const updateMode = (newMode: BudgetMode) => {\r\n    setMode(newMode)\r\n    \r\n    const params = new URLSearchParams(searchParams.toString())\r\n    params.set('mode', newMode)\r\n    \r\n    router.push(`/budget?${params.toString()}`, { scroll: false })\r\n  }\r\n  \r\n  return {\r\n    mode,\r\n    updateMode\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;AAOO,SAAS;IACd,MAAM,SAAS,IAAA,4JAAS;IACxB,MAAM,eAAe,IAAA,kKAAe;IACpC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,8NAAQ,EAAa;IAE7C,IAAA,+NAAS,EAAC;QACR,MAAM,YAAY,aAAa,GAAG,CAAC;QACnC,IAAI,cAAc,YAAY,cAAc,YAAY;YACtD,QAAQ;QACV;IACF,GAAG;QAAC;KAAa;IAEjB,MAAM,aAAa,CAAC;QAClB,QAAQ;QAER,MAAM,SAAS,IAAI,gBAAgB,aAAa,QAAQ;QACxD,OAAO,GAAG,CAAC,QAAQ;QAEnB,OAAO,IAAI,CAAC,CAAC,QAAQ,EAAE,OAAO,QAAQ,IAAI,EAAE;YAAE,QAAQ;QAAM;IAC9D;IAEA,OAAO;QACL;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 5336, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/lib/hooks/index.ts"],"sourcesContent":["// Re-export all hooks for easier importing\r\nexport * from './use-transactions'\r\nexport * from './use-accounts'\r\nexport * from './use-budgets'\r\nexport * from './use-user'\r\nexport * from './use-month-metrics'\r\nexport * from './use-transaction-filters'\r\nexport * from './use-budget-mode'\r\n"],"names":[],"mappings":"AAAA,2CAA2C;;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 5356, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/baiba/OneDrive/Documents/GitHub/Financify2.0/financify/src/app/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { WrappedHero } from \"@/components/wrapped\"\r\nimport { useMonthMetrics } from \"@/lib/hooks\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { useTransactions } from \"@/lib/hooks\"\r\nimport { Transaction } from \"@/lib/types\"\r\nimport { \r\n  Receipt,\r\n  Calendar,\r\n  Upload,\r\n  PiggyBank\r\n} from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport { useSearchParams } from \"next/navigation\"\r\n\r\nexport default function DashboardPage() {\r\n  const searchParams = useSearchParams()\r\n  const month = searchParams.get('month') || '2025-08'\r\n  \r\n  // const { data: user } = useCurrentUser()\r\n  const { data: monthMetrics, isLoading: metricsLoading } = useMonthMetrics(month)\r\n  const { data: transactions } = useTransactions(1, 5)\r\n\r\n  // Show loading state\r\n  if (metricsLoading) {\r\n    return (\r\n      <main className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-muted-foreground\">Loading your financial wrapped...</p>\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n\r\n  // Show error state if no metrics available\r\n  if (!monthMetrics?.data) {\r\n    return (\r\n      <main className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-3xl font-bold tracking-tight mb-4\">No Data Available</h1>\r\n          <p className=\"text-muted-foreground mb-6\">We couldn&apos;t load your financial data. Please try uploading some transactions first.</p>\r\n          <Button asChild>\r\n            <Link href=\"/upload\">Upload Transactions</Link>\r\n          </Button>\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      {/* Wrapped Hero Section */}\r\n      <WrappedHero metrics={monthMetrics.data} />\r\n\r\n      {/* Additional Dashboard Content */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        {/* Quick Actions */}\r\n        <div className=\"mb-8\">\r\n          <h2 className=\"text-2xl font-bold tracking-tight mb-6\">Quick Actions</h2>\r\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n            <Link href=\"/upload\">\r\n              <Card className=\"hover:shadow-md transition-shadow cursor-pointer\">\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">Upload Transactions</CardTitle>\r\n                  <Upload className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-xs text-muted-foreground\">\r\n                    Import your bank statements\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            </Link>\r\n\r\n            <Link href=\"/transactions\">\r\n              <Card className=\"hover:shadow-md transition-shadow cursor-pointer\">\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">View Transactions</CardTitle>\r\n                  <Receipt className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-xs text-muted-foreground\">\r\n                    Manage your transactions\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            </Link>\r\n\r\n            <Link href=\"/calendar\">\r\n              <Card className=\"hover:shadow-md transition-shadow cursor-pointer\">\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">Calendar View</CardTitle>\r\n                  <Calendar className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-xs text-muted-foreground\">\r\n                    See your financial calendar\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            </Link>\r\n\r\n            <Link href=\"/budget\">\r\n              <Card className=\"hover:shadow-md transition-shadow cursor-pointer\">\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">Budget Planning</CardTitle>\r\n                  <PiggyBank className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-xs text-muted-foreground\">\r\n                    Plan and track your budget\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recent Transactions */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Recent Transactions</CardTitle>\r\n            <CardDescription>\r\n              Your latest financial activity\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {transactions?.data?.length ? (\r\n              <div className=\"space-y-4\">\r\n                {transactions.data.map((transaction: Transaction) => (\r\n                  <div key={transaction.id} className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div className={`w-2 h-2 rounded-full ${\r\n                        transaction.type === 'income' ? 'bg-green-500' : 'bg-red-500'\r\n                      }`} />\r\n                      <div>\r\n                        <p className=\"text-sm font-medium\">{transaction.description}</p>\r\n                        <p className=\"text-xs text-muted-foreground\">\r\n                          {transaction.category} • {new Date(transaction.date).toLocaleDateString()}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className={`text-sm font-medium ${\r\n                      transaction.type === 'income' ? 'text-green-600' : 'text-red-600'\r\n                    }`}>\r\n                      {transaction.type === 'income' ? '+' : '-'}${Math.abs(transaction.amount.amount).toLocaleString()}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-sm text-muted-foreground\">No transactions found</p>\r\n            )}\r\n            <div className=\"mt-4\">\r\n              <Button asChild variant=\"outline\" className=\"w-full\">\r\n                <Link href=\"/transactions\">View All Transactions</Link>\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </main>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}