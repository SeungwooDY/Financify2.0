{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/mock.ts"],"sourcesContent":["import { \n  Transaction, \n  MonthMetrics, \n  CopilotAdvice, \n  TransactionCategory,\n  TransactionType,\n  PaymentMethod,\n  TransactionQueryParams\n} from \"./types\"\n\n// ============================================================================\n// MOCK DATA GENERATORS\n// ============================================================================\n\n/**\n * Generate realistic student transactions for a given month\n * Simulates typical student spending patterns and income sources\n */\nexport function generateStudentTransactions(month: string): Transaction[] {\n  const [year, monthNum] = month.split('-').map(Number)\n  const endDate = new Date(year, monthNum, 0)\n  const daysInMonth = endDate.getDate()\n  \n  const transactions: Transaction[] = []\n  let transactionId = 1\n  \n  // Helper to create a transaction\n  const createTransaction = (\n    date: Date,\n    description: string,\n    amountCents: number,\n    category: TransactionCategory,\n    type: TransactionType,\n    paymentMethod: PaymentMethod,\n    merchant?: string,\n    tags: string[] = []\n  ): Transaction => ({\n    id: `txn_${transactionId++}`,\n    date: date.toISOString(),\n    description,\n    amount: { amount: amountCents, currency: \"USD\", symbol: \"$\" },\n    category,\n    type,\n    status: Math.random() > 0.1 ? \"cleared\" : \"pending\",\n    paymentMethod,\n    accountId: \"acc_student_checking\",\n    merchant,\n    location: Math.random() > 0.7 ? {\n      name: merchant || \"Unknown Location\",\n      address: \"123 University Ave, College Town, ST 12345\"\n    } : undefined,\n    tags,\n    notes: Math.random() > 0.8 ? \"Student transaction\" : undefined,\n    metadata: {\n      source: \"mock_data\",\n      generated: true\n    },\n    createdAt: date.toISOString(),\n    updatedAt: date.toISOString()\n  })\n  \n  // Generate transactions for each day\n  for (let day = 1; day <= daysInMonth; day++) {\n    const currentDate = new Date(year, monthNum - 1, day)\n    const dayOfWeek = currentDate.getDay()\n    const isWeekend = dayOfWeek === 0 || dayOfWeek === 6\n    \n    // Income transactions (bi-weekly paychecks, occasional refunds)\n    if (day === 1 || day === 15) {\n      // Bi-weekly paycheck from part-time job\n      transactions.push(createTransaction(\n        currentDate,\n        \"Part-time job paycheck\",\n        120000, // $1,200\n        \"income\",\n        \"income\",\n        \"bank_transfer\",\n        \"Campus Dining Services\"\n      ))\n    }\n    \n    if (day === 3 && Math.random() > 0.7) {\n      // Occasional refund\n      transactions.push(createTransaction(\n        currentDate,\n        \"Textbook refund\",\n        Math.floor(Math.random() * 50000) + 20000, // $200-700\n        \"refund\",\n        \"income\",\n        \"bank_transfer\",\n        \"University Bookstore\"\n      ))\n    }\n    \n    // Daily expenses\n    const dailyExpenseCount = isWeekend ? \n      Math.floor(Math.random() * 3) + 1 : // 1-3 on weekends\n      Math.floor(Math.random() * 2) + 1   // 1-2 on weekdays\n    \n    for (let i = 0; i < dailyExpenseCount; i++) {\n      const expenseTypes = getDailyExpenses(day, isWeekend)\n      const expense = expenseTypes[Math.floor(Math.random() * expenseTypes.length)]\n      \n      transactions.push(createTransaction(\n        currentDate,\n        expense.description,\n        expense.amount,\n        expense.category,\n        \"expense\",\n        expense.paymentMethod,\n        expense.merchant,\n        expense.tags\n      ))\n    }\n    \n    // Weekly recurring expenses\n    if (day % 7 === 0) {\n      // Weekly grocery shopping\n      transactions.push(createTransaction(\n        currentDate,\n        \"Weekly grocery shopping\",\n        Math.floor(Math.random() * 8000) + 4000, // $40-120\n        \"food\",\n        \"expense\",\n        \"debit_card\",\n        \"Campus Market\",\n        [\"groceries\", \"weekly\"]\n      ))\n    }\n    \n    // Monthly recurring expenses\n    if (day === 1) {\n      // Rent\n      transactions.push(createTransaction(\n        currentDate,\n        \"Monthly rent\",\n        120000, // $1,200\n        \"housing\",\n        \"expense\",\n        \"bank_transfer\",\n        \"University Housing\",\n        [\"rent\", \"monthly\"]\n      ))\n      \n      // Utilities\n      transactions.push(createTransaction(\n        currentDate,\n        \"Utilities\",\n        Math.floor(Math.random() * 3000) + 2000, // $20-50\n        \"utilities\",\n        \"expense\",\n        \"debit_card\",\n        \"Campus Utilities\",\n        [\"utilities\", \"monthly\"]\n      ))\n    }\n    \n    if (day === 5) {\n      // Tuition payment (if applicable)\n      if (Math.random() > 0.3) {\n        transactions.push(createTransaction(\n          currentDate,\n          \"Tuition payment\",\n          Math.floor(Math.random() * 200000) + 300000, // $3,000-5,000\n          \"tuition\",\n          \"expense\",\n          \"bank_transfer\",\n          \"University Bursar\",\n          [\"tuition\", \"education\"]\n        ))\n      }\n    }\n  }\n  \n  return transactions.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n}\n\n/**\n * Get daily expense patterns based on day and weekend status\n */\nfunction getDailyExpenses(day: number, isWeekend: boolean): Array<{\n  description: string\n  amount: number\n  category: TransactionCategory\n  paymentMethod: PaymentMethod\n  merchant?: string\n  tags: string[]\n}> {\n  const baseExpenses = [\n    // Food expenses\n    {\n      description: \"Coffee\",\n      amount: Math.floor(Math.random() * 300) + 200, // $2-5\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Coffee Shop\",\n      tags: [\"coffee\", \"daily\"]\n    },\n    {\n      description: \"Lunch\",\n      amount: Math.floor(Math.random() * 800) + 500, // $5-13\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Dining Hall\",\n      tags: [\"lunch\", \"daily\"]\n    },\n    {\n      description: \"Dinner\",\n      amount: Math.floor(Math.random() * 1000) + 800, // $8-18\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Dining Hall\",\n      tags: [\"dinner\", \"daily\"]\n    },\n    {\n      description: \"Snacks\",\n      amount: Math.floor(Math.random() * 400) + 200, // $2-6\n      category: \"food\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Store\",\n      tags: [\"snacks\", \"daily\"]\n    },\n    \n    // Transportation\n    {\n      description: \"Bus fare\",\n      amount: 250, // $2.50\n      category: \"transportation\" as TransactionCategory,\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\n      merchant: \"City Transit\",\n      tags: [\"transport\", \"daily\"]\n    },\n    {\n      description: \"Uber ride\",\n      amount: Math.floor(Math.random() * 1500) + 800, // $8-23\n      category: \"transportation\" as TransactionCategory,\n      paymentMethod: \"mobile_payment\" as PaymentMethod,\n      merchant: \"Uber\",\n      tags: [\"transport\", \"ride_share\"]\n    },\n    \n    // Entertainment\n    {\n      description: \"Movie ticket\",\n      amount: Math.floor(Math.random() * 500) + 800, // $8-13\n      category: \"entertainment\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Theater\",\n      tags: [\"entertainment\", \"movies\"]\n    },\n    {\n      description: \"Streaming subscription\",\n      amount: 1500, // $15\n      category: \"entertainment\" as TransactionCategory,\n      paymentMethod: \"credit_card\" as PaymentMethod,\n      merchant: \"Netflix\",\n      tags: [\"entertainment\", \"subscription\"]\n    },\n    \n    // Shopping\n    {\n      description: \"Textbook\",\n      amount: Math.floor(Math.random() * 15000) + 5000, // $50-200\n      category: \"books\" as TransactionCategory,\n      paymentMethod: \"credit_card\" as PaymentMethod,\n      merchant: \"University Bookstore\",\n      tags: [\"books\", \"education\"]\n    },\n    {\n      description: \"School supplies\",\n      amount: Math.floor(Math.random() * 2000) + 500, // $5-25\n      category: \"shopping\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Store\",\n      tags: [\"supplies\", \"education\"]\n    },\n    {\n      description: \"Clothing\",\n      amount: Math.floor(Math.random() * 8000) + 2000, // $20-100\n      category: \"shopping\" as TransactionCategory,\n      paymentMethod: \"credit_card\" as PaymentMethod,\n      merchant: \"Campus Clothing Store\",\n      tags: [\"clothing\", \"shopping\"]\n    },\n    \n    // Healthcare\n    {\n      description: \"Prescription\",\n      amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\n      category: \"healthcare\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Pharmacy\",\n      tags: [\"healthcare\", \"prescription\"]\n    },\n    {\n      description: \"Doctor visit\",\n      amount: Math.floor(Math.random() * 5000) + 2000, // $20-70\n      category: \"healthcare\" as TransactionCategory,\n      paymentMethod: \"debit_card\" as PaymentMethod,\n      merchant: \"Campus Health Center\",\n      tags: [\"healthcare\", \"medical\"]\n    }\n  ]\n  \n  if (isWeekend) {\n    // Weekend-specific expenses\n    baseExpenses.push(\n      {\n        description: \"Weekend brunch\",\n        amount: Math.floor(Math.random() * 1200) + 800, // $8-20\n        category: \"food\" as TransactionCategory,\n        paymentMethod: \"debit_card\" as PaymentMethod,\n        merchant: \"Campus Brunch Spot\",\n        tags: [\"food\", \"weekend\", \"brunch\"]\n      },\n      {\n        description: \"Party supplies\",\n        amount: Math.floor(Math.random() * 3000) + 1000, // $10-40\n        category: \"entertainment\" as TransactionCategory,\n        paymentMethod: \"debit_card\" as PaymentMethod,\n        merchant: \"Campus Store\",\n        tags: [\"entertainment\", \"party\", \"weekend\"]\n      }\n    )\n  }\n  \n  return baseExpenses\n}\n\n/**\n * Generate monthly metrics based on transactions\n */\nexport function generateMonthMetrics(month: string, transactions: Transaction[]): MonthMetrics {\n  const incomeTransactions = transactions.filter(t => t.type === \"income\")\n  const expenseTransactions = transactions.filter(t => t.type === \"expense\")\n  \n  const totalIncome = incomeTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\n  const totalExpenses = expenseTransactions.reduce((sum, t) => sum + t.amount.amount, 0)\n  const netIncome = totalIncome - totalExpenses\n  const savingsRate = totalIncome > 0 ? (netIncome / totalIncome) * 100 : 0\n  \n  // Category breakdown\n  const categoryMap = new Map<TransactionCategory, { amount: number; count: number }>()\n  expenseTransactions.forEach(t => {\n    const existing = categoryMap.get(t.category) || { amount: 0, count: 0 }\n    categoryMap.set(t.category, {\n      amount: existing.amount + t.amount.amount,\n      count: existing.count + 1\n    })\n  })\n  \n  const categoryBreakdown = Array.from(categoryMap.entries()).map(([category, data]) => ({\n    category,\n    amount: { amount: data.amount, currency: \"USD\", symbol: \"$\" },\n    percentage: totalExpenses > 0 ? (data.amount / totalExpenses) * 100 : 0,\n    transactionCount: data.count\n  })).sort((a, b) => b.amount.amount - a.amount.amount)\n  \n  // Spending patterns\n  const dailySpending = new Map<string, number>()\n  expenseTransactions.forEach(t => {\n    const date = t.date.split('T')[0]\n    dailySpending.set(date, (dailySpending.get(date) || 0) + t.amount.amount)\n  })\n  \n  const averageDailySpending = dailySpending.size > 0 ? \n    Array.from(dailySpending.values()).reduce((sum, amount) => sum + amount, 0) / dailySpending.size : 0\n  \n  const highestSpendingDay = Array.from(dailySpending.entries())\n    .sort((a, b) => b[1] - a[1])[0] || [\"\", 0]\n  \n  const mostFrequentCategory = categoryBreakdown\n    .sort((a, b) => b.transactionCount - a.transactionCount)[0]?.category || \"other\"\n  \n  const mostExpensiveCategory = categoryBreakdown[0]?.category || \"other\"\n  \n  // Generate alerts\n  const alerts = []\n  if (savingsRate < 10) {\n    alerts.push({\n      type: \"goal_missed\" as const,\n      category: \"general\" as TransactionCategory,\n      message: \"Your savings rate is below 10%. Consider reducing discretionary spending.\",\n      severity: \"medium\" as const\n    })\n  }\n  \n  if (totalExpenses > totalIncome * 0.9) {\n    alerts.push({\n      type: \"overspend\" as const,\n      category: \"general\" as TransactionCategory,\n      message: \"You're spending over 90% of your income. This leaves little room for savings.\",\n      severity: \"high\" as const\n    })\n  }\n  \n  const foodSpending = categoryBreakdown.find(c => c.category === \"food\")?.amount.amount || 0\n  if (foodSpending > totalExpenses * 0.4) {\n    alerts.push({\n      type: \"overspend\" as const,\n      category: \"food\" as TransactionCategory,\n      message: \"Food spending is over 40% of total expenses. Consider meal planning to reduce costs.\",\n      severity: \"medium\" as const\n    })\n  }\n  \n  return {\n    month,\n    totalIncome: { amount: totalIncome, currency: \"USD\", symbol: \"$\" },\n    totalExpenses: { amount: totalExpenses, currency: \"USD\", symbol: \"$\" },\n    netIncome: { amount: netIncome, currency: \"USD\", symbol: \"$\" },\n    savingsRate,\n    categoryBreakdown,\n    spendingPatterns: {\n      averageDailySpending: { amount: Math.round(averageDailySpending), currency: \"USD\", symbol: \"$\" },\n      highestSpendingDay: {\n        date: highestSpendingDay[0],\n        amount: { amount: highestSpendingDay[1], currency: \"USD\", symbol: \"$\" }\n      },\n      mostFrequentCategory,\n      mostExpensiveCategory\n    },\n    budgetComparison: [], // Would be populated with actual budget data\n    trends: {\n      weekOverWeek: {\n        incomeChange: Math.random() * 20 - 10, // -10% to +10%\n        expenseChange: Math.random() * 20 - 10\n      },\n      monthOverMonth: {\n        incomeChange: Math.random() * 30 - 15, // -15% to +15%\n        expenseChange: Math.random() * 30 - 15\n      }\n    },\n    alerts,\n    generatedAt: new Date().toISOString(),\n    trend_daily: [] // Will be populated by the calendar component\n  }\n}\n\n/**\n * Generate AI copilot advice based on metrics and transactions\n */\nexport function generateCopilotAdvice(\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\n  month: string,\n  metrics: MonthMetrics,\n  transactions: Transaction[]\n): CopilotAdvice {\n  const adviceTemplates = {\n    general: [\n      {\n        title: \"Financial Health Check\",\n        message: \"Your financial health looks good overall. Consider these small improvements to optimize your student budget.\",\n        priority: \"medium\" as const,\n        recommendations: [\n          {\n            id: \"rec_1\",\n            title: \"Set up automatic savings\",\n            description: \"Transfer $50-100 to savings each month automatically\",\n            actionType: \"save_more\" as const,\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"easy\" as const,\n            timeframe: \"immediate\" as const\n          }\n        ]\n      }\n    ],\n    budget: [\n      {\n        title: \"Budget Optimization\",\n        message: \"Your current spending patterns show room for improvement. Here's how to optimize your budget.\",\n        priority: \"high\" as const,\n        recommendations: [\n          {\n            id: \"rec_2\",\n            title: \"Reduce food spending\",\n            description: \"Meal prep on Sundays to cut food costs by 30%\",\n            actionType: \"reduce_spending\" as const,\n            estimatedImpact: { amount: 8000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"medium\" as const,\n            timeframe: \"short_term\" as const\n          }\n        ]\n      }\n    ],\n    savings: [\n      {\n        title: \"Boost Your Savings\",\n        message: \"Your savings rate could be improved. Here are some strategies to save more money.\",\n        priority: \"high\" as const,\n        recommendations: [\n          {\n            id: \"rec_3\",\n            title: \"Open a high-yield savings account\",\n            description: \"Earn 4%+ interest on your emergency fund\",\n            actionType: \"save_more\" as const,\n            estimatedImpact: { amount: 2000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"easy\" as const,\n            timeframe: \"immediate\" as const\n          }\n        ]\n      }\n    ],\n    spending: [\n      {\n        title: \"Smart Spending Tips\",\n        message: \"You're spending more than necessary in some categories. Here's how to spend smarter.\",\n        priority: \"medium\" as const,\n        recommendations: [\n          {\n            id: \"rec_4\",\n            title: \"Use student discounts\",\n            description: \"Take advantage of student pricing for software, transportation, and entertainment\",\n            actionType: \"reduce_spending\" as const,\n            estimatedImpact: { amount: 3000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"easy\" as const,\n            timeframe: \"immediate\" as const\n          }\n        ]\n      }\n    ],\n    debt: [\n      {\n        title: \"Debt Management\",\n        message: \"If you have student loans or credit card debt, here's how to manage it effectively.\",\n        priority: \"urgent\" as const,\n        recommendations: [\n          {\n            id: \"rec_5\",\n            title: \"Pay more than minimum\",\n            description: \"Even $25 extra per month can save thousands in interest\",\n            actionType: \"pay_debt\" as const,\n            estimatedImpact: { amount: 5000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"medium\" as const,\n            timeframe: \"long_term\" as const\n          }\n        ]\n      }\n    ],\n    investment: [\n      {\n        title: \"Start Investing Early\",\n        message: \"Even small amounts invested now can grow significantly over time.\",\n        priority: \"low\" as const,\n        recommendations: [\n          {\n            id: \"rec_6\",\n            title: \"Open a Roth IRA\",\n            description: \"Start with $25/month in a low-cost index fund\",\n            actionType: \"save_more\" as const,\n            estimatedImpact: { amount: 10000, currency: \"USD\", symbol: \"$\" },\n            difficulty: \"hard\" as const,\n            timeframe: \"long_term\" as const\n          }\n        ]\n      }\n    ]\n  }\n  \n  const template = adviceTemplates[mode][0]\n  const relevantTransactionIds = transactions\n    .filter(t => t.type === \"expense\")\n    .slice(0, 5)\n    .map(t => t.id)\n  \n  return {\n    id: `advice_${Date.now()}`,\n    mode,\n    title: template.title,\n    message: template.message,\n    priority: template.priority,\n    category: \"general\",\n    recommendations: template.recommendations,\n    insights: [\n      {\n        metric: \"Savings Rate\",\n        value: `${metrics.savingsRate.toFixed(1)}%`,\n        trend: metrics.savingsRate > 20 ? \"up\" : \"down\",\n        significance: \"high\"\n      },\n      {\n        metric: \"Monthly Expenses\",\n        value: `$${(metrics.totalExpenses.amount / 100).toFixed(0)}`,\n        trend: \"stable\",\n        significance: \"medium\"\n      }\n    ],\n    context: {\n      month,\n      relevantTransactions: relevantTransactionIds,\n      userProfile: {\n        studentType: \"undergraduate\",\n        incomeLevel: \"medium\",\n        spendingStyle: \"moderate\"\n      }\n    },\n    generatedAt: new Date().toISOString(),\n    expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString() // 7 days\n  }\n}\n\n// ============================================================================\n// MOCK DATA STORAGE\n// ============================================================================\n\n/**\n * In-memory storage for mock data\n * In production, this would be replaced with actual database calls\n */\nclass MockDataStore {\n  private transactions: Map<string, Transaction[]> = new Map()\n  private metrics: Map<string, MonthMetrics> = new Map()\n  private advice: Map<string, CopilotAdvice[]> = new Map()\n  \n  constructor() {\n    // Pre-generate data for current month and previous month\n    const currentMonth = new Date().toISOString().slice(0, 7)\n    const lastMonth = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().slice(0, 7)\n    \n    this.generateMonthData(currentMonth)\n    this.generateMonthData(lastMonth)\n    \n    // Also generate data for a few months back to ensure we have data\n    const monthsBack = ['2024-12', '2025-01', '2025-02', '2025-03', '2025-04', '2025-05', '2025-06', '2025-07', '2025-08']\n    monthsBack.forEach(month => this.generateMonthData(month))\n  }\n  \n  private generateMonthData(month: string) {\n    const transactions = generateStudentTransactions(month)\n    const metrics = generateMonthMetrics(month, transactions)\n    \n    this.transactions.set(month, transactions)\n    this.metrics.set(month, metrics)\n  }\n  \n  getTransactions(month: string): Transaction[] {\n    if (!this.transactions.has(month)) {\n      this.generateMonthData(month)\n    }\n    return this.transactions.get(month) || []\n  }\n  \n  getMetrics(month: string): MonthMetrics | null {\n    if (!this.metrics.has(month)) {\n      this.generateMonthData(month)\n    }\n    return this.metrics.get(month) || null\n  }\n  \n  getAdvice(mode: string, month: string): CopilotAdvice[] {\n    const key = `${mode}_${month}`\n    if (!this.advice.has(key)) {\n      const transactions = this.getTransactions(month)\n      const metrics = this.getMetrics(month)\n      if (metrics) {\n        const advice = generateCopilotAdvice(\n          mode as \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\n          month,\n          metrics,\n          transactions\n        )\n        this.advice.set(key, [advice])\n      }\n    }\n    return this.advice.get(key) || []\n  }\n}\n\n// Global mock data store instance\nexport const mockDataStore = new MockDataStore()\n\n// ============================================================================\n// UTILITY FUNCTIONS\n// ============================================================================\n\n/**\n * Filter transactions based on query parameters\n */\nexport function filterTransactions(\n  transactions: Transaction[],\n  params: TransactionQueryParams\n): Transaction[] {\n  let filtered = [...transactions]\n  \n  if (params.category) {\n    filtered = filtered.filter(t => t.category === params.category)\n  }\n  \n  if (params.type) {\n    filtered = filtered.filter(t => t.type === params.type)\n  }\n  \n  if (params.status) {\n    filtered = filtered.filter(t => t.status === params.status)\n  }\n  \n  if (params.minAmount !== undefined) {\n    filtered = filtered.filter(t => t.amount.amount >= params.minAmount!)\n  }\n  \n  if (params.maxAmount !== undefined) {\n    filtered = filtered.filter(t => t.amount.amount <= params.maxAmount!)\n  }\n  \n  if (params.search) {\n    const searchLower = params.search.toLowerCase()\n    filtered = filtered.filter(t => \n      t.description.toLowerCase().includes(searchLower) ||\n      t.merchant?.toLowerCase().includes(searchLower) ||\n      t.notes?.toLowerCase().includes(searchLower)\n    )\n  }\n  \n  if (params.tags && params.tags.length > 0) {\n    filtered = filtered.filter(t => \n      params.tags!.some(tag => t.tags.includes(tag))\n    )\n  }\n  \n  // Sorting\n  if (params.sortBy) {\n    filtered.sort((a, b) => {\n      let aVal: string | number, bVal: string | number\n      \n      switch (params.sortBy) {\n        case \"date\":\n          aVal = new Date(a.date).getTime()\n          bVal = new Date(b.date).getTime()\n          break\n        case \"amount\":\n          aVal = a.amount.amount\n          bVal = b.amount.amount\n          break\n        case \"description\":\n          aVal = a.description\n          bVal = b.description\n          break\n        default:\n          return 0\n      }\n      \n      if (params.sortOrder === \"desc\") {\n        return bVal > aVal ? 1 : -1\n      } else {\n        return aVal > bVal ? 1 : -1\n      }\n    })\n  }\n  \n  return filtered\n}\n\n/**\n * Paginate results\n */\nexport function paginateResults<T>(\n  items: T[],\n  page: number = 1,\n  limit: number = 20\n): { items: T[]; total: number; page: number; totalPages: number } {\n  const startIndex = (page - 1) * limit\n  const endIndex = startIndex + limit\n  const paginatedItems = items.slice(startIndex, endIndex)\n  \n  return {\n    items: paginatedItems,\n    total: items.length,\n    page,\n    totalPages: Math.ceil(items.length / limit)\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/api.ts"],"sourcesContent":["import { \n  Transaction, \n  MonthMetrics, \n  CopilotAdvice, \n  ApiResponse, \n  TransactionQueryParams,\n  CurrencyFormatOptions,\n  User\n} from \"./types\"\nimport { mockDataStore, filterTransactions, paginateResults } from \"./mock\"\n\n// ============================================================================\n// API CONFIGURATION\n// ============================================================================\n\n/**\n * API Configuration\n * \n * To swap to real endpoints later:\n * 1. Update BASE_URL to your API server\n * 2. Replace mock data calls with actual HTTP requests\n * 3. Update error handling for network failures\n * 4. Add authentication headers if needed\n */\nconst API_CONFIG = {\n  BASE_URL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001/api\",\n  TIMEOUT: 10000, // 10 seconds\n  RETRY_ATTEMPTS: 3,\n  RETRY_DELAY: 1000, // 1 second\n}\n\n// ============================================================================\n// HTTP CLIENT\n// ============================================================================\n\n/**\n * Generic HTTP client with error handling and retries\n * \n * In production, replace with your preferred HTTP client (axios, fetch, etc.)\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass ApiClient {\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    const url = `${API_CONFIG.BASE_URL}${endpoint}`\n    \n    const defaultOptions: RequestInit = {\n      headers: {\n        'Content-Type': 'application/json',\n        // Add authentication headers here if needed\n        // 'Authorization': `Bearer ${getAuthToken()}`,\n      },\n      ...options,\n    }\n    \n    try {\n      const response = await fetch(url, defaultOptions)\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n      }\n      \n      const data = await response.json()\n      return {\n        success: true,\n        data,\n        error: null\n      }\n    } catch (error) {\n      console.error(`API Error for ${endpoint}:`, error)\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'NETWORK_ERROR',\n          message: error instanceof Error ? error.message : 'Unknown error',\n          details: { endpoint, options },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n  }\n  \n  async get<T>(endpoint: string, params?: Record<string, string>): Promise<ApiResponse<T>> {\n    const url = params ? `${endpoint}?${new URLSearchParams(params)}` : endpoint\n    return this.request<T>(url, { method: 'GET' })\n  }\n  \n  async post<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, {\n      method: 'POST',\n      body: data ? JSON.stringify(data) : undefined\n    })\n  }\n  \n  async put<T>(endpoint: string, data?: unknown): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, {\n      method: 'PUT',\n      body: data ? JSON.stringify(data) : undefined\n    })\n  }\n  \n  async delete<T>(endpoint: string): Promise<ApiResponse<T>> {\n    return this.request<T>(endpoint, { method: 'DELETE' })\n  }\n}\n\n// Global API client instance\n// const apiClient = new ApiClient() // Uncomment when switching to real API\n\n// ============================================================================\n// MOCK API IMPLEMENTATION\n// ============================================================================\n\n/**\n * Mock API implementation using in-memory data\n * \n * To replace with real API:\n * 1. Replace mockDataStore calls with apiClient calls\n * 2. Update response format to match your API\n * 3. Add proper error handling for network failures\n * 4. Implement caching if needed\n */\n\n/**\n * Fetch monthly metrics for a specific month\n * \n * @param month - Month in YYYY-MM format\n * @returns Promise<ApiResponse<MonthMetrics>>\n * \n * Real API endpoint: GET /api/metrics/{month}\n */\nexport async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\n  try {\n    console.log('Fetching metrics for month:', month)\n    \n    // Validate month format\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\n      console.error('Invalid month format:', month)\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'INVALID_MONTH_FORMAT',\n          message: 'Month must be in YYYY-MM format',\n          details: { month },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n    \n    // In production, replace with:\n    // return apiClient.get<MonthMetrics>(`/metrics/${month}`)\n    \n    const metrics = mockDataStore.getMetrics(month)\n    console.log('Retrieved metrics:', metrics ? 'Found' : 'Not found')\n    \n    if (!metrics) {\n      console.error('No metrics found for month:', month)\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'METRICS_NOT_FOUND',\n          message: `No metrics found for month ${month}`,\n          details: { month },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n    \n    console.log('Returning metrics successfully')\n    return {\n      success: true,\n      data: metrics,\n      error: null\n    }\n  } catch (error) {\n    console.error('Error fetching month metrics:', error)\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'INTERNAL_ERROR',\n        message: 'Failed to fetch month metrics',\n        details: { month, error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      }\n    }\n  }\n}\n\n/**\n * Fetch transactions with optional filtering and pagination\n * \n * @param params - Query parameters for filtering and pagination\n * @returns Promise<ApiResponse<Transaction[]>>\n * \n * Real API endpoint: GET /api/transactions?{params}\n */\nexport async function fetchTransactions(\n  params: TransactionQueryParams = {}\n): Promise<ApiResponse<Transaction[]>> {\n  try {\n    const { month = new Date().toISOString().slice(0, 7), page = 1, limit = 20, ...filters } = params\n    \n    // In production, replace with:\n    // const queryParams = new URLSearchParams()\n    // Object.entries(params).forEach(([key, value]) => {\n    //   if (value !== undefined) {\n    //     queryParams.append(key, String(value))\n    //   }\n    // })\n    // return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\n    \n    const allTransactions = mockDataStore.getTransactions(month)\n    const filteredTransactions = filterTransactions(allTransactions, filters)\n    const paginatedResult = paginateResults(filteredTransactions, page, limit)\n    \n    return {\n      success: true,\n      data: paginatedResult.items,\n      error: null,\n      metadata: {\n        total: paginatedResult.total,\n        page: paginatedResult.page,\n        limit,\n        hasMore: paginatedResult.page < paginatedResult.totalPages\n      }\n    }\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'INTERNAL_ERROR',\n        message: 'Failed to fetch transactions',\n        details: { params, error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      }\n    }\n  }\n}\n\n/**\n * Fetch AI copilot advice for a specific mode and month\n * \n * @param mode - Advice mode (general, budget, savings, etc.)\n * @param month - Month in YYYY-MM format\n * @returns Promise<ApiResponse<CopilotAdvice[]>>\n * \n * Real API endpoint: GET /api/advice/{mode}?month={month}\n */\nexport async function fetchAdvice(\n  mode: \"general\" | \"budget\" | \"savings\" | \"spending\" | \"debt\" | \"investment\",\n  month: string = new Date().toISOString().slice(0, 7)\n): Promise<ApiResponse<CopilotAdvice[]>> {\n  try {\n    // Validate month format\n    if (!/^\\d{4}-\\d{2}$/.test(month)) {\n      return {\n        success: false,\n        data: null,\n        error: {\n          code: 'INVALID_MONTH_FORMAT',\n          message: 'Month must be in YYYY-MM format',\n          details: { month },\n          timestamp: new Date().toISOString()\n        }\n      }\n    }\n    \n    // In production, replace with:\n    // return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\n    \n    const advice = mockDataStore.getAdvice(mode, month)\n    \n    return {\n      success: true,\n      data: advice,\n      error: null\n    }\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'INTERNAL_ERROR',\n        message: 'Failed to fetch advice',\n        details: { mode, month, error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      }\n    }\n  }\n}\n\nexport async function fetchCurrentUser(): Promise<ApiResponse<User>> {\n  try {\n    // In production, replace with:\n    // return apiClient.get<User>(\"/user/me\")\n    \n    // Mock user data\n    const user: User = {\n      id: \"user_1\",\n      firstName: \"John\",\n      lastName: \"Doe\",\n      email: \"john.doe@example.com\",\n      avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=32&h=32&fit=crop&crop=face\",\n      preferences: {\n        currency: \"USD\",\n        dateFormat: \"MM/DD/YYYY\",\n        timezone: \"America/New_York\",\n        notifications: {\n          email: true,\n          push: true,\n          sms: false,\n        },\n      },\n      createdAt: \"2024-01-01T00:00:00Z\",\n      updatedAt: new Date().toISOString(),\n    }\n    \n    return {\n      success: true,\n      data: user,\n      error: null,\n    }\n  } catch (error) {\n    console.error(\"Error fetching user:\", error)\n    return {\n      success: false,\n      data: null,\n      error: {\n        code: 'USER_FETCH_ERROR',\n        message: \"Failed to fetch user\",\n        details: { error: error instanceof Error ? error.message : 'Unknown error' },\n        timestamp: new Date().toISOString()\n      },\n    }\n  }\n}\n\n// ============================================================================\n// CURRENCY UTILITIES\n// ============================================================================\n\n/**\n * Format currency amount for display\n * \n * @param amount - Amount in cents\n * @param currency - Currency code (default: USD)\n * @param options - Formatting options\n * @returns Formatted currency string\n */\nexport function formatCurrency(\n  amount: number,\n  currency: string = \"USD\",\n  options: CurrencyFormatOptions = {}\n): string {\n  const {\n    showSymbol = true,\n    showCents = true,\n    locale = \"en-US\",\n    compact = false\n  } = options\n  \n  const amountInDollars = amount / 100\n  const currencySymbol = getCurrencySymbol(currency)\n  \n  const formatter = new Intl.NumberFormat(locale, {\n    style: \"currency\",\n    currency,\n    minimumFractionDigits: showCents ? 2 : 0,\n    maximumFractionDigits: showCents ? 2 : 0,\n    notation: compact ? \"compact\" : \"standard\"\n  })\n  \n  let formatted = formatter.format(amountInDollars)\n  \n  if (!showSymbol) {\n    formatted = formatted.replace(currencySymbol, \"\").trim()\n  }\n  \n  return formatted\n}\n\n/**\n * Get currency symbol for a given currency code\n */\nexport function getCurrencySymbol(currency: string): string {\n  const symbols: Record<string, string> = {\n    USD: \"$\",\n    EUR: \"€\",\n    GBP: \"£\",\n    JPY: \"¥\",\n    CAD: \"C$\",\n    AUD: \"A$\",\n    CHF: \"CHF\",\n    CNY: \"¥\",\n    INR: \"₹\",\n    BRL: \"R$\",\n    MXN: \"$\",\n    KRW: \"₩\",\n    SGD: \"S$\",\n    HKD: \"HK$\",\n    NOK: \"kr\",\n    SEK: \"kr\",\n    DKK: \"kr\",\n    PLN: \"zł\",\n    CZK: \"Kč\",\n    HUF: \"Ft\",\n    RON: \"lei\",\n    BGN: \"лв\",\n    HRK: \"kn\",\n    RUB: \"₽\",\n    TRY: \"₺\",\n    ZAR: \"R\",\n    ILS: \"₪\",\n    AED: \"د.إ\",\n    SAR: \"﷼\",\n    QAR: \"﷼\",\n    KWD: \"د.ك\",\n    BHD: \"د.ب\",\n    OMR: \"﷼\",\n    JOD: \"د.ا\",\n    LBP: \"ل.ل\",\n    EGP: \"£\",\n    MAD: \"د.م.\",\n    TND: \"د.ت\",\n    DZD: \"د.ج\",\n    LYD: \"ل.د\",\n    SDG: \"ج.س.\",\n    ETB: \"Br\",\n    KES: \"KSh\",\n    UGX: \"USh\",\n    TZS: \"TSh\",\n    ZMW: \"ZK\",\n    BWP: \"P\",\n    SZL: \"L\",\n    LSL: \"L\",\n    NAD: \"N$\",\n    AOA: \"Kz\",\n    MZN: \"MT\",\n    ZWL: \"Z$\",\n    GHS: \"₵\",\n    NGN: \"₦\",\n    XOF: \"CFA\",\n    XAF: \"FCFA\",\n    CDF: \"FC\",\n    RWF: \"RF\",\n    BIF: \"FBu\",\n    KMF: \"CF\",\n    DJF: \"Fdj\",\n    SOS: \"S\",\n    ERN: \"Nfk\",\n    SLL: \"Le\",\n    GMD: \"D\",\n    GNF: \"FG\",\n    LRD: \"L$\",\n    CVE: \"$\",\n    STN: \"Db\",\n    MRO: \"UM\",\n    MGA: \"Ar\",\n    SCR: \"₨\",\n    MUR: \"₨\",\n    YER: \"﷼\",\n    AFN: \"؋\",\n    PKR: \"₨\",\n    LKR: \"₨\",\n    NPR: \"₨\",\n    BDT: \"৳\",\n    MMK: \"K\",\n    THB: \"฿\",\n    LAK: \"₭\",\n    KHR: \"៛\",\n    VND: \"₫\",\n    IDR: \"Rp\",\n    MYR: \"RM\",\n    PHP: \"₱\",\n    TWD: \"NT$\",\n    MOP: \"MOP$\",\n    BND: \"B$\",\n    FJD: \"FJ$\",\n    PGK: \"K\",\n    WST: \"WS$\",\n    TOP: \"T$\",\n    VUV: \"Vt\",\n    SBD: \"SI$\",\n    NZD: \"NZ$\",\n    XPF: \"₣\",\n    ARS: \"$\",\n    BOB: \"Bs\",\n    CLP: \"$\",\n    COP: \"$\",\n    PYG: \"₲\",\n    PEN: \"S/\",\n    UYU: \"$U\",\n    VES: \"Bs.S\",\n    GYD: \"G$\",\n    SRD: \"$\",\n    TTD: \"TT$\",\n    BBD: \"Bds$\",\n    JMD: \"J$\",\n    BZD: \"BZ$\",\n    GTQ: \"Q\",\n    HNL: \"L\",\n    NIO: \"C$\",\n    CRC: \"₡\",\n    PAB: \"B/.\",\n    DOP: \"RD$\",\n    HTG: \"G\",\n    CUP: \"$\",\n    XCD: \"$\",\n    AWG: \"ƒ\",\n    BMD: \"$\",\n    KYD: \"$\",\n    FKP: \"£\",\n    SHP: \"£\",\n    GIP: \"£\",\n    JEP: \"£\",\n    GGP: \"£\",\n    IMP: \"£\",\n  }\n  \n  return symbols[currency] || currency\n}\n\n/**\n * Parse currency string to cents\n * \n * @param currencyString - Formatted currency string (e.g., \"$123.45\")\n * @returns Amount in cents\n */\nexport function parseCurrencyToCents(currencyString: string): number {\n  // Remove currency symbols and non-numeric characters except decimal point\n  const cleaned = currencyString.replace(/[^\\d.-]/g, \"\")\n  const amount = parseFloat(cleaned)\n  return Math.round(amount * 100)\n}\n\n/**\n * Convert cents to dollars\n */\nexport function centsToDollars(cents: number): number {\n  return cents / 100\n}\n\n/**\n * Convert dollars to cents\n */\nexport function dollarsToCents(dollars: number): number {\n  return Math.round(dollars * 100)\n}\n\n// ============================================================================\n// API MIGRATION GUIDE\n// ============================================================================\n\n/**\n * MIGRATION GUIDE: How to swap to real API endpoints\n * \n * 1. Update API_CONFIG.BASE_URL to your production API URL\n * 2. Replace mock data calls with actual HTTP requests:\n *    - mockDataStore.getMetrics() → apiClient.get('/metrics/{month}')\n *    - mockDataStore.getTransactions() → apiClient.get('/transactions')\n *    - mockDataStore.getAdvice() → apiClient.get('/advice/{mode}')\n * \n * 3. Update error handling for network failures\n * 4. Add authentication if needed:\n *    - Add auth token to headers\n *    - Implement token refresh logic\n *    - Handle 401/403 responses\n * \n * 5. Add caching if needed:\n *    - Implement response caching\n *    - Add cache invalidation\n *    - Handle stale data\n * \n * 6. Add request/response interceptors for:\n *    - Logging\n *    - Error reporting\n *    - Performance monitoring\n * \n * Example real API implementation:\n * \n * export async function fetchMonthMetrics(month: string): Promise<ApiResponse<MonthMetrics>> {\n *   return apiClient.get<MonthMetrics>(`/metrics/${month}`)\n * }\n * \n * export async function fetchTransactions(params: TransactionQueryParams): Promise<ApiResponse<Transaction[]>> {\n *   const queryParams = new URLSearchParams()\n *   Object.entries(params).forEach(([key, value]) => {\n *     if (value !== undefined) {\n *       queryParams.append(key, String(value))\n *     }\n *   })\n *   return apiClient.get<Transaction[]>(`/transactions?${queryParams}`)\n * }\n * \n * export async function fetchAdvice(mode: string, month: string): Promise<ApiResponse<CopilotAdvice[]>> {\n *   return apiClient.get<CopilotAdvice[]>(`/advice/${mode}?month=${month}`)\n * }\n */\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1229, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/wrapped/WrappedSummaryCard.tsx"],"sourcesContent":["\"use client\"\n\nimport { motion } from \"framer-motion\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { MonthMetrics } from \"@/lib/types\"\nimport { formatCurrency } from \"@/lib/api\"\nimport { TrendingUp, TrendingDown, DollarSign, PiggyBank } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface WrappedSummaryCardProps {\n  metrics: MonthMetrics\n  className?: string\n}\n\nexport function WrappedSummaryCard({ metrics, className }: WrappedSummaryCardProps) {\n  const isPositiveNetIncome = metrics.netIncome.amount >= 0\n  const isGoodSavingsRate = metrics.savingsRate >= 20\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.6, delay: 0.1 }}\n      className={cn(\"relative\", className)}\n    >\n      {/* Ambient gradient background */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-blue-50/50 via-purple-50/30 to-pink-50/50 rounded-xl blur-xl -z-10\" />\n      \n      <Card className=\"relative overflow-hidden border-0 bg-gradient-to-br from-white/90 to-white/70 backdrop-blur-sm shadow-xl\">\n        <CardContent className=\"p-8\">\n          {/* Header */}\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.5, delay: 0.2 }}\n            className=\"mb-6\"\n          >\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Your {new Date(metrics.month + '-01').toLocaleDateString('en-US', { month: 'long', year: 'numeric' })} Wrapped\n            </h2>\n            <p className=\"text-gray-600 text-sm\">\n              A complete breakdown of your financial journey this month\n            </p>\n          </motion.div>\n\n          {/* Key Metrics Grid */}\n          <div className=\"grid grid-cols-2 gap-6\">\n            {/* Net Income */}\n            <motion.div\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.4, delay: 0.3 }}\n              className=\"space-y-2\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <DollarSign className=\"h-5 w-5 text-gray-600\" />\n                <span className=\"text-sm font-medium text-gray-600\">Net Income</span>\n              </div>\n              <div className={cn(\n                \"text-3xl font-bold\",\n                isPositiveNetIncome ? \"text-green-600\" : \"text-red-600\"\n              )}>\n                {formatCurrency(metrics.netIncome.amount, metrics.netIncome.currency)}\n              </div>\n              <div className=\"flex items-center gap-1 text-xs\">\n                {isPositiveNetIncome ? (\n                  <TrendingUp className=\"h-3 w-3 text-green-500\" />\n                ) : (\n                  <TrendingDown className=\"h-3 w-3 text-red-500\" />\n                )}\n                <span className={cn(\n                  isPositiveNetIncome ? \"text-green-600\" : \"text-red-600\"\n                )}>\n                  {isPositiveNetIncome ? \"Positive\" : \"Negative\"} cash flow\n                </span>\n              </div>\n            </motion.div>\n\n            {/* Savings Rate */}\n            <motion.div\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.4, delay: 0.4 }}\n              className=\"space-y-2\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <PiggyBank className=\"h-5 w-5 text-gray-600\" />\n                <span className=\"text-sm font-medium text-gray-600\">Savings Rate</span>\n              </div>\n              <div className={cn(\n                \"text-3xl font-bold\",\n                isGoodSavingsRate ? \"text-green-600\" : \"text-orange-600\"\n              )}>\n                {metrics.savingsRate.toFixed(1)}%\n              </div>\n              <div className=\"flex items-center gap-1 text-xs\">\n                <div className={cn(\n                  \"w-2 h-2 rounded-full\",\n                  isGoodSavingsRate ? \"bg-green-500\" : \"bg-orange-500\"\n                )} />\n                <span className={cn(\n                  isGoodSavingsRate ? \"text-green-600\" : \"text-orange-600\"\n                )}>\n                  {isGoodSavingsRate ? \"Great job!\" : \"Room to improve\"}\n                </span>\n              </div>\n            </motion.div>\n\n            {/* Total Income */}\n            <motion.div\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.4, delay: 0.5 }}\n              className=\"space-y-2\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <TrendingUp className=\"h-5 w-5 text-gray-600\" />\n                <span className=\"text-sm font-medium text-gray-600\">Total Income</span>\n              </div>\n              <div className=\"text-2xl font-bold text-green-600\">\n                {formatCurrency(metrics.totalIncome.amount, metrics.totalIncome.currency)}\n              </div>\n              <div className=\"text-xs text-gray-500\">\n                +{metrics.trends.monthOverMonth.incomeChange.toFixed(1)}% from last month\n              </div>\n            </motion.div>\n\n            {/* Total Expenses */}\n            <motion.div\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.4, delay: 0.6 }}\n              className=\"space-y-2\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <TrendingDown className=\"h-5 w-5 text-gray-600\" />\n                <span className=\"text-sm font-medium text-gray-600\">Total Expenses</span>\n              </div>\n              <div className=\"text-2xl font-bold text-red-600\">\n                {formatCurrency(metrics.totalExpenses.amount, metrics.totalExpenses.currency)}\n              </div>\n              <div className=\"text-xs text-gray-500\">\n                {metrics.trends.monthOverMonth.expenseChange > 0 ? '+' : ''}\n                {metrics.trends.monthOverMonth.expenseChange.toFixed(1)}% from last month\n              </div>\n            </motion.div>\n          </div>\n\n          {/* Insights */}\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.7 }}\n            className=\"mt-6 p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg border border-blue-100\"\n          >\n            <div className=\"flex items-start gap-3\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\n              <div>\n                <p className=\"text-sm font-medium text-text mb-1\">This month&apos;s highlight</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  You spent most on <span className=\"font-semibold text-text\">\n                    {metrics.spendingPatterns.mostExpensiveCategory}\n                  </span> and made <span className=\"font-semibold text-text\">\n                    {metrics.categoryBreakdown.reduce((sum, cat) => sum + cat.transactionCount, 0)}\n                  </span> transactions in <span className=\"font-semibold text-text\">\n                    {metrics.spendingPatterns.mostFrequentCategory}\n                  </span>.\n                </p>\n              </div>\n            </div>\n          </motion.div>\n        </CardContent>\n      </Card>\n    </motion.div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1742, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/charts/LazyChart.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { Suspense, lazy } from \"react\"\nimport { Card, CardContent } from \"@/components/ui/card\"\n// import { cn } from \"@/lib/utils\"\n\n// Lazy load chart components\nconst VizBar = lazy(() => import(\"@/lib/viz\").then(module => ({ default: module.VizBar })))\nconst VizLine = lazy(() => import(\"@/lib/viz\").then(module => ({ default: module.VizLine })))\n\ninterface LazyChartProps {\n  type: 'bar' | 'line'\n  data: Record<string, unknown>[]\n  xKey: string\n  yKey: string\n  title?: string\n  description?: string\n  className?: string\n  [key: string]: unknown\n}\n\nfunction ChartSkeleton() {\n  return (\n    <Card>\n      <CardContent className=\"p-6\">\n        <div className=\"space-y-4\">\n          <div className=\"h-4 bg-muted animate-pulse rounded w-1/3\" />\n          <div className=\"h-64 bg-muted animate-pulse rounded\" />\n          <div className=\"h-4 bg-muted animate-pulse rounded w-1/4\" />\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport function LazyChart({ type, ...props }: LazyChartProps) {\n  const ChartComponent = type === 'bar' ? VizBar : VizLine\n\n  return (\n    <Suspense fallback={<ChartSkeleton />}>\n      <ChartComponent {...props} />\n    </Suspense>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;;AAFA;;;;AAIA,mCAAmC;AAEnC,6BAA6B;AAC7B,MAAM,uBAAS,IAAA,6MAAI,EAAC,IAAM,+FAAoB,IAAI,CAAC,CAAA,SAAU,CAAC;YAAE,SAAS,OAAO,MAAM;QAAC,CAAC;AACxF,MAAM,wBAAU,IAAA,6MAAI,EAAC,IAAM,+FAAoB,IAAI,CAAC,CAAA,SAAU,CAAC;YAAE,SAAS,OAAO,OAAO;QAAC,CAAC;AAa1F,SAAS;IACP,qBACE,8OAAC;kBACC,cAAA,8OAAC;YAAY,WAAU;sBACrB,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;AAKzB;AAEO,SAAS,UAAU,EAAE,IAAI,EAAE,GAAG,OAAuB;IAC1D,MAAM,iBAAiB,SAAS,QAAQ,SAAS;IAEjD,qBACE,8OAAC,iNAAQ;QAAC,wBAAU,8OAAC;;;;;kBACnB,cAAA,8OAAC;YAAgB,GAAG,KAAK;;;;;;;;;;;AAG/B","debugId":null}},
    {"offset": {"line": 1835, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/wrapped/TopMerchants.tsx"],"sourcesContent":["\"use client\"\n\nimport { motion } from \"framer-motion\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { MonthMetrics } from \"@/lib/types\"\nimport { formatCurrency } from \"@/lib/api\"\nimport { cn } from \"@/lib/utils\"\nimport { Store, CreditCard, MapPin } from \"lucide-react\"\n\ninterface TopMerchantsProps {\n  metrics: MonthMetrics\n  className?: string\n}\n\n// Generate mock merchant data based on category breakdown\nfunction generateMerchantData(metrics: MonthMetrics) {\n  const merchants = [\n    { name: \"Amazon\", category: \"shopping\", amount: 0, transactions: 0, location: \"Online\" },\n    { name: \"Starbucks\", category: \"food\", amount: 0, transactions: 0, location: \"Local\" },\n    { name: \"Shell\", category: \"transportation\", amount: 0, transactions: 0, location: \"Local\" },\n    { name: \"Netflix\", category: \"entertainment\", amount: 0, transactions: 0, location: \"Online\" },\n    { name: \"Target\", category: \"shopping\", amount: 0, transactions: 0, location: \"Local\" },\n    { name: \"Uber\", category: \"transportation\", amount: 0, transactions: 0, location: \"Online\" },\n    { name: \"Chipotle\", category: \"food\", amount: 0, transactions: 0, location: \"Local\" },\n    { name: \"Spotify\", category: \"entertainment\", amount: 0, transactions: 0, location: \"Online\" },\n    { name: \"Walmart\", category: \"shopping\", amount: 0, transactions: 0, location: \"Local\" },\n    { name: \"Apple\", category: \"shopping\", amount: 0, transactions: 0, location: \"Online\" }\n  ]\n\n  // Distribute spending across merchants based on categories\n  metrics.categoryBreakdown.forEach(categoryData => {\n    const categoryMerchants = merchants.filter(m => m.category === categoryData.category)\n    if (categoryMerchants.length > 0) {\n      const amountPerMerchant = categoryData.amount.amount / categoryMerchants.length\n      const transactionsPerMerchant = Math.ceil(categoryData.transactionCount / categoryMerchants.length)\n      \n      categoryMerchants.forEach(merchant => {\n        merchant.amount = amountPerMerchant\n        merchant.transactions = transactionsPerMerchant\n      })\n    }\n  })\n\n  return merchants\n    .filter(m => m.amount > 0)\n    .sort((a, b) => b.amount - a.amount)\n    .slice(0, 6)\n}\n\nconst MERCHANT_ICONS: Record<string, React.ReactNode> = {\n  \"Amazon\": <Store className=\"h-4 w-4\" />,\n  \"Starbucks\": <Store className=\"h-4 w-4\" />,\n  \"Shell\": <Store className=\"h-4 w-4\" />,\n  \"Netflix\": <CreditCard className=\"h-4 w-4\" />,\n  \"Target\": <Store className=\"h-4 w-4\" />,\n  \"Uber\": <CreditCard className=\"h-4 w-4\" />,\n  \"Chipotle\": <Store className=\"h-4 w-4\" />,\n  \"Spotify\": <CreditCard className=\"h-4 w-4\" />,\n  \"Walmart\": <Store className=\"h-4 w-4\" />,\n  \"Apple\": <CreditCard className=\"h-4 w-4\" />\n}\n\nexport function TopMerchants({ metrics, className }: TopMerchantsProps) {\n  const merchantData = generateMerchantData(metrics)\n  const totalMerchantSpending = merchantData.reduce((sum, merchant) => sum + merchant.amount, 0)\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.6, delay: 0.4 }}\n      className={cn(\"relative\", className)}\n    >\n      <Card className=\"relative overflow-hidden border-0 bg-gradient-to-br from-white/90 to-white/70 backdrop-blur-sm shadow-xl\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-xl font-bold text-gray-900\">\n            Top Merchants\n          </CardTitle>\n          <p className=\"text-sm text-gray-600\">\n            Where you spent the most this month\n          </p>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Merchants List */}\n          <div className=\"space-y-3\">\n            {merchantData.map((merchant, index) => {\n              const percentage = totalMerchantSpending > 0 ? (merchant.amount / totalMerchantSpending) * 100 : 0\n              \n              return (\n                <motion.div\n                  key={merchant.name}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.4, delay: 0.1 + index * 0.05 }}\n                  className=\"group\"\n                >\n                  <div className=\"flex items-center justify-between p-3 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors duration-200\">\n                    <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n                      <div className=\"flex-shrink-0 p-2 bg-white rounded-lg shadow-sm\">\n                        {MERCHANT_ICONS[merchant.name] || <Store className=\"h-4 w-4\" />}\n                      </div>\n                      \n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <h3 className=\"font-medium text-gray-900 truncate\">\n                            {merchant.name}\n                          </h3>\n                          <div className=\"flex items-center gap-1 text-xs text-gray-500\">\n                            <MapPin className=\"h-3 w-3\" />\n                            <span>{merchant.location}</span>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                          <span>{merchant.transactions} transaction{merchant.transactions !== 1 ? 's' : ''}</span>\n                          <span>•</span>\n                          <span>{percentage.toFixed(1)}% of total</span>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"text-right flex-shrink-0 ml-4\">\n                      <div className=\"font-bold text-gray-900\">\n                        {formatCurrency(merchant.amount, metrics.totalExpenses.currency)}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        {formatCurrency(merchant.amount / merchant.transactions, metrics.totalExpenses.currency, { showCents: false })} avg\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              )\n            })}\n          </div>\n\n          {/* Summary Stats */}\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.7 }}\n            className=\"pt-4 border-t border-gray-200\"\n          >\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {merchantData.length}\n                </div>\n                <div className=\"text-xs text-blue-600\">Unique Merchants</div>\n              </div>\n              \n              <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {formatCurrency(totalMerchantSpending, metrics.totalExpenses.currency, { showCents: false })}\n                </div>\n                <div className=\"text-xs text-green-600\">Total Spent</div>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Insights */}\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.8 }}\n            className=\"p-4 bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg border border-purple-100\"\n          >\n            <div className=\"flex items-start gap-3\">\n              <div className=\"w-2 h-2 bg-purple-500 rounded-full mt-2 flex-shrink-0\" />\n              <div>\n                <p className=\"text-sm font-medium text-gray-900 mb-1\">Spending insight</p>\n                <p className=\"text-sm text-gray-600\">\n                  You spent most at <span className=\"font-semibold text-gray-900\">\n                    {merchantData[0]?.name}\n                  </span> with <span className=\"font-semibold text-gray-900\">\n                    {merchantData[0]?.transactions}\n                  </span> transactions totaling <span className=\"font-semibold text-gray-900\">\n                    {formatCurrency(merchantData[0]?.amount || 0, metrics.totalExpenses.currency)}\n                  </span>.\n                </p>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Screen reader fallback */}\n          <div className=\"sr-only\">\n            <table>\n              <caption>Top merchants for {metrics.month}</caption>\n              <thead>\n                <tr>\n                  <th>Merchant</th>\n                  <th>Location</th>\n                  <th>Amount Spent</th>\n                  <th>Transaction Count</th>\n                  <th>Average per Transaction</th>\n                  <th>Percentage of Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {merchantData.map(merchant => (\n                  <tr key={merchant.name}>\n                    <td>{merchant.name}</td>\n                    <td>{merchant.location}</td>\n                    <td>{formatCurrency(merchant.amount, metrics.totalExpenses.currency)}</td>\n                    <td>{merchant.transactions}</td>\n                    <td>{formatCurrency(merchant.amount / merchant.transactions, metrics.totalExpenses.currency)}</td>\n                    <td>{((merchant.amount / totalMerchantSpending) * 100).toFixed(1)}%</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </motion.div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2573, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/wrapped/WrappedHero.tsx"],"sourcesContent":["\"use client\"\n\nimport { motion, useReducedMotion } from \"framer-motion\"\nimport { MonthMetrics } from \"@/lib/types\"\nimport { WrappedSummaryCard } from \"./WrappedSummaryCard\"\nimport { LazyChart } from \"@/components/charts/LazyChart\"\nimport { TopMerchants } from \"./TopMerchants\"\nimport { cn } from \"@/lib/utils\"\n\ninterface WrappedHeroProps {\n  metrics: MonthMetrics\n  className?: string\n}\n\n// Confetti animation component\nfunction ConfettiAnimation() {\n  const shouldReduceMotion = useReducedMotion()\n  \n  if (shouldReduceMotion) return null\n\n  return (\n    <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n      {[...Array(20)].map((_, i) => (\n        <motion.div\n          key={i}\n          className=\"absolute w-2 h-2 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full\"\n          initial={{ \n            x: Math.random() * window.innerWidth,\n            y: -10,\n            rotate: 0,\n            opacity: 1\n          }}\n          animate={{\n            y: window.innerHeight + 10,\n            rotate: 360,\n            opacity: 0\n          }}\n          transition={{\n            duration: 3 + Math.random() * 2,\n            delay: Math.random() * 2,\n            ease: \"easeOut\"\n          }}\n        />\n      ))}\n    </div>\n  )\n}\n\n// Ambient gradient ribbon\nfunction AmbientRibbon() {\n  const shouldReduceMotion = useReducedMotion()\n  \n  return (\n    <motion.div\n      className=\"absolute inset-0 overflow-hidden pointer-events-none\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1, delay: 0.5 }}\n    >\n      <motion.div\n        className=\"absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-blue-400/20 via-purple-400/20 to-pink-400/20 rounded-full blur-3xl\"\n        animate={shouldReduceMotion ? {} : {\n          x: [0, 50, 0],\n          y: [0, -30, 0],\n          scale: [1, 1.1, 1]\n        }}\n        transition={{\n          duration: 8,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      />\n      <motion.div\n        className=\"absolute -bottom-40 -left-40 w-96 h-96 bg-gradient-to-tr from-green-400/20 via-cyan-400/20 to-blue-400/20 rounded-full blur-3xl\"\n        animate={shouldReduceMotion ? {} : {\n          x: [0, -40, 0],\n          y: [0, 20, 0],\n          scale: [1, 0.9, 1]\n        }}\n        transition={{\n          duration: 10,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      />\n    </motion.div>\n  )\n}\n\nexport function WrappedHero({ metrics, className }: WrappedHeroProps) {\n  const shouldReduceMotion = useReducedMotion()\n\n  return (\n    <motion.section\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.8 }}\n      className={cn(\"relative min-h-screen py-12\", className)}\n    >\n      {/* Background Elements */}\n      <AmbientRibbon />\n      <ConfettiAnimation />\n      \n      {/* Main Content */}\n      <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Hero Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.2 }}\n          className=\"text-center mb-12\"\n        >\n          <motion.h1\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n            className=\"text-4xl md:text-6xl font-bold tracking-tight bg-gradient-to-r from-text via-accent-1 to-purple-600 bg-clip-text text-transparent mb-4\"\n          >\n            Your Financial Wrapped\n          </motion.h1>\n          <motion.p\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.6 }}\n            className=\"text-xl text-muted-foreground max-w-2xl mx-auto leading-relaxed\"\n          >\n            Discover your spending patterns, top merchants, and financial insights for{\" \"}\n            <span className=\"font-semibold text-text\">\n              {new Date(metrics.month + '-01').toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\n            </span>\n          </motion.p>\n        </motion.div>\n\n        {/* Asymmetric Grid Layout */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\n          {/* Left Column - Summary Card (spans 5 columns) */}\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.3 }}\n            className=\"lg:col-span-5\"\n          >\n            <WrappedSummaryCard metrics={metrics} />\n          </motion.div>\n\n          {/* Right Column - Charts and Merchants (spans 7 columns) */}\n          <div className=\"lg:col-span-7 space-y-6\">\n            {/* Top Row - Category Chart (spans full width) */}\n            <motion.div\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.4 }}\n            >\n              <LazyChart\n                type=\"bar\"\n                data={metrics.categoryBreakdown.map(cat => ({\n                  category: cat.category,\n                  amount: cat.amount.amount,\n                  percentage: cat.percentage\n                }))}\n                xKey=\"category\"\n                yKey=\"amount\"\n                title=\"Spending by Category\"\n                description=\"Monthly spending breakdown by category\"\n              />\n            </motion.div>\n\n            {/* Bottom Row - Two columns for Trend and Merchants */}\n            <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-6\">\n              {/* Trend Line Chart */}\n              <motion.div\n                initial={{ opacity: 0, x: -30 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.8, delay: 0.5 }}\n              >\n                <LazyChart\n                  type=\"line\"\n                  data={metrics.trend_daily.map(day => ({\n                    day: new Date(day.date).getDate().toString(),\n                    spending: day.totalSpending.amount\n                  }))}\n                  xKey=\"day\"\n                  yKey=\"spending\"\n                  title=\"Daily Spending Trend\"\n                  description=\"Daily spending pattern throughout the month\"\n                />\n              </motion.div>\n\n              {/* Top Merchants */}\n              <motion.div\n                initial={{ opacity: 0, x: 30 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.8, delay: 0.6 }}\n              >\n                <TopMerchants metrics={metrics} />\n              </motion.div>\n            </div>\n          </div>\n        </div>\n\n        {/* Call to Action */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.8 }}\n          className=\"text-center mt-12\"\n        >\n          <motion.div\n            whileHover={shouldReduceMotion ? {} : { scale: 1.05 }}\n            whileTap={shouldReduceMotion ? {} : { scale: 0.95 }}\n            className=\"inline-block\"\n          >\n            <button className=\"px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl shadow-lg hover:shadow-xl transition-all duration-300\">\n              View Detailed Analytics\n            </button>\n          </motion.div>\n          <p className=\"text-sm text-gray-500 mt-4\">\n            Click on any category bar to filter your transactions\n          </p>\n        </motion.div>\n      </div>\n    </motion.section>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAPA;;;;;;;AAcA,+BAA+B;AAC/B,SAAS;IACP,MAAM,qBAAqB,IAAA,6NAAgB;IAE3C,IAAI,oBAAoB,OAAO;IAE/B,qBACE,8OAAC;QAAI,WAAU;kBACZ;eAAI,MAAM;SAAI,CAAC,GAAG,CAAC,CAAC,GAAG,kBACtB,8OAAC,oMAAM,CAAC,GAAG;gBAET,WAAU;gBACV,SAAS;oBACP,GAAG,KAAK,MAAM,KAAK,OAAO,UAAU;oBACpC,GAAG,CAAC;oBACJ,QAAQ;oBACR,SAAS;gBACX;gBACA,SAAS;oBACP,GAAG,OAAO,WAAW,GAAG;oBACxB,QAAQ;oBACR,SAAS;gBACX;gBACA,YAAY;oBACV,UAAU,IAAI,KAAK,MAAM,KAAK;oBAC9B,OAAO,KAAK,MAAM,KAAK;oBACvB,MAAM;gBACR;eAjBK;;;;;;;;;;AAsBf;AAEA,0BAA0B;AAC1B,SAAS;IACP,MAAM,qBAAqB,IAAA,6NAAgB;IAE3C,qBACE,8OAAC,oMAAM,CAAC,GAAG;QACT,WAAU;QACV,SAAS;YAAE,SAAS;QAAE;QACtB,SAAS;YAAE,SAAS;QAAE;QACtB,YAAY;YAAE,UAAU;YAAG,OAAO;QAAI;;0BAEtC,8OAAC,oMAAM,CAAC,GAAG;gBACT,WAAU;gBACV,SAAS,qBAAqB,CAAC,IAAI;oBACjC,GAAG;wBAAC;wBAAG;wBAAI;qBAAE;oBACb,GAAG;wBAAC;wBAAG,CAAC;wBAAI;qBAAE;oBACd,OAAO;wBAAC;wBAAG;wBAAK;qBAAE;gBACpB;gBACA,YAAY;oBACV,UAAU;oBACV,QAAQ;oBACR,MAAM;gBACR;;;;;;0BAEF,8OAAC,oMAAM,CAAC,GAAG;gBACT,WAAU;gBACV,SAAS,qBAAqB,CAAC,IAAI;oBACjC,GAAG;wBAAC;wBAAG,CAAC;wBAAI;qBAAE;oBACd,GAAG;wBAAC;wBAAG;wBAAI;qBAAE;oBACb,OAAO;wBAAC;wBAAG;wBAAK;qBAAE;gBACpB;gBACA,YAAY;oBACV,UAAU;oBACV,QAAQ;oBACR,MAAM;gBACR;;;;;;;;;;;;AAIR;AAEO,SAAS,YAAY,EAAE,OAAO,EAAE,SAAS,EAAoB;IAClE,MAAM,qBAAqB,IAAA,6NAAgB;IAE3C,qBACE,8OAAC,oMAAM,CAAC,OAAO;QACb,SAAS;YAAE,SAAS;QAAE;QACtB,SAAS;YAAE,SAAS;QAAE;QACtB,YAAY;YAAE,UAAU;QAAI;QAC5B,WAAW,IAAA,yHAAE,EAAC,+BAA+B;;0BAG7C,8OAAC;;;;;0BACD,8OAAC;;;;;0BAGD,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC,oMAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,UAAU;4BAAK,OAAO;wBAAI;wBACxC,WAAU;;0CAEV,8OAAC,oMAAM,CAAC,EAAE;gCACR,SAAS;oCAAE,SAAS;oCAAG,OAAO;gCAAI;gCAClC,SAAS;oCAAE,SAAS;oCAAG,OAAO;gCAAE;gCAChC,YAAY;oCAAE,UAAU;oCAAK,OAAO;gCAAI;gCACxC,WAAU;0CACX;;;;;;0CAGD,8OAAC,oMAAM,CAAC,CAAC;gCACP,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAG;gCAC7B,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAE;gCAC5B,YAAY;oCAAE,UAAU;oCAAK,OAAO;gCAAI;gCACxC,WAAU;;oCACX;oCAC4E;kDAC3E,8OAAC;wCAAK,WAAU;kDACb,IAAI,KAAK,QAAQ,KAAK,GAAG,OAAO,kBAAkB,CAAC,SAAS;4CAAE,OAAO;4CAAQ,MAAM;wCAAU;;;;;;;;;;;;;;;;;;kCAMpG,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC,oMAAM,CAAC,GAAG;gCACT,SAAS;oCAAE,SAAS;oCAAG,GAAG,CAAC;gCAAG;gCAC9B,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAE;gCAC5B,YAAY;oCAAE,UAAU;oCAAK,OAAO;gCAAI;gCACxC,WAAU;0CAEV,cAAA,8OAAC,yKAAkB;oCAAC,SAAS;;;;;;;;;;;0CAI/B,8OAAC;gCAAI,WAAU;;kDAEb,8OAAC,oMAAM,CAAC,GAAG;wCACT,SAAS;4CAAE,SAAS;4CAAG,GAAG;wCAAG;wCAC7B,SAAS;4CAAE,SAAS;4CAAG,GAAG;wCAAE;wCAC5B,YAAY;4CAAE,UAAU;4CAAK,OAAO;wCAAI;kDAExC,cAAA,8OAAC,sJAAS;4CACR,MAAK;4CACL,MAAM,QAAQ,iBAAiB,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;oDAC1C,UAAU,IAAI,QAAQ;oDACtB,QAAQ,IAAI,MAAM,CAAC,MAAM;oDACzB,YAAY,IAAI,UAAU;gDAC5B,CAAC;4CACD,MAAK;4CACL,MAAK;4CACL,OAAM;4CACN,aAAY;;;;;;;;;;;kDAKhB,8OAAC;wCAAI,WAAU;;0DAEb,8OAAC,oMAAM,CAAC,GAAG;gDACT,SAAS;oDAAE,SAAS;oDAAG,GAAG,CAAC;gDAAG;gDAC9B,SAAS;oDAAE,SAAS;oDAAG,GAAG;gDAAE;gDAC5B,YAAY;oDAAE,UAAU;oDAAK,OAAO;gDAAI;0DAExC,cAAA,8OAAC,sJAAS;oDACR,MAAK;oDACL,MAAM,QAAQ,WAAW,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;4DACpC,KAAK,IAAI,KAAK,IAAI,IAAI,EAAE,OAAO,GAAG,QAAQ;4DAC1C,UAAU,IAAI,aAAa,CAAC,MAAM;wDACpC,CAAC;oDACD,MAAK;oDACL,MAAK;oDACL,OAAM;oDACN,aAAY;;;;;;;;;;;0DAKhB,8OAAC,oMAAM,CAAC,GAAG;gDACT,SAAS;oDAAE,SAAS;oDAAG,GAAG;gDAAG;gDAC7B,SAAS;oDAAE,SAAS;oDAAG,GAAG;gDAAE;gDAC5B,YAAY;oDAAE,UAAU;oDAAK,OAAO;gDAAI;0DAExC,cAAA,8OAAC,6JAAY;oDAAC,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAO/B,8OAAC,oMAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,UAAU;4BAAK,OAAO;wBAAI;wBACxC,WAAU;;0CAEV,8OAAC,oMAAM,CAAC,GAAG;gCACT,YAAY,qBAAqB,CAAC,IAAI;oCAAE,OAAO;gCAAK;gCACpD,UAAU,qBAAqB,CAAC,IAAI;oCAAE,OAAO;gCAAK;gCAClD,WAAU;0CAEV,cAAA,8OAAC;oCAAO,WAAU;8CAAmJ;;;;;;;;;;;0CAIvK,8OAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;;;;;;;;;;;;;AAOpD","debugId":null}},
    {"offset": {"line": 3023, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/viz/theme.ts"],"sourcesContent":["/**\n * Recharts Theme System\n * \n * Provides consistent theming, formatters, and color scales for data visualization\n * using the Financify design system tokens.\n */\n\nimport { formatCurrency } from \"@/lib/api\"\n\n// ============================================================================\n// COLOR SCALE GENERATOR\n// ============================================================================\n\n/**\n * Generate color scales from design tokens\n * Creates 6 categories with multiple shades for data visualization\n */\nexport const colorScales = {\n  // Primary scale (blue spectrum)\n  primary: {\n    50: \"hsl(var(--primary-50))\",\n    100: \"hsl(var(--primary-100))\",\n    200: \"hsl(var(--primary-200))\",\n    300: \"hsl(var(--primary-300))\",\n    400: \"hsl(var(--primary-400))\",\n    500: \"hsl(var(--primary-500))\",\n    600: \"hsl(var(--primary-600))\",\n    700: \"hsl(var(--primary-700))\",\n    800: \"hsl(var(--primary-800))\",\n    900: \"hsl(var(--primary-900))\",\n    950: \"hsl(var(--primary-950))\",\n  },\n  \n  // Success scale (green spectrum)\n  success: {\n    50: \"hsl(var(--success-foreground))\",\n    100: \"hsl(var(--success-foreground))\",\n    200: \"hsl(var(--success-foreground))\",\n    300: \"hsl(var(--success-foreground))\",\n    400: \"hsl(var(--success-foreground))\",\n    500: \"hsl(var(--success))\",\n    600: \"hsl(var(--success))\",\n    700: \"hsl(var(--success))\",\n    800: \"hsl(var(--success))\",\n    900: \"hsl(var(--success))\",\n    950: \"hsl(var(--success))\",\n  },\n  \n  // Warning scale (orange spectrum)\n  warning: {\n    50: \"hsl(var(--warning-foreground))\",\n    100: \"hsl(var(--warning-foreground))\",\n    200: \"hsl(var(--warning-foreground))\",\n    300: \"hsl(var(--warning-foreground))\",\n    400: \"hsl(var(--warning-foreground))\",\n    500: \"hsl(var(--warning))\",\n    600: \"hsl(var(--warning))\",\n    700: \"hsl(var(--warning))\",\n    800: \"hsl(var(--warning))\",\n    900: \"hsl(var(--warning))\",\n    950: \"hsl(var(--warning))\",\n  },\n  \n  // Destructive scale (red spectrum)\n  destructive: {\n    50: \"hsl(var(--destructive-foreground))\",\n    100: \"hsl(var(--destructive-foreground))\",\n    200: \"hsl(var(--destructive-foreground))\",\n    300: \"hsl(var(--destructive-foreground))\",\n    400: \"hsl(var(--destructive-foreground))\",\n    500: \"hsl(var(--destructive))\",\n    600: \"hsl(var(--destructive))\",\n    700: \"hsl(var(--destructive))\",\n    800: \"hsl(var(--destructive))\",\n    900: \"hsl(var(--destructive))\",\n    950: \"hsl(var(--destructive))\",\n  },\n  \n  // Accent scales\n  accent1: {\n    50: \"hsl(var(--accent-1) / 0.1)\",\n    100: \"hsl(var(--accent-1) / 0.2)\",\n    200: \"hsl(var(--accent-1) / 0.3)\",\n    300: \"hsl(var(--accent-1) / 0.4)\",\n    400: \"hsl(var(--accent-1) / 0.6)\",\n    500: \"hsl(var(--accent-1))\",\n    600: \"hsl(var(--accent-1) / 0.8)\",\n    700: \"hsl(var(--accent-1) / 0.9)\",\n    800: \"hsl(var(--accent-1) / 0.95)\",\n    900: \"hsl(var(--accent-1) / 0.98)\",\n    950: \"hsl(var(--accent-1) / 1)\",\n  },\n  \n  accent2: {\n    50: \"hsl(var(--accent-2) / 0.1)\",\n    100: \"hsl(var(--accent-2) / 0.2)\",\n    200: \"hsl(var(--accent-2) / 0.3)\",\n    300: \"hsl(var(--accent-2) / 0.4)\",\n    400: \"hsl(var(--accent-2) / 0.6)\",\n    500: \"hsl(var(--accent-2))\",\n    600: \"hsl(var(--accent-2) / 0.8)\",\n    700: \"hsl(var(--accent-2) / 0.9)\",\n    800: \"hsl(var(--accent-2) / 0.95)\",\n    900: \"hsl(var(--accent-2) / 0.98)\",\n    950: \"hsl(var(--accent-2) / 1)\",\n  },\n  \n  accent3: {\n    50: \"hsl(var(--accent-3) / 0.1)\",\n    100: \"hsl(var(--accent-3) / 0.2)\",\n    200: \"hsl(var(--accent-3) / 0.3)\",\n    300: \"hsl(var(--accent-3) / 0.4)\",\n    400: \"hsl(var(--accent-3) / 0.6)\",\n    500: \"hsl(var(--accent-3))\",\n    600: \"hsl(var(--accent-3) / 0.8)\",\n    700: \"hsl(var(--accent-3) / 0.9)\",\n    800: \"hsl(var(--accent-3) / 0.95)\",\n    900: \"hsl(var(--accent-3) / 0.98)\",\n    950: \"hsl(var(--accent-3) / 1)\",\n  },\n} as const\n\n/**\n * Default color palette for charts (6 categories)\n * Uses semantic colors that work well together\n */\nexport const defaultColors = [\n  colorScales.primary[500],\n  colorScales.accent1[500],\n  colorScales.success[500],\n  colorScales.warning[500],\n  colorScales.accent2[500],\n  colorScales.destructive[500],\n] as const\n\n/**\n * Generate color palette for specific number of categories\n */\nexport function generateColorPalette(count: number): string[] {\n  const baseColors = [\n    colorScales.primary[500],\n    colorScales.accent1[500],\n    colorScales.success[500],\n    colorScales.warning[500],\n    colorScales.accent2[500],\n    colorScales.destructive[500],\n    colorScales.accent3[500],\n    colorScales.primary[700],\n    colorScales.accent1[700],\n    colorScales.success[700],\n  ]\n  \n  return Array.from({ length: count }, (_, i) => baseColors[i % baseColors.length])\n}\n\n// ============================================================================\n// FORMATTERS\n// ============================================================================\n\n/**\n * Currency formatter with tabular numbers\n */\nexport function formatCurrencyValue(value: number, currency: string = \"USD\"): string {\n  return formatCurrency(value, currency, { showCents: false })\n}\n\n/**\n * Date formatter for chart axes\n */\nexport function formatDateAxis(value: string | number): string {\n  const date = new Date(value)\n  return date.toLocaleDateString('en-US', { \n    month: 'short', \n    day: 'numeric' \n  })\n}\n\n/**\n * Month formatter for chart axes\n */\nexport function formatMonthAxis(value: string | number): string {\n  const date = new Date(value)\n  return date.toLocaleDateString('en-US', { \n    month: 'short' \n  })\n}\n\n/**\n * Percentage formatter\n */\nexport function formatPercentage(value: number): string {\n  return `${value.toFixed(1)}%`\n}\n\n/**\n * Number formatter with K/M suffixes\n */\nexport function formatCompactNumber(value: number): string {\n  if (value >= 1000000) {\n    return `${(value / 1000000).toFixed(1)}M`\n  }\n  if (value >= 1000) {\n    return `${(value / 1000).toFixed(1)}K`\n  }\n  return value.toString()\n}\n\n// ============================================================================\n// CHART THEME CONFIGURATION\n// ============================================================================\n\n/**\n * Base chart theme configuration\n */\nexport const chartTheme = {\n  // Colors\n  colors: defaultColors,\n  \n  // Typography\n  fontFamily: 'var(--font-sans)',\n  fontSize: {\n    xs: '0.75rem',\n    sm: '0.875rem',\n    base: '1rem',\n    lg: '1.125rem',\n    xl: '1.25rem',\n  },\n  \n  // Spacing\n  margin: {\n    top: 20,\n    right: 30,\n    left: 20,\n    bottom: 20,\n  },\n  \n  // Grid styling\n  grid: {\n    stroke: 'hsl(var(--border))',\n    strokeWidth: 1,\n    strokeDasharray: '3 3',\n  },\n  \n  // Axis styling\n  axis: {\n    stroke: 'hsl(var(--text-tertiary))',\n    strokeWidth: 1,\n    fontSize: '0.875rem',\n    fontFamily: 'var(--font-sans)',\n    tick: {\n      fill: 'hsl(var(--text-tertiary))',\n      fontSize: '0.75rem',\n    },\n  },\n  \n  // Legend styling\n  legend: {\n    fontSize: '0.875rem',\n    fontFamily: 'var(--font-sans)',\n    fill: 'hsl(var(--text))',\n  },\n  \n  // Tooltip styling\n  tooltip: {\n    backgroundColor: 'hsl(var(--paper-elevated))',\n    border: '1px solid hsl(var(--border))',\n    borderRadius: '0.5rem',\n    boxShadow: 'var(--shadow-lg)',\n    fontSize: '0.875rem',\n    fontFamily: 'var(--font-sans)',\n    padding: '0.75rem',\n  },\n} as const\n\n// ============================================================================\n// RESPONSIVE BREAKPOINTS\n// ============================================================================\n\nexport const breakpoints = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n  '2xl': 1536,\n} as const\n\n/**\n * Get responsive chart dimensions\n */\nexport function getResponsiveDimensions(\n  baseWidth: number = 400,\n  baseHeight: number = 300,\n  containerWidth?: number\n) {\n  if (!containerWidth) {\n    return { width: baseWidth, height: baseHeight }\n  }\n  \n  // Scale down for smaller screens\n  if (containerWidth < breakpoints.sm) {\n    return {\n      width: Math.min(containerWidth - 32, baseWidth),\n      height: Math.max(200, baseHeight * 0.8),\n    }\n  }\n  \n  if (containerWidth < breakpoints.md) {\n    return {\n      width: Math.min(containerWidth - 48, baseWidth),\n      height: Math.max(250, baseHeight * 0.9),\n    }\n  }\n  \n  return { width: baseWidth, height: baseHeight }\n}\n\n// ============================================================================\n// ACCESSIBILITY HELPERS\n// ============================================================================\n\n/**\n * Generate accessible color combinations\n */\nexport function getAccessibleColors(): string[] {\n  // High contrast colors that work well with the background\n  return [\n    colorScales.primary[600],\n    colorScales.success[600],\n    colorScales.warning[600],\n    colorScales.destructive[600],\n    colorScales.accent1[600],\n    colorScales.accent2[600],\n  ]\n}\n\n/**\n * Generate screen reader descriptions for charts\n */\nexport function generateChartDescription(\n  chartType: 'bar' | 'line' | 'area' | 'pie',\n  data: Record<string, unknown>[],\n  title?: string\n): string {\n  const dataPoints = data.length\n  const description = `${chartType} chart${title ? `: ${title}` : ''} with ${dataPoints} data points`\n  \n  if (dataPoints > 0) {\n    const values = data.map(d => typeof d === 'object' ? Object.values(d).find(v => typeof v === 'number') : d)\n    const max = Math.max(...values.filter(v => typeof v === 'number'))\n    const min = Math.min(...values.filter(v => typeof v === 'number'))\n    return `${description}. Values range from ${formatCurrencyValue(min)} to ${formatCurrencyValue(max)}.`\n  }\n  \n  return description\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3322, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/viz/components.tsx"],"sourcesContent":["\"use client\"\n\nimport React from \"react\"\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  // Cell,\n} from \"recharts\"\nimport { cn } from \"@/lib/utils\"\nimport { \n  chartTheme, \n  generateColorPalette, \n  formatCurrencyValue, \n  formatDateAxis,\n  // formatPercentage,\n  getResponsiveDimensions,\n  generateChartDescription,\n  // type ColorScale\n} from \"./theme\"\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface VizBarProps {\n  data: Record<string, unknown>[]\n  xKey: string\n  yKey: string\n  width?: number\n  height?: number\n  className?: string\n  colors?: string[]\n  showGrid?: boolean\n  showLegend?: boolean\n  showTooltip?: boolean\n  title?: string\n  description?: string\n  onBarClick?: (data: Record<string, unknown>, index: number) => void\n  selectedIndex?: number\n  responsive?: boolean\n  containerWidth?: number\n}\n\nexport interface VizLineProps {\n  data: Record<string, unknown>[]\n  xKey: string\n  yKey: string | string[]\n  width?: number\n  height?: number\n  className?: string\n  colors?: string[]\n  showGrid?: boolean\n  showLegend?: boolean\n  showTooltip?: boolean\n  title?: string\n  description?: string\n  onPointClick?: (data: Record<string, unknown>, index: number) => void\n  selectedIndex?: number\n  responsive?: boolean\n  containerWidth?: number\n  type?: 'line' | 'area'\n  strokeWidth?: number\n  fillOpacity?: number\n}\n\n// ============================================================================\n// CUSTOM TOOLTIP COMPONENT\n// ============================================================================\n\ninterface CustomTooltipProps {\n  active?: boolean\n  payload?: Record<string, unknown>[]\n  label?: string\n  formatter?: (value: unknown, name: string) => [string, string]\n  labelFormatter?: (label: string) => string\n}\n\nfunction CustomTooltip({ \n  active, \n  payload, \n  label, \n  formatter,\n  labelFormatter \n}: CustomTooltipProps) {\n  if (!active || !payload || payload.length === 0) {\n    return null\n  }\n\n  return (\n    <div \n      className=\"rounded-lg border border-border bg-paper-elevated p-3 shadow-lg\"\n      style={chartTheme.tooltip}\n    >\n      <p className=\"font-medium text-text mb-2\">\n        {labelFormatter ? labelFormatter(label || '') : label}\n      </p>\n      {payload.map((entry, index) => (\n        <div key={index} className=\"flex items-center gap-2 text-sm\">\n          <div \n            className=\"w-3 h-3 rounded-full\" \n            style={{ backgroundColor: entry.color as string }}\n          />\n          <span className=\"text-text-secondary\">\n            {entry.dataKey as string}:\n          </span>\n          <span className=\"font-mono tabular-nums text-text\">\n            {formatter ? formatter(entry.value, entry.dataKey as string)[0] : String(entry.value)}\n          </span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\n// ============================================================================\n// CUSTOM LEGEND COMPONENT\n// ============================================================================\n\ninterface CustomLegendProps {\n  payload?: Record<string, unknown>[]\n  verticalAlign?: 'top' | 'bottom'\n  align?: 'left' | 'center' | 'right'\n}\n\nfunction CustomLegend({ payload, verticalAlign = 'bottom', align = 'center' }: CustomLegendProps) {\n  if (!payload || payload.length === 0) {\n    return null\n  }\n\n  return (\n    <div \n      className={`flex flex-wrap gap-4 justify-${align === 'center' ? 'center' : align === 'right' ? 'end' : 'start'} ${\n        verticalAlign === 'top' ? 'mb-4' : 'mt-4'\n      }`}\n    >\n      {payload.map((entry, index) => (\n        <div key={index} className=\"flex items-center gap-2 text-sm\">\n          <div \n            className=\"w-3 h-3 rounded-full\" \n            style={{ backgroundColor: entry.color as string }}\n          />\n          <span className=\"text-text-secondary\">\n            {String(entry.value)}\n          </span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\n// ============================================================================\n// VIZ BAR COMPONENT\n// ============================================================================\n\nexport function VizBar({\n  data,\n  xKey,\n  yKey,\n  width = 400,\n  height = 300,\n  className,\n  colors = generateColorPalette(1),\n  showGrid = true,\n  showLegend = false,\n  showTooltip = true,\n  title,\n  description,\n  onBarClick,\n  // selectedIndex,\n  responsive = true,\n  containerWidth,\n}: VizBarProps) {\n  const dimensions = responsive \n    ? getResponsiveDimensions(width, height, containerWidth)\n    : { width, height }\n\n  const chartDescription = description || generateChartDescription('bar', data, title)\n\n  return (\n    <div className={cn(\"w-full\", className)}>\n      {title && (\n        <h3 className=\"text-lg font-semibold text-text mb-2\">{title}</h3>\n      )}\n      \n      <div \n        className=\"w-full focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 rounded-md\"\n        role=\"img\"\n        aria-label={chartDescription}\n        tabIndex={0}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault()\n            // Focus management for keyboard users\n            const firstBar = e.currentTarget.querySelector('[role=\"button\"]')\n            if (firstBar) {\n              (firstBar as HTMLElement).focus()\n            }\n          }\n        }}\n      >\n        <ResponsiveContainer width=\"100%\" height={dimensions.height}>\n          <BarChart\n            data={data}\n            margin={chartTheme.margin}\n            // onClick={onBarClick}\n          >\n            {showGrid && (\n              <CartesianGrid \n                strokeDasharray={chartTheme.grid.strokeDasharray}\n                stroke={chartTheme.grid.stroke}\n                strokeWidth={chartTheme.grid.strokeWidth}\n              />\n            )}\n            \n            <XAxis\n              dataKey={xKey}\n              stroke={chartTheme.axis.stroke}\n              strokeWidth={chartTheme.axis.strokeWidth}\n              fontSize={chartTheme.axis.tick.fontSize}\n              fontFamily={chartTheme.axis.fontFamily}\n              tick={{ fill: chartTheme.axis.tick.fill }}\n              tickFormatter={formatDateAxis}\n            />\n            \n            <YAxis\n              stroke={chartTheme.axis.stroke}\n              strokeWidth={chartTheme.axis.strokeWidth}\n              fontSize={chartTheme.axis.tick.fontSize}\n              fontFamily={chartTheme.axis.fontFamily}\n              tick={{ fill: chartTheme.axis.tick.fill }}\n              tickFormatter={(value) => formatCurrencyValue(value)}\n            />\n            \n            {showTooltip && (\n              <Tooltip\n                content={<CustomTooltip />}\n                formatter={(value) => [formatCurrencyValue(Number(value)), '']}\n                labelFormatter={formatDateAxis}\n              />\n            )}\n            \n            {showLegend && (\n              <Legend content={<CustomLegend />} />\n            )}\n            \n            <Bar\n              dataKey={yKey}\n              fill={colors[0]}\n              radius={[4, 4, 0, 0]}\n              // onClick={onBarClick}\n              className={cn(\n                \"transition-all duration-200 hover:opacity-80\",\n                // selectedIndex !== undefined && \"opacity-50 hover:opacity-100\"\n              )}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      \n      {/* Screen reader fallback table */}\n      <div className=\"sr-only\">\n        <table>\n          <caption>{chartDescription}</caption>\n          <thead>\n            <tr>\n              <th>{xKey}</th>\n              <th>{yKey}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((item, index) => (\n              <tr key={index}>\n                <td>{formatDateAxis(String(item[xKey]))}</td>\n                <td>{formatCurrencyValue(Number(item[yKey]))}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\n// ============================================================================\n// VIZ LINE COMPONENT\n// ============================================================================\n\nexport function VizLine({\n  data,\n  xKey,\n  yKey,\n  width = 400,\n  height = 300,\n  className,\n  colors = generateColorPalette(1),\n  showGrid = true,\n  showLegend = false,\n  showTooltip = true,\n  title,\n  description,\n  onPointClick,\n  // selectedIndex,\n  responsive = true,\n  containerWidth,\n  type = 'line',\n  strokeWidth = 2,\n  fillOpacity = 0.6,\n}: VizLineProps) {\n  const dimensions = responsive \n    ? getResponsiveDimensions(width, height, containerWidth)\n    : { width, height }\n\n  const chartDescription = description || generateChartDescription(type, data, title)\n  const yKeys = Array.isArray(yKey) ? yKey : [yKey]\n\n  const renderChart = () => {\n    if (type === 'area') {\n      return (\n        <AreaChart\n          data={data}\n          margin={chartTheme.margin}\n          // onClick={onPointClick}\n        >\n          {showGrid && (\n            <CartesianGrid \n              strokeDasharray={chartTheme.grid.strokeDasharray}\n              stroke={chartTheme.grid.stroke}\n              strokeWidth={chartTheme.grid.strokeWidth}\n            />\n          )}\n          \n          <XAxis\n            dataKey={xKey}\n            stroke={chartTheme.axis.stroke}\n            strokeWidth={chartTheme.axis.strokeWidth}\n            fontSize={chartTheme.axis.tick.fontSize}\n            fontFamily={chartTheme.axis.fontFamily}\n            tick={{ fill: chartTheme.axis.tick.fill }}\n            tickFormatter={formatDateAxis}\n          />\n          \n          <YAxis\n            stroke={chartTheme.axis.stroke}\n            strokeWidth={chartTheme.axis.strokeWidth}\n            fontSize={chartTheme.axis.tick.fontSize}\n            fontFamily={chartTheme.axis.fontFamily}\n            tick={{ fill: chartTheme.axis.tick.fill }}\n            tickFormatter={(value) => formatCurrencyValue(value)}\n          />\n          \n          {showTooltip && (\n            <Tooltip\n              content={<CustomTooltip />}\n              formatter={(value) => [formatCurrencyValue(Number(value)), '']}\n              labelFormatter={formatDateAxis}\n            />\n          )}\n          \n          {showLegend && (\n            <Legend content={<CustomLegend />} />\n          )}\n          \n          {yKeys.map((key, index) => (\n            <Area\n              key={key}\n              type=\"monotone\"\n              dataKey={key}\n              stackId=\"1\"\n              stroke={colors[index % colors.length]}\n              fill={colors[index % colors.length]}\n              fillOpacity={fillOpacity}\n              strokeWidth={strokeWidth}\n              dot={{ r: 4, fill: colors[index % colors.length] }}\n              activeDot={{ r: 6, stroke: colors[index % colors.length], strokeWidth: 2 }}\n            />\n          ))}\n        </AreaChart>\n      )\n    }\n\n    return (\n          <LineChart\n            data={data}\n            margin={chartTheme.margin}\n            // onClick={onPointClick}\n          >\n        {showGrid && (\n          <CartesianGrid \n            strokeDasharray={chartTheme.grid.strokeDasharray}\n            stroke={chartTheme.grid.stroke}\n            strokeWidth={chartTheme.grid.strokeWidth}\n          />\n        )}\n        \n        <XAxis\n          dataKey={xKey}\n          stroke={chartTheme.axis.stroke}\n          strokeWidth={chartTheme.axis.strokeWidth}\n          fontSize={chartTheme.axis.tick.fontSize}\n          fontFamily={chartTheme.axis.fontFamily}\n          tick={{ fill: chartTheme.axis.tick.fill }}\n          tickFormatter={formatDateAxis}\n        />\n        \n        <YAxis\n          stroke={chartTheme.axis.stroke}\n          strokeWidth={chartTheme.axis.strokeWidth}\n          fontSize={chartTheme.axis.tick.fontSize}\n          fontFamily={chartTheme.axis.fontFamily}\n          tick={{ fill: chartTheme.axis.tick.fill }}\n          tickFormatter={(value) => formatCurrencyValue(value)}\n        />\n        \n        {showTooltip && (\n          <Tooltip\n            content={<CustomTooltip />}\n            formatter={(value) => [formatCurrencyValue(Number(value)), '']}\n            labelFormatter={formatDateAxis}\n          />\n        )}\n        \n        {showLegend && (\n          <Legend content={<CustomLegend />} />\n        )}\n        \n        {yKeys.map((key, index) => (\n          <Line\n            key={key}\n            type=\"monotone\"\n            dataKey={key}\n            stroke={colors[index % colors.length]}\n            strokeWidth={strokeWidth}\n            dot={{ r: 4, fill: colors[index % colors.length] }}\n            activeDot={{ r: 6, stroke: colors[index % colors.length], strokeWidth: 2 }}\n          />\n        ))}\n      </LineChart>\n    )\n  }\n\n  return (\n    <div className={cn(\"w-full\", className)}>\n      {title && (\n        <h3 className=\"text-lg font-semibold text-text mb-2\">{title}</h3>\n      )}\n      \n      <div \n        className=\"w-full focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 rounded-md\"\n        role=\"img\"\n        aria-label={chartDescription}\n        tabIndex={0}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault()\n            // Focus management for keyboard users\n            const firstPoint = e.currentTarget.querySelector('[role=\"button\"]')\n            if (firstPoint) {\n              (firstPoint as HTMLElement).focus()\n            }\n          }\n        }}\n      >\n        <ResponsiveContainer width=\"100%\" height={dimensions.height}>\n          {renderChart()}\n        </ResponsiveContainer>\n      </div>\n      \n      {/* Screen reader fallback table */}\n      <div className=\"sr-only\">\n        <table>\n          <caption>{chartDescription}</caption>\n          <thead>\n            <tr>\n              <th>{xKey}</th>\n              {yKeys.map(key => (\n                <th key={key}>{key}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((item, index) => (\n              <tr key={index}>\n                <td>{formatDateAxis(String(item[xKey]))}</td>\n                {yKeys.map(key => (\n                  <td key={key}>{formatCurrencyValue(Number(item[key]))}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport { CustomTooltip, CustomLegend }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4009, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/viz/index.ts"],"sourcesContent":["// Re-export all visualization components and utilities\nexport * from './theme'\nexport * from './components'\n\n// Convenience exports for common use cases\nexport { VizBar, VizLine } from './components'\nexport { \n  chartTheme, \n  defaultColors, \n  generateColorPalette,\n  formatCurrencyValue,\n  formatDateAxis,\n  formatPercentage \n} from './theme'\n"],"names":[],"mappings":"AAAA,uDAAuD;;AACvD;AACA","debugId":null}},
    {"offset": {"line": 4021, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/wrapped/CategoryBarChart.tsx"],"sourcesContent":["\"use client\"\n\nimport { motion } from \"framer-motion\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { MonthMetrics, TransactionCategory } from \"@/lib/types\"\nimport { formatCurrency } from \"@/lib/api\"\nimport { cn } from \"@/lib/utils\"\nimport { useSearchParams, useRouter } from \"next/navigation\"\nimport { useCallback } from \"react\"\nimport { VizBar } from \"@/lib/viz\"\n\ninterface CategoryBarChartProps {\n  metrics: MonthMetrics\n  className?: string\n}\n\nconst CATEGORY_COLORS: Record<TransactionCategory, string> = {\n  tuition: \"bg-blue-500\",\n  books: \"bg-indigo-500\", \n  housing: \"bg-purple-500\",\n  food: \"bg-green-500\",\n  transportation: \"bg-yellow-500\",\n  entertainment: \"bg-pink-500\",\n  healthcare: \"bg-red-500\",\n  utilities: \"bg-orange-500\",\n  shopping: \"bg-cyan-500\",\n  income: \"bg-emerald-500\",\n  refund: \"bg-teal-500\",\n  other: \"bg-gray-500\"\n}\n\nconst CATEGORY_LABELS: Record<TransactionCategory, string> = {\n  tuition: \"Tuition\",\n  books: \"Books & Supplies\",\n  housing: \"Housing\",\n  food: \"Food & Dining\",\n  transportation: \"Transportation\",\n  entertainment: \"Entertainment\",\n  healthcare: \"Healthcare\",\n  utilities: \"Utilities\",\n  shopping: \"Shopping\",\n  income: \"Income\",\n  refund: \"Refunds\",\n  other: \"Other\"\n}\n\nexport function CategoryBarChart({ metrics, className }: CategoryBarChartProps) {\n  const searchParams = useSearchParams()\n  const router = useRouter()\n  const selectedCategory = searchParams.get('category') as TransactionCategory | null\n\n  const handleCategoryClick = useCallback((category: TransactionCategory) => {\n    const params = new URLSearchParams(searchParams.toString())\n    \n    if (selectedCategory === category) {\n      // If clicking the same category, remove the filter\n      params.delete('category')\n    } else {\n      // Set the new category filter\n      params.set('category', category)\n    }\n    \n    router.push(`?${params.toString()}`, { scroll: false })\n  }, [searchParams, router, selectedCategory])\n\n  // Sort categories by amount (highest first) and take top 8\n  const topCategories = metrics.categoryBreakdown\n    .filter(cat => cat.category !== 'income' && cat.category !== 'refund')\n    .sort((a, b) => b.amount.amount - a.amount.amount)\n    .slice(0, 8)\n\n  const maxAmount = Math.max(...topCategories.map(cat => cat.amount.amount))\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.6, delay: 0.2 }}\n      className={cn(\"relative\", className)}\n    >\n      <Card className=\"relative overflow-hidden border-0 bg-gradient-to-br from-white/90 to-white/70 backdrop-blur-sm shadow-xl\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-xl font-bold text-gray-900\">\n            Spending by Category\n          </CardTitle>\n          <p className=\"text-sm text-gray-600\">\n            Click on a category to filter your transactions\n          </p>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Chart */}\n          <div className=\"h-64\">\n            <VizBar\n              data={topCategories.map(cat => ({\n                category: CATEGORY_LABELS[cat.category],\n                amount: cat.amount.amount,\n                percentage: cat.percentage,\n                transactionCount: cat.transactionCount,\n                originalCategory: cat.category\n              }))}\n              xKey=\"category\"\n              yKey=\"amount\"\n              title=\"Spending by Category\"\n              description=\"Click on a category bar to filter your transactions\"\n              colors={topCategories.map(cat => {\n                const colorClass = CATEGORY_COLORS[cat.category]\n                // Map Tailwind color classes to actual hex values\n                const colorMap: Record<string, string> = {\n                  'bg-blue-500': '#3b82f6',\n                  'bg-indigo-500': '#6366f1',\n                  'bg-purple-500': '#8b5cf6',\n                  'bg-green-500': '#10b981',\n                  'bg-yellow-500': '#f59e0b',\n                  'bg-pink-500': '#ec4899',\n                  'bg-red-500': '#ef4444',\n                  'bg-orange-500': '#f97316',\n                  'bg-cyan-500': '#06b6d4',\n                  'bg-gray-500': '#6b7280',\n                }\n                return colorMap[colorClass] || '#6b7280'\n              })}\n              onBarClick={(data) => handleCategoryClick(data.originalCategory as TransactionCategory)}\n              selectedIndex={selectedCategory ? topCategories.findIndex(cat => cat.category === selectedCategory) : undefined}\n              responsive\n              showTooltip\n              showLegend={false}\n            />\n          </div>\n          \n          {/* Category List for Mobile */}\n          <div className=\"space-y-3 md:hidden\">\n            {topCategories.map((category, index) => {\n              const percentage = maxAmount > 0 ? (category.amount.amount / maxAmount) * 100 : 0\n              const isSelected = selectedCategory === category.category\n              \n              return (\n                <motion.div\n                  key={category.category}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.4, delay: 0.1 + index * 0.05 }}\n                  className=\"group\"\n                >\n                  <button\n                    onClick={() => handleCategoryClick(category.category)}\n                    className={cn(\n                      \"w-full text-left p-3 rounded-lg transition-all duration-200 hover:shadow-md\",\n                      isSelected \n                        ? \"bg-blue-50 border-2 border-blue-200 shadow-md\" \n                        : \"bg-gray-50 hover:bg-gray-100 border-2 border-transparent\"\n                    )}\n                    aria-label={`Filter by ${CATEGORY_LABELS[category.category]} category`}\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className={cn(\n                          \"w-3 h-3 rounded-full flex-shrink-0\",\n                          CATEGORY_COLORS[category.category]\n                        )} />\n                        <span className=\"font-medium text-gray-900\">\n                          {CATEGORY_LABELS[category.category]}\n                        </span>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"font-bold text-gray-900\">\n                          {formatCurrency(category.amount.amount, category.amount.currency)}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          {category.percentage.toFixed(1)}%\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* Progress Bar */}\n                    <div className=\"w-full bg-gray-200 rounded-full h-2 overflow-hidden\">\n                      <motion.div\n                        className={cn(\n                          \"h-full rounded-full transition-all duration-300\",\n                          CATEGORY_COLORS[category.category],\n                          isSelected && \"ring-2 ring-blue-300\"\n                        )}\n                        initial={{ width: 0 }}\n                        animate={{ width: `${percentage}%` }}\n                        transition={{ duration: 0.8, delay: 0.2 + index * 0.1 }}\n                      />\n                    </div>\n                    \n                    {/* Transaction Count */}\n                    <div className=\"mt-2 text-xs text-gray-500\">\n                      {category.transactionCount} transaction{category.transactionCount !== 1 ? 's' : ''}\n                    </div>\n                  </button>\n                </motion.div>\n              )\n            })}\n          </div>\n\n          {/* Summary */}\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.8 }}\n            className=\"pt-4 border-t border-gray-200\"\n          >\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-gray-600\">\n                {selectedCategory ? `Filtered by ${CATEGORY_LABELS[selectedCategory]}` : 'All categories shown'}\n              </span>\n              {selectedCategory && (\n                <button\n                  onClick={() => handleCategoryClick(selectedCategory)}\n                  className=\"text-blue-600 hover:text-blue-700 font-medium\"\n                >\n                  Clear filter\n                </button>\n              )}\n            </div>\n          </motion.div>\n\n          {/* Screen reader fallback table */}\n          <div className=\"sr-only\">\n            <table>\n              <caption>Spending by category breakdown</caption>\n              <thead>\n                <tr>\n                  <th>Category</th>\n                  <th>Amount</th>\n                  <th>Percentage</th>\n                  <th>Transaction Count</th>\n                </tr>\n              </thead>\n              <tbody>\n                {topCategories.map(category => (\n                  <tr key={category.category}>\n                    <td>{CATEGORY_LABELS[category.category]}</td>\n                    <td>{formatCurrency(category.amount.amount, category.amount.currency)}</td>\n                    <td>{category.percentage.toFixed(1)}%</td>\n                    <td>{category.transactionCount}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </motion.div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AATA;;;;;;;;;AAgBA,MAAM,kBAAuD;IAC3D,SAAS;IACT,OAAO;IACP,SAAS;IACT,MAAM;IACN,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,OAAO;AACT;AAEA,MAAM,kBAAuD;IAC3D,SAAS;IACT,OAAO;IACP,SAAS;IACT,MAAM;IACN,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,OAAO;AACT;AAEO,SAAS,iBAAiB,EAAE,OAAO,EAAE,SAAS,EAAyB;IAC5E,MAAM,eAAe,IAAA,qJAAe;IACpC,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,mBAAmB,aAAa,GAAG,CAAC;IAE1C,MAAM,sBAAsB,IAAA,oNAAW,EAAC,CAAC;QACvC,MAAM,SAAS,IAAI,gBAAgB,aAAa,QAAQ;QAExD,IAAI,qBAAqB,UAAU;YACjC,mDAAmD;YACnD,OAAO,MAAM,CAAC;QAChB,OAAO;YACL,8BAA8B;YAC9B,OAAO,GAAG,CAAC,YAAY;QACzB;QAEA,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI,EAAE;YAAE,QAAQ;QAAM;IACvD,GAAG;QAAC;QAAc;QAAQ;KAAiB;IAE3C,2DAA2D;IAC3D,MAAM,gBAAgB,QAAQ,iBAAiB,CAC5C,MAAM,CAAC,CAAA,MAAO,IAAI,QAAQ,KAAK,YAAY,IAAI,QAAQ,KAAK,UAC5D,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,MAAM,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,MAAM,EAChD,KAAK,CAAC,GAAG;IAEZ,MAAM,YAAY,KAAK,GAAG,IAAI,cAAc,GAAG,CAAC,CAAA,MAAO,IAAI,MAAM,CAAC,MAAM;IAExE,qBACE,8OAAC,oMAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;YAAK,OAAO;QAAI;QACxC,WAAW,IAAA,yHAAE,EAAC,YAAY;kBAE1B,cAAA,8OAAC;YAAK,WAAU;;8BACd,8OAAC;oBAAW,WAAU;;sCACpB,8OAAC;4BAAU,WAAU;sCAAkC;;;;;;sCAGvD,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;8BAIvC,8OAAC;oBAAY,WAAU;;sCAErB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,0IAAM;gCACL,MAAM,cAAc,GAAG,CAAC,CAAA,MAAO,CAAC;wCAC9B,UAAU,eAAe,CAAC,IAAI,QAAQ,CAAC;wCACvC,QAAQ,IAAI,MAAM,CAAC,MAAM;wCACzB,YAAY,IAAI,UAAU;wCAC1B,kBAAkB,IAAI,gBAAgB;wCACtC,kBAAkB,IAAI,QAAQ;oCAChC,CAAC;gCACD,MAAK;gCACL,MAAK;gCACL,OAAM;gCACN,aAAY;gCACZ,QAAQ,cAAc,GAAG,CAAC,CAAA;oCACxB,MAAM,aAAa,eAAe,CAAC,IAAI,QAAQ,CAAC;oCAChD,kDAAkD;oCAClD,MAAM,WAAmC;wCACvC,eAAe;wCACf,iBAAiB;wCACjB,iBAAiB;wCACjB,gBAAgB;wCAChB,iBAAiB;wCACjB,eAAe;wCACf,cAAc;wCACd,iBAAiB;wCACjB,eAAe;wCACf,eAAe;oCACjB;oCACA,OAAO,QAAQ,CAAC,WAAW,IAAI;gCACjC;gCACA,YAAY,CAAC,OAAS,oBAAoB,KAAK,gBAAgB;gCAC/D,eAAe,mBAAmB,cAAc,SAAS,CAAC,CAAA,MAAO,IAAI,QAAQ,KAAK,oBAAoB;gCACtG,UAAU;gCACV,WAAW;gCACX,YAAY;;;;;;;;;;;sCAKhB,8OAAC;4BAAI,WAAU;sCACZ,cAAc,GAAG,CAAC,CAAC,UAAU;gCAC5B,MAAM,aAAa,YAAY,IAAI,AAAC,SAAS,MAAM,CAAC,MAAM,GAAG,YAAa,MAAM;gCAChF,MAAM,aAAa,qBAAqB,SAAS,QAAQ;gCAEzD,qBACE,8OAAC,oMAAM,CAAC,GAAG;oCAET,SAAS;wCAAE,SAAS;wCAAG,GAAG,CAAC;oCAAG;oCAC9B,SAAS;wCAAE,SAAS;wCAAG,GAAG;oCAAE;oCAC5B,YAAY;wCAAE,UAAU;wCAAK,OAAO,MAAM,QAAQ;oCAAK;oCACvD,WAAU;8CAEV,cAAA,8OAAC;wCACC,SAAS,IAAM,oBAAoB,SAAS,QAAQ;wCACpD,WAAW,IAAA,yHAAE,EACX,+EACA,aACI,kDACA;wCAEN,cAAY,CAAC,UAAU,EAAE,eAAe,CAAC,SAAS,QAAQ,CAAC,CAAC,SAAS,CAAC;;0DAEtE,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAW,IAAA,yHAAE,EAChB,sCACA,eAAe,CAAC,SAAS,QAAQ,CAAC;;;;;;0EAEpC,8OAAC;gEAAK,WAAU;0EACb,eAAe,CAAC,SAAS,QAAQ,CAAC;;;;;;;;;;;;kEAGvC,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;0EACZ,IAAA,mIAAc,EAAC,SAAS,MAAM,CAAC,MAAM,EAAE,SAAS,MAAM,CAAC,QAAQ;;;;;;0EAElE,8OAAC;gEAAI,WAAU;;oEACZ,SAAS,UAAU,CAAC,OAAO,CAAC;oEAAG;;;;;;;;;;;;;;;;;;;0DAMtC,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,oMAAM,CAAC,GAAG;oDACT,WAAW,IAAA,yHAAE,EACX,mDACA,eAAe,CAAC,SAAS,QAAQ,CAAC,EAClC,cAAc;oDAEhB,SAAS;wDAAE,OAAO;oDAAE;oDACpB,SAAS;wDAAE,OAAO,GAAG,WAAW,CAAC,CAAC;oDAAC;oDACnC,YAAY;wDAAE,UAAU;wDAAK,OAAO,MAAM,QAAQ;oDAAI;;;;;;;;;;;0DAK1D,8OAAC;gDAAI,WAAU;;oDACZ,SAAS,gBAAgB;oDAAC;oDAAa,SAAS,gBAAgB,KAAK,IAAI,MAAM;;;;;;;;;;;;;mCApD/E,SAAS,QAAQ;;;;;4BAyD5B;;;;;;sCAIF,8OAAC,oMAAM,CAAC,GAAG;4BACT,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAG;4BAC7B,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,YAAY;gCAAE,UAAU;gCAAK,OAAO;4BAAI;4BACxC,WAAU;sCAEV,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDACb,mBAAmB,CAAC,YAAY,EAAE,eAAe,CAAC,iBAAiB,EAAE,GAAG;;;;;;oCAE1E,kCACC,8OAAC;wCACC,SAAS,IAAM,oBAAoB;wCACnC,WAAU;kDACX;;;;;;;;;;;;;;;;;sCAQP,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;;kDACC,8OAAC;kDAAQ;;;;;;kDACT,8OAAC;kDACC,cAAA,8OAAC;;8DACC,8OAAC;8DAAG;;;;;;8DACJ,8OAAC;8DAAG;;;;;;8DACJ,8OAAC;8DAAG;;;;;;8DACJ,8OAAC;8DAAG;;;;;;;;;;;;;;;;;kDAGR,8OAAC;kDACE,cAAc,GAAG,CAAC,CAAA,yBACjB,8OAAC;;kEACC,8OAAC;kEAAI,eAAe,CAAC,SAAS,QAAQ,CAAC;;;;;;kEACvC,8OAAC;kEAAI,IAAA,mIAAc,EAAC,SAAS,MAAM,CAAC,MAAM,EAAE,SAAS,MAAM,CAAC,QAAQ;;;;;;kEACpE,8OAAC;;4DAAI,SAAS,UAAU,CAAC,OAAO,CAAC;4DAAG;;;;;;;kEACpC,8OAAC;kEAAI,SAAS,gBAAgB;;;;;;;+CAJvB,SAAS,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAc5C","debugId":null}},
    {"offset": {"line": 4504, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/wrapped/TrendLineChart.tsx"],"sourcesContent":["\"use client\"\n\nimport React from \"react\"\nimport { motion } from \"framer-motion\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { MonthMetrics } from \"@/lib/types\"\nimport { formatCurrency } from \"@/lib/api\"\nimport { cn } from \"@/lib/utils\"\nimport { TrendingUp, TrendingDown } from \"lucide-react\"\nimport { VizLine } from \"@/lib/viz\"\n\ninterface TrendLineChartProps {\n  metrics: MonthMetrics\n  className?: string\n}\n\n// Generate mock daily spending data for the trend line\nfunction generateDailySpendingData(metrics: MonthMetrics) {\n  const daysInMonth = new Date(metrics.month + '-01').getDate()\n  const data: Array<{ day: string; date: string; spending: number; cumulative: number }> = []\n  \n  // Create a realistic spending pattern with some variation\n  const baseDailyAmount = metrics.spendingPatterns.averageDailySpending.amount\n  // const highestDayAmount = metrics.spendingPatterns.highestSpendingDay.amount.amount\n  \n  for (let day = 1; day <= daysInMonth; day++) {\n    // Add some realistic variation to daily spending\n    const variation = (Math.sin(day * 0.3) * 0.3 + Math.random() * 0.4 - 0.2)\n    const isWeekend = new Date(metrics.month + `-${day.toString().padStart(2, '0')}`).getDay() % 6 === 0\n    const weekendMultiplier = isWeekend ? 1.2 : 0.9\n    \n    const amount = Math.max(0, baseDailyAmount * (1 + variation) * weekendMultiplier)\n    \n    data.push({\n      day: day.toString(),\n      date: `${metrics.month}-${day.toString().padStart(2, '0')}`,\n      spending: Math.round(amount),\n      cumulative: data.length > 0 ? data[data.length - 1].cumulative + Math.round(amount) : Math.round(amount)\n    })\n  }\n  \n  return data\n}\n\nexport function TrendLineChart({ metrics, className }: TrendLineChartProps) {\n  const dailyData = generateDailySpendingData(metrics)\n  \n  const totalSpending = dailyData.reduce((sum, day) => sum + day.spending, 0)\n  const averageDaily = totalSpending / dailyData.length\n  const highestDay = dailyData.reduce((max, day) => day.spending > max.spending ? day : max, dailyData[0])\n  \n  const isTrendingUp = metrics.trends.weekOverWeek.expenseChange > 0\n  const trendIcon = isTrendingUp ? TrendingUp : TrendingDown\n  const trendColor = isTrendingUp ? \"text-red-500\" : \"text-green-500\"\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.6, delay: 0.3 }}\n      className={cn(\"relative\", className)}\n    >\n      <Card className=\"relative overflow-hidden border-0 bg-gradient-to-br from-white/90 to-white/70 backdrop-blur-sm shadow-xl\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-xl font-bold text-gray-900\">\n            Daily Spending Trend\n          </CardTitle>\n          <p className=\"text-sm text-gray-600\">\n            Your spending pattern throughout the month\n          </p>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Key Stats */}\n          <div className=\"grid grid-cols-3 gap-4\">\n            <motion.div\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.4, delay: 0.4 }}\n              className=\"text-center p-3 bg-gray-50 rounded-lg\"\n            >\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {formatCurrency(averageDaily, metrics.totalExpenses.currency, { showCents: false })}\n              </div>\n              <div className=\"text-xs text-gray-600\">Daily Average</div>\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.4, delay: 0.5 }}\n              className=\"text-center p-3 bg-gray-50 rounded-lg\"\n            >\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {highestDay.day}\n              </div>\n              <div className=\"text-xs text-gray-600\">Highest Day</div>\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.4, delay: 0.6 }}\n              className=\"text-center p-3 bg-gray-50 rounded-lg\"\n            >\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {dailyData.filter(d => d.spending > averageDaily).length}\n              </div>\n              <div className=\"text-xs text-gray-600\">Above Avg Days</div>\n            </motion.div>\n          </div>\n\n          {/* Chart */}\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.5, delay: 0.7 }}\n            className=\"h-64\"\n          >\n            <VizLine\n              data={dailyData}\n              xKey=\"day\"\n              yKey=\"spending\"\n              title=\"Daily Spending Trend\"\n              description=\"Your spending pattern throughout the month\"\n              type=\"line\"\n              strokeWidth={2}\n              responsive\n              showTooltip\n              showLegend={false}\n              onPointClick={(data) => {\n                // Optional: Handle point clicks for drill-down functionality\n                console.log('Clicked on day:', data.day, 'Spending:', data.spending)\n              }}\n            />\n          </motion.div>\n\n          {/* Trend Analysis */}\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.8 }}\n            className=\"p-4 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-100\"\n          >\n            <div className=\"flex items-center gap-3\">\n              <div className={cn(\"p-2 rounded-full\", isTrendingUp ? \"bg-red-100\" : \"bg-green-100\")}>\n                {React.createElement(trendIcon, { \n                  className: cn(\"h-4 w-4\", trendColor) \n                })}\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-900 mb-1\">Spending Trend</p>\n                <p className=\"text-sm text-gray-600\">\n                  {isTrendingUp ? (\n                    <>Your spending is <span className=\"font-semibold text-red-600\">increasing</span> by {Math.abs(metrics.trends.weekOverWeek.expenseChange).toFixed(1)}% week over week.</>\n                  ) : (\n                    <>Your spending is <span className=\"font-semibold text-green-600\">decreasing</span> by {Math.abs(metrics.trends.weekOverWeek.expenseChange).toFixed(1)}% week over week.</>\n                  )}\n                </p>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Screen reader fallback */}\n          <div className=\"sr-only\">\n            <table>\n              <caption>Daily spending data for {metrics.month}</caption>\n              <thead>\n                <tr>\n                  <th>Day</th>\n                  <th>Date</th>\n                  <th>Daily Spending</th>\n                  <th>Cumulative Spending</th>\n                </tr>\n              </thead>\n              <tbody>\n                {dailyData.map(day => (\n                  <tr key={day.day}>\n                    <td>{day.day}</td>\n                    <td>{day.date}</td>\n                    <td>{formatCurrency(day.spending, metrics.totalExpenses.currency)}</td>\n                    <td>{formatCurrency(day.cumulative, metrics.totalExpenses.currency)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </motion.div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4990, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/components/wrapped/index.ts"],"sourcesContent":["export { WrappedHero } from \"./WrappedHero\"\nexport { WrappedSummaryCard } from \"./WrappedSummaryCard\"\nexport { CategoryBarChart } from \"./CategoryBarChart\"\nexport { TrendLineChart } from \"./TrendLineChart\"\nexport { TopMerchants } from \"./TopMerchants\"\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 5005, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-transactions.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchTransactions } from \"@/lib/api\"\n\n// Query keys\nexport const transactionKeys = {\n  all: ['transactions'] as const,\n  lists: () => [...transactionKeys.all, 'list'] as const,\n  list: (page: number, limit: number) => [...transactionKeys.lists(), { page, limit }] as const,\n}\n\n// Hooks\nexport function useTransactions(page = 1, limit = 10) {\n  return useQuery({\n    queryKey: transactionKeys.list(page, limit),\n    queryFn: () => fetchTransactions({ page, limit }),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,kBAAkB;IAC7B,KAAK;QAAC;KAAe;IACrB,OAAO,IAAM;eAAI,gBAAgB,GAAG;YAAE;SAAO;IAC7C,MAAM,CAAC,MAAc,QAAkB;eAAI,gBAAgB,KAAK;YAAI;gBAAE;gBAAM;YAAM;SAAE;AACtF;AAGO,SAAS,gBAAgB,OAAO,CAAC,EAAE,QAAQ,EAAE;IAClD,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,gBAAgB,IAAI,CAAC,MAAM;QACrC,SAAS,IAAM,IAAA,sIAAiB,EAAC;gBAAE;gBAAM;YAAM;QAC/C,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 5045, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-accounts.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchMonthMetrics } from \"@/lib/api\"\n\n// Query keys\nexport const accountKeys = {\n  all: ['accounts'] as const,\n  lists: () => [...accountKeys.all, 'list'] as const,\n}\n\n// Hooks\nexport function useAccounts() {\n  return useQuery({\n    queryKey: accountKeys.lists(),\n    queryFn: () => fetchMonthMetrics(new Date().toISOString().slice(0, 7)),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,cAAc;IACzB,KAAK;QAAC;KAAW;IACjB,OAAO,IAAM;eAAI,YAAY,GAAG;YAAE;SAAO;AAC3C;AAGO,SAAS;IACd,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,YAAY,KAAK;QAC3B,SAAS,IAAM,IAAA,sIAAiB,EAAC,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;QACnE,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 5075, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-budgets.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchMonthMetrics } from \"@/lib/api\"\n\n// Query keys\nexport const budgetKeys = {\n  all: ['budgets'] as const,\n  lists: () => [...budgetKeys.all, 'list'] as const,\n}\n\n// Hooks\nexport function useBudgets() {\n  return useQuery({\n    queryKey: budgetKeys.lists(),\n    queryFn: () => fetchMonthMetrics(new Date().toISOString().slice(0, 7)),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,aAAa;IACxB,KAAK;QAAC;KAAU;IAChB,OAAO,IAAM;eAAI,WAAW,GAAG;YAAE;SAAO;AAC1C;AAGO,SAAS;IACd,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,WAAW,KAAK;QAC1B,SAAS,IAAM,IAAA,sIAAiB,EAAC,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;QACnE,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 5105, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-user.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchCurrentUser } from \"@/lib/api\"\n\n// Query keys\nexport const userKeys = {\n  all: ['user'] as const,\n  current: () => [...userKeys.all, 'current'] as const,\n}\n\n// Hooks\nexport function useCurrentUser() {\n  return useQuery({\n    queryKey: userKeys.current(),\n    queryFn: () => fetchCurrentUser(),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,WAAW;IACtB,KAAK;QAAC;KAAO;IACb,SAAS,IAAM;eAAI,SAAS,GAAG;YAAE;SAAU;AAC7C;AAGO,SAAS;IACd,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,SAAS,OAAO;QAC1B,SAAS,IAAM,IAAA,qIAAgB;QAC/B,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 5135, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-month-metrics.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { fetchMonthMetrics } from \"@/lib/api\"\n\n// Query keys\nexport const monthMetricsKeys = {\n  all: ['monthMetrics'] as const,\n  byMonth: (month: string) => [...monthMetricsKeys.all, 'byMonth', month] as const,\n}\n\n// Hooks\nexport function useMonthMetrics(month: string = new Date().toISOString().slice(0, 7)) {\n  console.log('useMonthMetrics called with month:', month)\n  \n  return useQuery({\n    queryKey: monthMetricsKeys.byMonth(month),\n    queryFn: () => {\n      console.log('Query function called for month:', month)\n      return fetchMonthMetrics(month)\n    },\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,mBAAmB;IAC9B,KAAK;QAAC;KAAe;IACrB,SAAS,CAAC,QAAkB;eAAI,iBAAiB,GAAG;YAAE;YAAW;SAAM;AACzE;AAGO,SAAS,gBAAgB,QAAgB,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG,EAAE;IAClF,QAAQ,GAAG,CAAC,sCAAsC;IAElD,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,iBAAiB,OAAO,CAAC;QACnC,SAAS;YACP,QAAQ,GAAG,CAAC,oCAAoC;YAChD,OAAO,IAAA,sIAAiB,EAAC;QAC3B;QACA,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 5170, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-transaction-filters.ts"],"sourcesContent":["\"use client\"\n\nimport { useCallback, useMemo } from \"react\"\nimport { useRouter, useSearchParams } from \"next/navigation\"\nimport { TransactionCategory } from \"@/lib/types\"\n\ninterface TransactionFilters {\n  categories: TransactionCategory[]\n  merchant: string\n  dateFrom: string\n  dateTo: string\n  sortBy: 'date' | 'amount' | 'merchant' | 'category'\n  sortOrder: 'asc' | 'desc'\n  density: 'comfortable' | 'compact'\n}\n\n// const DEFAULT_FILTERS: TransactionFilters = {\n//   categories: [],\n//   merchant: '',\n//   dateFrom: '',\n//   dateTo: '',\n//   sortBy: 'date',\n//   sortOrder: 'desc',\n//   density: 'comfortable'\n// }\n\nexport function useTransactionFilters() {\n  const router = useRouter()\n  const searchParams = useSearchParams()\n\n  const filters = useMemo(() => {\n    const categories = searchParams.get('categories')?.split(',').filter(Boolean) as TransactionCategory[] || []\n    const merchant = searchParams.get('merchant') || ''\n    const dateFrom = searchParams.get('from') || ''\n    const dateTo = searchParams.get('to') || ''\n    const sortBy = (searchParams.get('sortBy') as 'date' | 'amount' | 'merchant' | 'category') || 'date'\n    const sortOrder = (searchParams.get('sortOrder') as 'asc' | 'desc') || 'desc'\n    const density = (searchParams.get('density') as 'comfortable' | 'compact') || 'comfortable'\n\n    return {\n      categories,\n      merchant,\n      dateFrom,\n      dateTo,\n      sortBy,\n      sortOrder,\n      density\n    }\n  }, [searchParams])\n\n  const updateFilters = useCallback((updates: Partial<TransactionFilters>) => {\n    const params = new URLSearchParams(searchParams)\n    \n    // Update categories\n    if (updates.categories !== undefined) {\n      if (updates.categories.length > 0) {\n        params.set('categories', updates.categories.join(','))\n      } else {\n        params.delete('categories')\n      }\n    }\n\n    // Update merchant\n    if (updates.merchant !== undefined) {\n      if (updates.merchant) {\n        params.set('merchant', updates.merchant)\n      } else {\n        params.delete('merchant')\n      }\n    }\n\n    // Update date range\n    if (updates.dateFrom !== undefined) {\n      if (updates.dateFrom) {\n        params.set('from', updates.dateFrom)\n      } else {\n        params.delete('from')\n      }\n    }\n\n    if (updates.dateTo !== undefined) {\n      if (updates.dateTo) {\n        params.set('to', updates.dateTo)\n      } else {\n        params.delete('to')\n      }\n    }\n\n    // Update sorting\n    if (updates.sortBy !== undefined) {\n      params.set('sortBy', updates.sortBy)\n    }\n\n    if (updates.sortOrder !== undefined) {\n      params.set('sortOrder', updates.sortOrder)\n    }\n\n    // Update density\n    if (updates.density !== undefined) {\n      params.set('density', updates.density)\n    }\n\n    // Update URL\n    const newUrl = `${window.location.pathname}?${params.toString()}`\n    router.push(newUrl, { scroll: false })\n  }, [router, searchParams])\n\n  const toggleCategory = useCallback((category: TransactionCategory) => {\n    const currentCategories = filters.categories\n    const newCategories = currentCategories.includes(category)\n      ? currentCategories.filter(c => c !== category)\n      : [...currentCategories, category]\n    \n    updateFilters({ categories: newCategories })\n  }, [filters.categories, updateFilters])\n\n  const clearAllFilters = useCallback(() => {\n    updateFilters({\n      categories: [],\n      merchant: '',\n      dateFrom: '',\n      dateTo: ''\n    })\n  }, [updateFilters])\n\n  const hasActiveFilters = useMemo(() => {\n    return filters.categories.length > 0 || \n           filters.merchant.length > 0 || \n           filters.dateFrom.length > 0 || \n           filters.dateTo.length > 0\n  }, [filters.categories, filters.merchant, filters.dateFrom, filters.dateTo])\n\n  return {\n    filters,\n    updateFilters,\n    toggleCategory,\n    clearAllFilters,\n    hasActiveFilters\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5298, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/use-budget-mode.ts"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useRouter, useSearchParams } from \"next/navigation\"\n\nexport type BudgetMode = 'budget' | 'maintain'\n\nexport function useBudgetMode() {\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  const [mode, setMode] = useState<BudgetMode>('budget')\n  \n  useEffect(() => {\n    const modeParam = searchParams.get('mode')\n    if (modeParam === 'budget' || modeParam === 'maintain') {\n      setMode(modeParam)\n    }\n  }, [searchParams])\n  \n  const updateMode = (newMode: BudgetMode) => {\n    setMode(newMode)\n    \n    const params = new URLSearchParams(searchParams.toString())\n    params.set('mode', newMode)\n    \n    router.push(`/budget?${params.toString()}`, { scroll: false })\n  }\n  \n  return {\n    mode,\n    updateMode\n  }\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;AAOO,SAAS;IACd,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,eAAe,IAAA,qJAAe;IACpC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAa;IAE7C,IAAA,kNAAS,EAAC;QACR,MAAM,YAAY,aAAa,GAAG,CAAC;QACnC,IAAI,cAAc,YAAY,cAAc,YAAY;YACtD,QAAQ;QACV;IACF,GAAG;QAAC;KAAa;IAEjB,MAAM,aAAa,CAAC;QAClB,QAAQ;QAER,MAAM,SAAS,IAAI,gBAAgB,aAAa,QAAQ;QACxD,OAAO,GAAG,CAAC,QAAQ;QAEnB,OAAO,IAAI,CAAC,CAAC,QAAQ,EAAE,OAAO,QAAQ,IAAI,EAAE;YAAE,QAAQ;QAAM;IAC9D;IAEA,OAAO;QACL;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 5336, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/lib/hooks/index.ts"],"sourcesContent":["// Re-export all hooks for easier importing\nexport * from './use-transactions'\nexport * from './use-accounts'\nexport * from './use-budgets'\nexport * from './use-user'\nexport * from './use-month-metrics'\nexport * from './use-transaction-filters'\nexport * from './use-budget-mode'\n"],"names":[],"mappings":"AAAA,2CAA2C;;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 5356, "column": 0}, "map": {"version":3,"sources":["file:///Users/seungwooyoon/Programming/Financify/financify/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { WrappedHero } from \"@/components/wrapped\"\nimport { useMonthMetrics } from \"@/lib/hooks\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { useTransactions } from \"@/lib/hooks\"\nimport { Transaction } from \"@/lib/types\"\nimport { \n  Receipt,\n  Calendar,\n  Upload,\n  PiggyBank\n} from \"lucide-react\"\nimport Link from \"next/link\"\nimport { useSearchParams } from \"next/navigation\"\n\nexport default function DashboardPage() {\n  const searchParams = useSearchParams()\n  const month = searchParams.get('month') || '2025-08'\n  \n  // const { data: user } = useCurrentUser()\n  const { data: monthMetrics, isLoading: metricsLoading } = useMonthMetrics(month)\n  const { data: transactions } = useTransactions(1, 5)\n\n  // Show loading state\n  if (metricsLoading) {\n    return (\n      <main className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-muted-foreground\">Loading your financial wrapped...</p>\n        </div>\n      </main>\n    )\n  }\n\n  // Show error state if no metrics available\n  if (!monthMetrics?.data) {\n    return (\n      <main className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-3xl font-bold tracking-tight mb-4\">No Data Available</h1>\n          <p className=\"text-muted-foreground mb-6\">We couldn&apos;t load your financial data. Please try uploading some transactions first.</p>\n          <Button asChild>\n            <Link href=\"/upload\">Upload Transactions</Link>\n          </Button>\n        </div>\n      </main>\n    )\n  }\n\n  return (\n    <main>\n      {/* Wrapped Hero Section */}\n      <WrappedHero metrics={monthMetrics.data} />\n\n      {/* Additional Dashboard Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Quick Actions */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-2xl font-bold tracking-tight mb-6\">Quick Actions</h2>\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n            <Link href=\"/upload\">\n              <Card className=\"hover:shadow-md transition-shadow cursor-pointer\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Upload Transactions</CardTitle>\n                  <Upload className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Import your bank statements\n                  </p>\n                </CardContent>\n              </Card>\n            </Link>\n\n            <Link href=\"/transactions\">\n              <Card className=\"hover:shadow-md transition-shadow cursor-pointer\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">View Transactions</CardTitle>\n                  <Receipt className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Manage your transactions\n                  </p>\n                </CardContent>\n              </Card>\n            </Link>\n\n            <Link href=\"/calendar\">\n              <Card className=\"hover:shadow-md transition-shadow cursor-pointer\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Calendar View</CardTitle>\n                  <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-xs text-muted-foreground\">\n                    See your financial calendar\n                  </p>\n                </CardContent>\n              </Card>\n            </Link>\n\n            <Link href=\"/budget\">\n              <Card className=\"hover:shadow-md transition-shadow cursor-pointer\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Budget Planning</CardTitle>\n                  <PiggyBank className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Plan and track your budget\n                  </p>\n                </CardContent>\n              </Card>\n            </Link>\n          </div>\n        </div>\n\n        {/* Recent Transactions */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Recent Transactions</CardTitle>\n            <CardDescription>\n              Your latest financial activity\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {transactions?.data?.length ? (\n              <div className=\"space-y-4\">\n                {transactions.data.map((transaction: Transaction) => (\n                  <div key={transaction.id} className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className={`w-2 h-2 rounded-full ${\n                        transaction.type === 'income' ? 'bg-green-500' : 'bg-red-500'\n                      }`} />\n                      <div>\n                        <p className=\"text-sm font-medium\">{transaction.description}</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                          {transaction.category} • {new Date(transaction.date).toLocaleDateString()}\n                        </p>\n                      </div>\n                    </div>\n                    <div className={`text-sm font-medium ${\n                      transaction.type === 'income' ? 'text-green-600' : 'text-red-600'\n                    }`}>\n                      {transaction.type === 'income' ? '+' : '-'}${Math.abs(transaction.amount.amount).toLocaleString()}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-sm text-muted-foreground\">No transactions found</p>\n            )}\n            <div className=\"mt-4\">\n              <Button asChild variant=\"outline\" className=\"w-full\">\n                <Link href=\"/transactions\">View All Transactions</Link>\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </main>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}